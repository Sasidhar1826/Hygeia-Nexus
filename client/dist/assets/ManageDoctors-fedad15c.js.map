{"version":3,"file":"ManageDoctors-fedad15c.js","sources":["../../src/pages/admin/ManageDoctors.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  FaPlus,\r\n  FaEdit,\r\n  FaTrash,\r\n  FaSearch,\r\n  FaUserMd,\r\n  FaCheck,\r\n  FaTimes,\r\n  FaFilter,\r\n} from \"react-icons/fa\";\r\nimport Card from \"../../components/ui/Card\";\r\nimport Button from \"../../components/ui/Button\";\r\nimport api from \"../../services/apiService\";\r\nconst PageContainer = styled.div`\r\n  padding: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: ${(props) => props.theme.spacing(4)};\r\n  flex-wrap: wrap;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.8rem;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  padding: ${(props) => props.theme.spacing(1)};\r\n  width: 300px;\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n\r\n  svg {\r\n    margin: 0 ${(props) => props.theme.spacing(1)};\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    outline: none;\r\n    background: transparent;\r\n    flex: 1;\r\n    padding: ${(props) => props.theme.spacing(1)};\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst FiltersContainer = styled.div`\r\n  display: flex;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst FilterSelect = styled.select`\r\n  padding: ${(props) => props.theme.spacing(1)}\r\n    ${(props) => props.theme.spacing(2)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  font-size: 0.9rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst DoctorsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst DoctorCard = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst DoctorHeader = styled.div`\r\n  display: flex;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\r\n`;\r\n\r\nconst DoctorAvatar = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 50%;\r\n  background-image: url(${(props) =>\r\n    props.image || \"/images/doctor-placeholder.jpg\"});\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-right: ${(props) => props.theme.spacing(2)};\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst DoctorInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst DoctorName = styled.h2`\r\n  font-size: 1.2rem;\r\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\r\n  color: ${(props) => props.theme.colors.primary.main};\r\n`;\r\n\r\nconst DoctorSpecialization = styled.p`\r\n  font-size: 0.9rem;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\r\n`;\r\n\r\nconst DoctorDepartment = styled.p`\r\n  font-size: 0.8rem;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst DoctorContent = styled.div`\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DoctorDetails = styled.div`\r\n  margin-bottom: ${(props) => props.theme.spacing(2)};\r\n  flex: 1;\r\n`;\r\n\r\nconst DetailItem = styled.div`\r\n  margin-bottom: ${(props) => props.theme.spacing(1)};\r\n  font-size: 0.9rem;\r\n\r\n  span {\r\n    font-weight: 600;\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst StatusBadge = styled.span`\r\n  display: inline-block;\r\n  padding: ${(props) => props.theme.spacing(0.5)}\r\n    ${(props) => props.theme.spacing(1)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n  margin-top: ${(props) => props.theme.spacing(1)};\r\n\r\n  ${(props) =>\r\n    props.active\r\n      ? `\r\n      background-color: ${\r\n        props.theme.colors.status.successLight ||\r\n        props.theme.colors.status.success + \"20\"\r\n      };\r\n      color: ${props.theme.colors.status.success};\r\n    `\r\n      : `\r\n      background-color: ${\r\n        props.theme.colors.status.errorLight ||\r\n        props.theme.colors.status.error + \"20\"\r\n      };\r\n      color: ${props.theme.colors.status.error};\r\n    `}\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  margin-top: auto;\r\n  flex-wrap: wrap;\r\n\r\n  > button {\r\n    margin-bottom: ${(props) => props.theme.spacing(1)};\r\n    flex: 1 0 auto;\r\n    min-width: auto;\r\n  }\r\n`;\r\n\r\nconst LoadingMessage = styled.div`\r\n  text-align: center;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  text-align: center;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n  color: ${(props) => props.theme.colors.status.error};\r\n`;\r\n\r\nconst Modal = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst ModalContent = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n  width: 100%;\r\n  max-width: 600px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: ${(props) => props.theme.spacing(1)};\r\n  font-weight: 500;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  font-size: 1rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  font-size: 1rem;\r\n  min-height: 100px;\r\n  resize: vertical;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst ModalButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  margin-top: ${(props) => props.theme.spacing(4)};\r\n`;\r\n\r\nconst ManageDoctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedDepartment, setSelectedDepartment] = useState(\"\");\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMode, setModalMode] = useState(\"add\"); // \"add\" or \"edit\"\r\n  const [currentDoctor, setCurrentDoctor] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    contactNumber: \"\",\r\n    specialty: \"\",\r\n    licenseNumber: \"\",\r\n    department: \"\",\r\n    bio: \"\",\r\n    education: \"\",\r\n    experience: \"\",\r\n    consultationFee: \"\",\r\n    profileImage: \"\",\r\n    isActive: true,\r\n    languages: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        // Get real departments data from API\r\n        const departmentsResponse = await api.getDepartments();\r\n\r\n        if (Array.isArray(departmentsResponse)) {\r\n          setDepartments(departmentsResponse);\r\n        } else if (\r\n          departmentsResponse &&\r\n          Array.isArray(departmentsResponse.data)\r\n        ) {\r\n          setDepartments(departmentsResponse.data);\r\n        } else {\r\n          console.warn(\r\n            \"Unexpected departments response format:\",\r\n            departmentsResponse\r\n          );\r\n          setDepartments([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching departments:\", error);\r\n        setError(\"Failed to load departments. Please try again later.\");\r\n        setDepartments([]);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Use api to get doctors\r\n        const response = await api.getDoctors();\r\n\r\n        // Check for various response formats\r\n        if (Array.isArray(response)) {\r\n          setDoctors(response);\r\n          setFilteredDoctors(response);\r\n        } else if (response && response.data && Array.isArray(response.data)) {\r\n          // Handle {message, data} format\r\n          setDoctors(response.data);\r\n          setFilteredDoctors(response.data);\r\n        } else if (\r\n          response &&\r\n          response.message === \"No doctors found\" &&\r\n          response.data &&\r\n          Array.isArray(response.data)\r\n        ) {\r\n          // Empty data with message\r\n          setDoctors(response.data);\r\n          setFilteredDoctors(response.data);\r\n          console.log(\"No doctors found in the database\");\r\n        } else {\r\n          console.error(\"Invalid response format:\", response);\r\n          setDoctors([]);\r\n          setFilteredDoctors([]);\r\n          setError(\"Failed to load doctors: Invalid data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctors:\", error);\r\n        setDoctors([]);\r\n        setFilteredDoctors([]);\r\n        setError(\"Failed to load doctors. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(doctors)) {\r\n      applyFilters();\r\n    }\r\n  }, [searchTerm, selectedDepartment, selectedStatus, doctors]);\r\n\r\n  const applyFilters = (doctorsToFilter) => {\r\n    const sourceArray = doctorsToFilter || doctors;\r\n\r\n    if (!Array.isArray(sourceArray)) {\r\n      setFilteredDoctors([]);\r\n      return [];\r\n    }\r\n\r\n    let filtered = [...sourceArray];\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(\r\n        (doctor) =>\r\n          doctor.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          (doctor.specialty &&\r\n            doctor.specialty\r\n              .toLowerCase()\r\n              .includes(searchTerm.toLowerCase())) ||\r\n          (doctor.email &&\r\n            doctor.email.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    if (selectedDepartment) {\r\n      filtered = filtered.filter(\r\n        (doctor) => doctor.department === selectedDepartment\r\n      );\r\n    }\r\n\r\n    if (selectedStatus) {\r\n      const isActive = selectedStatus === \"active\";\r\n      filtered = filtered.filter((doctor) => doctor.isActive === isActive);\r\n    }\r\n\r\n    // Only set state if we're not working with a passed array\r\n    if (!doctorsToFilter) {\r\n      setFilteredDoctors(filtered);\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  const openAddModal = () => {\r\n    setModalMode(\"add\");\r\n    setFormData({\r\n      name: \"\",\r\n      email: \"\",\r\n      contactNumber: \"\",\r\n      specialty: \"\",\r\n      licenseNumber: \"\",\r\n      department: \"\",\r\n      bio: \"\",\r\n      education: \"\",\r\n      experience: \"\",\r\n      consultationFee: \"\",\r\n      profileImage: \"\",\r\n      isActive: true,\r\n      languages: [],\r\n    });\r\n    setIsModalOpen(true);\r\n    setError(null);\r\n  };\r\n\r\n  const openEditModal = (doctor) => {\r\n    setModalMode(\"edit\");\r\n    // Map the doctor data to our form structure\r\n    const doctorData = {\r\n      name: doctor.name || \"\",\r\n      email: doctor.email || \"\",\r\n      contactNumber: doctor.contactNumber || \"\",\r\n      specialty: doctor.specialty || \"\",\r\n      licenseNumber: doctor.licenseNumber || \"\",\r\n      department: doctor.department || \"\",\r\n      bio: doctor.bio || \"\",\r\n      education: doctor.education || \"\",\r\n      experience: doctor.experience || \"\",\r\n      consultationFee: doctor.consultationFee || \"\",\r\n      profileImage: doctor.profileImage || \"\",\r\n      isActive: doctor.isActive !== undefined ? doctor.isActive : true,\r\n      languages: doctor.languages || [],\r\n    };\r\n    setFormData(doctorData);\r\n    setCurrentDoctor(doctor);\r\n    setIsModalOpen(true);\r\n    setError(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setCurrentDoctor(null);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (modalMode === \"add\") {\r\n        // Validate required fields\r\n        if (!formData.specialty) {\r\n          setError(\"Specialty field is required\");\r\n          return;\r\n        }\r\n\r\n        if (!formData.licenseNumber) {\r\n          setError(\"License number is required\");\r\n          return;\r\n        }\r\n\r\n        if (!formData.department) {\r\n          setError(\"Department is required\");\r\n          return;\r\n        }\r\n\r\n        // For new doctors, we need to set a password\r\n        const doctorData = {\r\n          ...formData,\r\n          password: \"tempPassword123\", // This should be changed by the doctor on first login\r\n          role: \"doctor\",\r\n          // Ensure fields are properly formatted\r\n          specialty: formData.specialty,\r\n          department: formData.department, // Already correctly selected from dropdown\r\n          licenseNumber: formData.licenseNumber,\r\n          consultationFee: formData.consultationFee\r\n            ? Number(formData.consultationFee)\r\n            : 0,\r\n          experience: formData.experience ? Number(formData.experience) : 0,\r\n        };\r\n\r\n        try {\r\n          // Use api to add a doctor\r\n          const response = await api.createDoctor(doctorData);\r\n\r\n          // Refresh the doctors list\r\n          try {\r\n            const doctorsResponse = await api.getDoctors();\r\n            if (Array.isArray(doctorsResponse)) {\r\n              setDoctors(doctorsResponse);\r\n              setFilteredDoctors(doctorsResponse);\r\n            } else if (\r\n              doctorsResponse &&\r\n              doctorsResponse.data &&\r\n              Array.isArray(doctorsResponse.data)\r\n            ) {\r\n              setDoctors(doctorsResponse.data);\r\n              setFilteredDoctors(doctorsResponse.data);\r\n            }\r\n            closeModal();\r\n          } catch (refreshError) {\r\n            console.error(\"Error refreshing doctors list:\", refreshError);\r\n            // Close modal anyway but show error\r\n            closeModal();\r\n            setError(\"Doctor added but failed to refresh the list.\");\r\n          }\r\n        } catch (addError) {\r\n          console.error(\"Error adding doctor:\", addError);\r\n          let errorMsg =\r\n            \"Failed to add doctor. Please check the form and try again.\";\r\n\r\n          // Extract more specific error message if available\r\n          if (addError.message) {\r\n            errorMsg = addError.message;\r\n          } else if (addError.error) {\r\n            errorMsg = addError.error;\r\n          }\r\n\r\n          setError(errorMsg);\r\n        }\r\n      } else if (currentDoctor?._id) {\r\n        try {\r\n          // Use api to update a doctor\r\n          const response = await api.updateDoctor(currentDoctor._id, formData);\r\n\r\n          // Refresh the doctors list\r\n          try {\r\n            const doctorsResponse = await api.getDoctors();\r\n            if (Array.isArray(doctorsResponse)) {\r\n              setDoctors(doctorsResponse);\r\n              setFilteredDoctors(doctorsResponse);\r\n            } else if (\r\n              doctorsResponse &&\r\n              doctorsResponse.data &&\r\n              Array.isArray(doctorsResponse.data)\r\n            ) {\r\n              setDoctors(doctorsResponse.data);\r\n              setFilteredDoctors(doctorsResponse.data);\r\n            }\r\n            closeModal();\r\n          } catch (refreshError) {\r\n            console.error(\"Error refreshing doctors list:\", refreshError);\r\n            closeModal();\r\n            setError(\"Doctor updated but failed to refresh the list.\");\r\n          }\r\n        } catch (updateError) {\r\n          console.error(\"Error updating doctor:\", updateError);\r\n          setError(\r\n            \"Failed to update doctor. Please check the form and try again.\"\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving doctor:\", error);\r\n      setError(\"Failed to save doctor. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleToggleStatus = async (doctor) => {\r\n    if (!doctor || !doctor._id) {\r\n      setError(\"Cannot update doctor status: Invalid doctor data\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Use api to update a doctor's status\r\n      await api.updateDoctor(doctor._id, {\r\n        isActive: !doctor.isActive,\r\n      });\r\n\r\n      // Update the doctor in the local state\r\n      const updatedDoctors = doctors.map((d) =>\r\n        d._id === doctor._id ? { ...d, isActive: !doctor.isActive } : d\r\n      );\r\n      setDoctors(updatedDoctors);\r\n\r\n      // Apply filters on the updated doctors array\r\n      const filteredResults = applyFilters(updatedDoctors);\r\n      setFilteredDoctors(filteredResults);\r\n    } catch (error) {\r\n      console.error(\"Error toggling doctor status:\", error);\r\n      setError(\"Failed to update doctor status. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (doctorId) => {\r\n    if (!doctorId) {\r\n      setError(\"Cannot delete doctor: Invalid doctor ID\");\r\n      return;\r\n    }\r\n\r\n    if (!window.confirm(\"Are you sure you want to delete this doctor?\")) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Use api to delete a doctor\r\n      await api.deleteDoctor(doctorId);\r\n\r\n      // Remove the doctor from the local state\r\n      const updatedDoctors = doctors.filter((d) => d._id !== doctorId);\r\n      setDoctors(updatedDoctors);\r\n\r\n      // Apply filters on the updated doctors array\r\n      const filteredResults = applyFilters(updatedDoctors);\r\n      setFilteredDoctors(filteredResults);\r\n    } catch (error) {\r\n      console.error(\"Error deleting doctor:\", error);\r\n      let errorMessage = \"Failed to delete doctor. Please try again.\";\r\n\r\n      // Check for specific error responses\r\n      if (error.message) {\r\n        errorMessage = `Failed to delete doctor: ${error.message}`;\r\n      }\r\n\r\n      // Display more specific information for common errors\r\n      if (error.status === 404) {\r\n        errorMessage = \"The doctor you're trying to delete could not be found.\";\r\n      } else if (error.status === 403 || error.status === 401) {\r\n        errorMessage = \"You don't have permission to delete this doctor.\";\r\n      }\r\n\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  // Helper function to get department name by ID\r\n  const getDepartmentName = (departmentId) => {\r\n    if (!departmentId) return \"Not Assigned\";\r\n    if (!Array.isArray(departments)) return \"Unknown\";\r\n\r\n    const department = departments.find(\r\n      (dept) => dept && dept._id === departmentId\r\n    );\r\n    return department ? department.name : \"Unknown\";\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingMessage>Loading doctors...</LoadingMessage>;\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Header>\r\n        <Title>Manage Doctors</Title>\r\n        <Button onClick={openAddModal}>\r\n          <FaPlus />\r\n          Add New Doctor\r\n        </Button>\r\n      </Header>\r\n\r\n      <FiltersContainer>\r\n        <SearchContainer>\r\n          <FaSearch />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search doctors...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </SearchContainer>\r\n\r\n        <FilterSelect\r\n          value={selectedDepartment}\r\n          onChange={(e) => setSelectedDepartment(e.target.value)}\r\n        >\r\n          <option value=\"\">All Departments</option>\r\n          {departments &&\r\n            departments.length > 0 &&\r\n            departments.map((dept) => (\r\n              <option key={dept._id} value={dept._id}>\r\n                {dept.name}\r\n              </option>\r\n            ))}\r\n        </FilterSelect>\r\n\r\n        <FilterSelect\r\n          value={selectedStatus}\r\n          onChange={(e) => setSelectedStatus(e.target.value)}\r\n        >\r\n          <option value=\"\">All Status</option>\r\n          <option value=\"active\">Active</option>\r\n          <option value=\"inactive\">Inactive</option>\r\n        </FilterSelect>\r\n      </FiltersContainer>\r\n\r\n      {error && <ErrorMessage>{error}</ErrorMessage>}\r\n\r\n      {!filteredDoctors || filteredDoctors.length === 0 ? (\r\n        <ErrorMessage>No doctors found matching your criteria.</ErrorMessage>\r\n      ) : (\r\n        <DoctorsGrid>\r\n          {filteredDoctors.map((doctor) => (\r\n            <DoctorCard key={doctor._id}>\r\n              <DoctorHeader>\r\n                <DoctorAvatar image={doctor.profileImage} />\r\n                <DoctorInfo>\r\n                  <DoctorName>Dr. {doctor.name}</DoctorName>\r\n                  {doctor.specialty && (\r\n                    <DoctorSpecialization>\r\n                      {doctor.specialty}\r\n                    </DoctorSpecialization>\r\n                  )}\r\n                  {doctor.department && (\r\n                    <DoctorDepartment>\r\n                      {getDepartmentName(doctor.department)}\r\n                    </DoctorDepartment>\r\n                  )}\r\n                  <StatusBadge active={doctor.isActive}>\r\n                    {doctor.isActive ? \"Active\" : \"Inactive\"}\r\n                  </StatusBadge>\r\n                </DoctorInfo>\r\n              </DoctorHeader>\r\n\r\n              <DoctorContent>\r\n                <DoctorDetails>\r\n                  <DetailItem>\r\n                    <span>Email:</span> {doctor.email}\r\n                  </DetailItem>\r\n                  {doctor.contactNumber && (\r\n                    <DetailItem>\r\n                      <span>Contact:</span> {doctor.contactNumber}\r\n                    </DetailItem>\r\n                  )}\r\n                  {doctor.licenseNumber && (\r\n                    <DetailItem>\r\n                      <span>License:</span> {doctor.licenseNumber}\r\n                    </DetailItem>\r\n                  )}\r\n                  {doctor.consultationFee && (\r\n                    <DetailItem>\r\n                      <span>Fee:</span> ${doctor.consultationFee}\r\n                    </DetailItem>\r\n                  )}\r\n                </DoctorDetails>\r\n\r\n                <ActionButtons>\r\n                  <Button\r\n                    variant=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={() => openEditModal(doctor)}\r\n                  >\r\n                    <FaEdit />\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    variant={doctor.isActive ? \"warning\" : \"success\"}\r\n                    size=\"small\"\r\n                    onClick={() => handleToggleStatus(doctor)}\r\n                  >\r\n                    {doctor.isActive ? (\r\n                      <>\r\n                        <FaTimes />\r\n                        Deactivate\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <FaCheck />\r\n                        Activate\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    size=\"small\"\r\n                    onClick={() => handleDelete(doctor._id)}\r\n                  >\r\n                    <FaTrash />\r\n                    Delete\r\n                  </Button>\r\n                </ActionButtons>\r\n              </DoctorContent>\r\n            </DoctorCard>\r\n          ))}\r\n        </DoctorsGrid>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <Modal\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n        >\r\n          <ModalContent\r\n            initial={{ y: 20, opacity: 0 }}\r\n            animate={{ y: 0, opacity: 1 }}\r\n            transition={{ delay: 0.1 }}\r\n          >\r\n            <ModalTitle>\r\n              {modalMode === \"add\" ? \"Add New Doctor\" : \"Edit Doctor\"}\r\n            </ModalTitle>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Full Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email Address</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                  disabled={modalMode === \"edit\"}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"contactNumber\">Contact Number</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  value={formData.contactNumber}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"department\">Department</Label>\r\n                <FilterSelect\r\n                  id=\"department\"\r\n                  name=\"department\"\r\n                  value={formData.department}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select Department</option>\r\n                  {departments.map((dept) => (\r\n                    <option key={dept._id} value={dept._id}>\r\n                      {dept.name}\r\n                    </option>\r\n                  ))}\r\n                </FilterSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"specialty\">Specialty</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"specialty\"\r\n                  name=\"specialty\"\r\n                  value={formData.specialty}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"licenseNumber\">License Number</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"licenseNumber\"\r\n                  name=\"licenseNumber\"\r\n                  value={formData.licenseNumber}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"consultationFee\">Consultation Fee ($)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"consultationFee\"\r\n                  name=\"consultationFee\"\r\n                  value={formData.consultationFee}\r\n                  onChange={handleInputChange}\r\n                  min=\"0\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"bio\">Bio</Label>\r\n                <Textarea\r\n                  id=\"bio\"\r\n                  name=\"bio\"\r\n                  value={formData.bio}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"education\">Education</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"education\"\r\n                  name=\"education\"\r\n                  value={formData.education}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"experience\">Experience (years)</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"experience\"\r\n                  name=\"experience\"\r\n                  value={formData.experience}\r\n                  onChange={handleInputChange}\r\n                  min=\"0\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"profileImage\">Profile Image URL</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"profileImage\"\r\n                  name=\"profileImage\"\r\n                  value={formData.profileImage}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"https://example.com/image.jpg\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isActive\"\r\n                    checked={formData.isActive}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                  Active\r\n                </Label>\r\n              </FormGroup>\r\n\r\n              <ModalButtons>\r\n                <Button variant=\"secondary\" type=\"button\" onClick={closeModal}>\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"submit\">\r\n                  {modalMode === \"add\" ? \"Add Doctor\" : \"Save Changes\"}\r\n                </Button>\r\n              </ModalButtons>\r\n            </form>\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ManageDoctors;\r\n"],"names":["PageContainer","styled","props","Header","Title","SearchContainer","FiltersContainer","FilterSelect","DoctorsGrid","DoctorCard","Card","DoctorHeader","DoctorAvatar","DoctorInfo","DoctorName","DoctorSpecialization","DoctorDepartment","DoctorContent","DoctorDetails","DetailItem","StatusBadge","ActionButtons","LoadingMessage","ErrorMessage","Modal","motion","ModalContent","ModalTitle","FormGroup","Label","Input","Textarea","ModalButtons","ManageDoctors","doctors","setDoctors","useState","filteredDoctors","setFilteredDoctors","departments","setDepartments","searchTerm","setSearchTerm","selectedDepartment","setSelectedDepartment","selectedStatus","setSelectedStatus","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","modalMode","setModalMode","currentDoctor","setCurrentDoctor","formData","setFormData","useEffect","departmentsResponse","api","response","applyFilters","doctorsToFilter","sourceArray","filtered","doctor","_a","isActive","openAddModal","openEditModal","doctorData","closeModal","handleInputChange","e","name","value","type","checked","handleSubmit","doctorsResponse","refreshError","addError","errorMsg","updateError","handleToggleStatus","updatedDoctors","d","filteredResults","handleDelete","doctorId","errorMessage","getDepartmentName","departmentId","department","dept","jsx","jsxs","Button","FaPlus","FaSearch","FaEdit","Fragment","FaTimes","FaCheck","FaTrash"],"mappings":"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"}