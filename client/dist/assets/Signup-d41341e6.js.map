{"version":3,"file":"Signup-d41341e6.js","sources":["../../src/pages/Signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  FaUser,\r\n  FaLock,\r\n  FaEnvelope,\r\n  FaUserMd,\r\n  FaHospital,\r\n  FaFlask,\r\n  FaHeadset,\r\n  FaUserInjured,\r\n  FaKey,\r\n} from \"react-icons/fa\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nconst SignupContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n`;\r\n\r\nconst SignupImage = styled.div`\r\n  flex: 1;\r\n  background-image: url(\"/images/login-bg.jpg\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: none;\r\n\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SignupFormContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n`;\r\n\r\nconst SignupForm = styled(motion.form)`\r\n  width: 100%;\r\n  max-width: 450px;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.large};\r\n  box-shadow: ${(props) => props.theme.shadows.large};\r\n`;\r\n\r\nconst FormTitle = styled.h1`\r\n  font-size: 2rem;\r\n  margin-bottom: ${(props) => props.theme.spacing(4)};\r\n  color: ${(props) => props.theme.colors.primary.main};\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n\r\n  svg {\r\n    margin-right: ${(props) => props.theme.spacing(1.5)};\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n  }\r\n\r\n  input {\r\n    flex: 1;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 1rem;\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SelectContainer = styled(InputContainer)`\r\n  select {\r\n    flex: 1;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 1rem;\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled(motion.button)`\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  background-color: ${(props) => props.theme.colors.primary.main};\r\n  color: white;\r\n  border: none;\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.primary.light};\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: ${(props) => props.theme.colors.text.disabled};\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${(props) => props.theme.colors.status.error};\r\n  margin-bottom: ${(props) => props.theme.spacing(2)};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst InfoMessage = styled.div`\r\n  background-color: ${(props) => props.theme.colors.primary.main}20;\r\n  border-left: 4px solid ${(props) => props.theme.colors.primary.main};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-size: 0.9rem;\r\n\r\n  a {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: ${(props) => props.theme.spacing(3)};\r\n  font-size: 0.9rem;\r\n\r\n  a {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n    text-decoration: none;\r\n    font-weight: 600;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: ${(props) => props.theme.spacing(3)} 0;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    flex: 1;\r\n    border-bottom: 1px solid ${(props) => props.theme.colors.border};\r\n  }\r\n\r\n  span {\r\n    padding: 0 ${(props) => props.theme.spacing(1)};\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst PatientButton = styled(motion.button)`\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  color: ${(props) => props.theme.colors.primary.main};\r\n  border: 1px solid ${(props) => props.theme.colors.primary.main};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.primary.main}20;\r\n  }\r\n`;\r\n\r\nconst Signup = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"doctor\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [adminKey, setAdminKey] = useState(\"\");\r\n  const [needsAdminKey, setNeedsAdminKey] = useState(false);\r\n  const [licenseNumber, setLicenseNumber] = useState(\"\");\r\n  const [specialty, setSpecialty] = useState(\"\");\r\n  const [staffId, setStaffId] = useState(\"\");\r\n  const [specialization, setSpecialization] = useState(\"\");\r\n  const [showAdditionalFields, setShowAdditionalFields] = useState(true);\r\n\r\n  const { signup } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if admin key is needed based on role\r\n    setNeedsAdminKey(role === \"admin\");\r\n    // Show additional fields based on the role\r\n    setShowAdditionalFields(role !== \"receptionist\" && role !== \"nurse\");\r\n  }, [role]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setIsLoading(true);\r\n\r\n    // Validation\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setError(\"All fields are required\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setError(\"Password must be at least 6 characters long\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Role-specific validations\r\n    if (role === \"doctor\" && (!specialty || !licenseNumber)) {\r\n      setError(\"Doctors must provide specialty and license number\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (role === \"admin\" && !staffId) {\r\n      setError(\"Administrators must provide a staff ID\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (role === \"labtechnician\" && (!specialization || !licenseNumber)) {\r\n      setError(\r\n        \"Lab technicians must provide specialization and license number\"\r\n      );\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Validate admin key if trying to register as admin\r\n    if (role === \"admin\" && adminKey !== \"admin123\") {\r\n      // This is just a placeholder, in a real app this would be verified on the server\r\n      setError(\"Invalid admin key\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log(\"Submitting staff signup data:\", { name, email, role });\r\n\r\n      const userData = {\r\n        name,\r\n        email,\r\n        password,\r\n        role, // Backend will use this as userType\r\n      };\r\n\r\n      // Add role-specific fields\r\n      if (role === \"doctor\") {\r\n        userData.specialty = specialty;\r\n        userData.licenseNumber = licenseNumber;\r\n      } else if (role === \"admin\") {\r\n        userData.staffId = staffId;\r\n      } else if (role === \"labtechnician\") {\r\n        userData.specialization = specialization;\r\n        userData.licenseNumber = licenseNumber;\r\n      }\r\n\r\n      await signup(userData);\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      console.error(\"Staff signup error:\", err);\r\n      setError(\r\n        err.response?.data?.message ||\r\n          err.message ||\r\n          \"Registration failed. Please try again.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const redirectToPatientSignup = () => {\r\n    navigate(\"/patient-signup\");\r\n  };\r\n\r\n  return (\r\n    <SignupContainer>\r\n      <SignupImage />\r\n      <SignupFormContainer>\r\n        <SignupForm\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <FormTitle>\r\n            <FaHospital style={{ marginRight: \"10px\" }} />\r\n            Staff Registration\r\n          </FormTitle>\r\n\r\n          <InfoMessage>\r\n            This registration is for hospital staff only. If you are a patient,\r\n            please <Link to=\"/patient-signup\">register here</Link>.\r\n          </InfoMessage>\r\n\r\n          <PatientButton\r\n            type=\"button\"\r\n            onClick={redirectToPatientSignup}\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n          >\r\n            <FaUserInjured /> Register as a Patient\r\n          </PatientButton>\r\n\r\n          <Divider>\r\n            <span>STAFF REGISTRATION</span>\r\n          </Divider>\r\n\r\n          <FormGroup>\r\n            <InputContainer>\r\n              <FaUser />\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Full Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n              />\r\n            </InputContainer>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <InputContainer>\r\n              <FaEnvelope />\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n              />\r\n            </InputContainer>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <InputContainer>\r\n              <FaLock />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n            </InputContainer>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <InputContainer>\r\n              <FaLock />\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n            </InputContainer>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <SelectContainer>\r\n              <FaUserMd />\r\n              <select\r\n                id=\"role\"\r\n                name=\"role\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"doctor\">Doctor</option>\r\n                <option value=\"labtechnician\">Lab Technician</option>\r\n                <option value=\"nurse\">Nurse</option>\r\n                <option value=\"receptionist\">Receptionist</option>\r\n                <option value=\"admin\">Administrator</option>\r\n              </select>\r\n            </SelectContainer>\r\n          </FormGroup>\r\n\r\n          {/* Role-specific additional fields */}\r\n          {showAdditionalFields && role === \"doctor\" && (\r\n            <>\r\n              <FormGroup>\r\n                <InputContainer>\r\n                  <FaUserMd />\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"specialty\"\r\n                    name=\"specialty\"\r\n                    placeholder=\"Medical Specialty\"\r\n                    value={specialty}\r\n                    onChange={(e) => setSpecialty(e.target.value)}\r\n                    required\r\n                  />\r\n                </InputContainer>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <InputContainer>\r\n                  <FaKey />\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"licenseNumber\"\r\n                    name=\"licenseNumber\"\r\n                    placeholder=\"License Number\"\r\n                    value={licenseNumber}\r\n                    onChange={(e) => setLicenseNumber(e.target.value)}\r\n                    required\r\n                  />\r\n                </InputContainer>\r\n              </FormGroup>\r\n            </>\r\n          )}\r\n\r\n          {showAdditionalFields && role === \"labtechnician\" && (\r\n            <>\r\n              <FormGroup>\r\n                <InputContainer>\r\n                  <FaFlask />\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"specialization\"\r\n                    name=\"specialization\"\r\n                    placeholder=\"Specialization\"\r\n                    value={specialization}\r\n                    onChange={(e) => setSpecialization(e.target.value)}\r\n                    required\r\n                  />\r\n                </InputContainer>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <InputContainer>\r\n                  <FaKey />\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"licenseNumber\"\r\n                    name=\"licenseNumber\"\r\n                    placeholder=\"License Number\"\r\n                    value={licenseNumber}\r\n                    onChange={(e) => setLicenseNumber(e.target.value)}\r\n                    required\r\n                  />\r\n                </InputContainer>\r\n              </FormGroup>\r\n            </>\r\n          )}\r\n\r\n          {showAdditionalFields && role === \"admin\" && (\r\n            <FormGroup>\r\n              <InputContainer>\r\n                <FaKey />\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"staffId\"\r\n                  name=\"staffId\"\r\n                  placeholder=\"Staff ID\"\r\n                  value={staffId}\r\n                  onChange={(e) => setStaffId(e.target.value)}\r\n                  required\r\n                />\r\n              </InputContainer>\r\n            </FormGroup>\r\n          )}\r\n\r\n          {needsAdminKey && (\r\n            <FormGroup>\r\n              <InputContainer>\r\n                <FaKey />\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"adminKey\"\r\n                  name=\"adminKey\"\r\n                  placeholder=\"Admin Registration Key\"\r\n                  value={adminKey}\r\n                  onChange={(e) => setAdminKey(e.target.value)}\r\n                  required\r\n                />\r\n              </InputContainer>\r\n            </FormGroup>\r\n          )}\r\n\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n\r\n          <SubmitButton\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            {isLoading ? \"Creating Account...\" : \"Register as Staff\"}\r\n          </SubmitButton>\r\n\r\n          <LinkContainer>\r\n            Already have an account? <Link to=\"/login\">Login</Link>\r\n          </LinkContainer>\r\n        </SignupForm>\r\n      </SignupFormContainer>\r\n    </SignupContainer>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["SignupContainer","styled","props","SignupImage","SignupFormContainer","SignupForm","motion","FormTitle","FormGroup","InputContainer","SelectContainer","SubmitButton","ErrorMessage","InfoMessage","LinkContainer","Divider","PatientButton","Signup","name","setName","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","role","setRole","error","setError","isLoading","setIsLoading","adminKey","setAdminKey","needsAdminKey","setNeedsAdminKey","licenseNumber","setLicenseNumber","specialty","setSpecialty","staffId","setStaffId","specialization","setSpecialization","showAdditionalFields","setShowAdditionalFields","signup","useAuth","navigate","useNavigate","useEffect","jsx","jsxs","e","userData","err","_b","_a","FaHospital","Link","FaUserInjured","FaUser","FaEnvelope","FaLock","FaUserMd","Fragment","FaKey","FaFlask"],"mappings":"2NAiBA,MAAMA,EAAkBC,EAAO;AAAA;AAAA;AAAA,sBAGRC,GAAUA,EAAM,MAAM,OAAO,WAAW,OAAO;AAAA,EAGhEC,GAAcF,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYrBG,GAAsBH,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMrBC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAGxCG,GAAaJ,EAAOK,EAAO,IAAI;AAAA;AAAA;AAAA,aAGvBJ,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,sBACvBA,GAAUA,EAAM,MAAM,OAAO,WAAW,KAAK;AAAA,mBAChDA,GAAUA,EAAM,MAAM,aAAa,KAAK;AAAA,gBAC3CA,GAAUA,EAAM,MAAM,QAAQ,KAAK;AAAA,EAG9CK,GAAYN,EAAO;AAAA;AAAA,mBAELC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,WACxCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/CM,EAAYP,EAAO;AAAA,mBACLC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CO,EAAiBR,EAAO;AAAA;AAAA;AAAA,sBAGPC,GAAUA,EAAM,MAAM,OAAO,WAAW,OAAO;AAAA,mBAClDA,GAAUA,EAAM,MAAM,aAAa,MAAM;AAAA,aAC/CA,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,sBACzBA,GAAUA,EAAM,MAAM,OAAO,MAAM;AAAA;AAAA;AAAA,oBAGrCA,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,aACzCA,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQ3CA,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjDQ,GAAkBT,EAAOQ,CAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAM/BP,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQjDS,GAAeV,EAAOK,EAAO,MAAM;AAAA;AAAA,aAE3BJ,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,sBACzBA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA,mBAG5CA,GAAUA,EAAM,MAAM,aAAa,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOpCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,KAAK;AAAA;AAAA;AAAA;AAAA,wBAI1CA,GAAUA,EAAM,MAAM,OAAO,KAAK,QAAQ;AAAA;AAAA;AAAA,EAK7DU,GAAeX,EAAO;AAAA,WAChBC,GAAUA,EAAM,MAAM,OAAO,OAAO,KAAK;AAAA,mBACjCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,EAI9CW,GAAcZ,EAAO;AAAA,sBACJC,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA,2BACpCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA,WACzDA,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA,aACvCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,mBAC1BA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,mBAChCA,GAAUA,EAAM,MAAM,aAAa,KAAK;AAAA;AAAA;AAAA;AAAA,aAI9CA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjDY,GAAgBb,EAAO;AAAA;AAAA,gBAEZC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,aAInCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjDa,GAAUd,EAAO;AAAA;AAAA;AAAA,YAGVC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMbA,GAAUA,EAAM,MAAM,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA,iBAIjDA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,aACpCA,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA;AAAA;AAAA,EAKnDc,GAAgBf,EAAOK,EAAO,MAAM;AAAA;AAAA,aAE5BJ,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,sBACzBA,GAAUA,EAAM,MAAM,OAAO,WAAW,KAAK;AAAA,WACxDA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA,sBAC9BA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA,mBAC5CA,GAAUA,EAAM,MAAM,aAAa,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOnDA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,mBACtBA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,wBAG3BA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA,EAI5De,GAAS,IAAM,CACnB,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAS,EAAE,EAC7B,CAACC,EAAOC,CAAQ,EAAIF,WAAS,EAAE,EAC/B,CAACG,EAAUC,CAAW,EAAIJ,WAAS,EAAE,EACrC,CAACK,EAAiBC,CAAkB,EAAIN,WAAS,EAAE,EACnD,CAACO,EAAMC,CAAO,EAAIR,WAAS,QAAQ,EACnC,CAACS,EAAOC,CAAQ,EAAIV,WAAS,EAAE,EAC/B,CAACW,EAAWC,CAAY,EAAIZ,WAAS,EAAK,EAC1C,CAACa,EAAUC,CAAW,EAAId,WAAS,EAAE,EACrC,CAACe,EAAeC,CAAgB,EAAIhB,WAAS,EAAK,EAClD,CAACiB,EAAeC,CAAgB,EAAIlB,WAAS,EAAE,EAC/C,CAACmB,EAAWC,CAAY,EAAIpB,WAAS,EAAE,EACvC,CAACqB,EAASC,CAAU,EAAItB,WAAS,EAAE,EACnC,CAACuB,EAAgBC,CAAiB,EAAIxB,WAAS,EAAE,EACjD,CAACyB,EAAsBC,CAAuB,EAAI1B,WAAS,EAAI,EAE/D,CAAE,OAAA2B,GAAWC,IACbC,EAAWC,IAEjBC,OAAAA,EAAAA,UAAU,IAAM,CAEdf,EAAiBT,IAAS,OAAO,EAETmB,EAAAnB,IAAS,gBAAkBA,IAAS,OAAO,CAAA,EAClE,CAACA,CAAI,CAAC,IA+FN3B,EACC,CAAA,SAAA,CAAAoD,EAACjD,GAAY,EAAA,IACZC,GACC,CAAA,SAAAiD,EAAChD,GAAA,CACC,QAAS,CAAE,QAAS,EAAG,EAAG,EAAG,EAC7B,QAAS,CAAE,QAAS,EAAG,EAAG,CAAE,EAC5B,WAAY,CAAE,SAAU,EAAI,EAC5B,SApGa,MAAOiD,GAAM,SAMhC,GALAA,EAAE,eAAe,EACjBxB,EAAS,EAAE,EACXE,EAAa,EAAI,EAGb,CAACd,GAAQ,CAACG,GAAS,CAACE,GAAY,CAACE,EAAiB,CACpDK,EAAS,yBAAyB,EAClCE,EAAa,EAAK,EAClB,MACF,CAEA,GAAIT,IAAaE,EAAiB,CAChCK,EAAS,wBAAwB,EACjCE,EAAa,EAAK,EAClB,MACF,CAEI,GAAAT,EAAS,OAAS,EAAG,CACvBO,EAAS,6CAA6C,EACtDE,EAAa,EAAK,EAClB,MACF,CAGA,GAAIL,IAAS,WAAa,CAACY,GAAa,CAACF,GAAgB,CACvDP,EAAS,mDAAmD,EAC5DE,EAAa,EAAK,EAClB,MACF,CAEI,GAAAL,IAAS,SAAW,CAACc,EAAS,CAChCX,EAAS,wCAAwC,EACjDE,EAAa,EAAK,EAClB,MACF,CAEA,GAAIL,IAAS,kBAAoB,CAACgB,GAAkB,CAACN,GAAgB,CACnEP,EACE,gEAAA,EAEFE,EAAa,EAAK,EAClB,MACF,CAGI,GAAAL,IAAS,SAAWM,IAAa,WAAY,CAE/CH,EAAS,mBAAmB,EAC5BE,EAAa,EAAK,EAClB,MACF,CAEI,GAAA,CACF,QAAQ,IAAI,gCAAiC,CAAE,KAAAd,EAAM,MAAAG,EAAO,KAAAM,EAAM,EAElE,MAAM4B,EAAW,CACf,KAAArC,EACA,MAAAG,EACA,SAAAE,EACA,KAAAI,CAAA,EAIEA,IAAS,UACX4B,EAAS,UAAYhB,EACrBgB,EAAS,cAAgBlB,GAChBV,IAAS,QAClB4B,EAAS,QAAUd,EACVd,IAAS,kBAClB4B,EAAS,eAAiBZ,EAC1BY,EAAS,cAAgBlB,GAG3B,MAAMU,EAAOQ,CAAQ,EACrBN,EAAS,YAAY,QACdO,EAAK,CACJ,QAAA,MAAM,sBAAuBA,CAAG,EACxC1B,IACE2B,GAAAC,EAAAF,EAAI,WAAJ,YAAAE,EAAc,OAAd,YAAAD,EAAoB,UAClBD,EAAI,SACJ,wCAAA,CACJ,QACA,CACAxB,EAAa,EAAK,CACpB,CAAA,EAiBM,SAAA,CAAAqB,EAAC9C,GACC,CAAA,SAAA,CAAA6C,EAACO,EAAW,CAAA,MAAO,CAAE,YAAa,QAAU,EAAE,oBAAA,EAEhD,IAEC9C,GAAY,CAAA,SAAA,CAAA,8EAEHuC,EAAAQ,EAAA,CAAK,GAAG,kBAAkB,SAAa,gBAAA,EAAO,GAAA,EACxD,EAEAP,EAACrC,GAAA,CACC,KAAK,SACL,QA1BsB,IAAM,CACpCiC,EAAS,iBAAiB,CAAA,EA0BlB,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAAG,EAACS,EAAc,EAAA,EAAE,wBAAA,CAAA,CACnB,EAECT,EAAArC,GAAA,CACC,SAACqC,EAAA,OAAA,CAAK,6BAAkB,CAAA,EAC1B,EAEAA,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACU,EAAO,EAAA,EACRV,EAAC,QAAA,CACC,KAAK,OACL,GAAG,OACH,KAAK,OACL,YAAY,YACZ,MAAOlC,EACP,SAAWoC,GAAMnC,EAAQmC,EAAE,OAAO,KAAK,EACvC,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAEAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACW,EAAW,EAAA,EACZX,EAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,KAAK,QACL,YAAY,gBACZ,MAAO/B,EACP,SAAWiC,GAAMhC,EAASgC,EAAE,OAAO,KAAK,EACxC,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAEAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACY,EAAO,EAAA,EACRZ,EAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,KAAK,WACL,YAAY,WACZ,MAAO7B,EACP,SAAW+B,GAAM9B,EAAY8B,EAAE,OAAO,KAAK,EAC3C,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAEAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACY,EAAO,EAAA,EACRZ,EAAC,QAAA,CACC,KAAK,WACL,GAAG,kBACH,KAAK,kBACL,YAAY,mBACZ,MAAO3B,EACP,SAAW6B,GAAM5B,EAAmB4B,EAAE,OAAO,KAAK,EAClD,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAEAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC3C,GACC,CAAA,SAAA,CAAA0C,EAACa,EAAS,EAAA,EACVZ,EAAC,SAAA,CACC,GAAG,OACH,KAAK,OACL,MAAO1B,EACP,SAAW2B,GAAM1B,EAAQ0B,EAAE,OAAO,KAAK,EACvC,SAAQ,GAER,SAAA,CAACF,EAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,SAAA,CAAO,MAAM,gBAAgB,SAAc,iBAAA,EAC3CA,EAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,EAC1BA,EAAA,SAAA,CAAO,MAAM,eAAe,SAAY,eAAA,EACxCA,EAAA,SAAA,CAAO,MAAM,QAAQ,SAAa,gBAAA,CAAA,CAAA,CACrC,CAAA,CAAA,CACF,CACF,CAAA,EAGCP,GAAwBlB,IAAS,UAE9B0B,EAAAa,EAAA,CAAA,SAAA,CAACd,EAAA5C,EAAA,CACC,WAACC,EACC,CAAA,SAAA,CAAA2C,EAACa,EAAS,EAAA,EACVb,EAAC,QAAA,CACC,KAAK,OACL,GAAG,YACH,KAAK,YACL,YAAY,oBACZ,MAAOb,EACP,SAAWe,GAAMd,EAAac,EAAE,OAAO,KAAK,EAC5C,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EACAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACe,EAAM,EAAA,EACPf,EAAC,QAAA,CACC,KAAK,OACL,GAAG,gBACH,KAAK,gBACL,YAAY,iBACZ,MAAOf,EACP,SAAWiB,GAAMhB,EAAiBgB,EAAE,OAAO,KAAK,EAChD,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGDT,GAAwBlB,IAAS,iBAE9B0B,EAAAa,EAAA,CAAA,SAAA,CAACd,EAAA5C,EAAA,CACC,WAACC,EACC,CAAA,SAAA,CAAA2C,EAACgB,EAAQ,EAAA,EACThB,EAAC,QAAA,CACC,KAAK,OACL,GAAG,iBACH,KAAK,iBACL,YAAY,iBACZ,MAAOT,EACP,SAAWW,GAAMV,EAAkBU,EAAE,OAAO,KAAK,EACjD,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EACAF,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACe,EAAM,EAAA,EACPf,EAAC,QAAA,CACC,KAAK,OACL,GAAG,gBACH,KAAK,gBACL,YAAY,iBACZ,MAAOf,EACP,SAAWiB,GAAMhB,EAAiBgB,EAAE,OAAO,KAAK,EAChD,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,EAGDT,GAAwBlB,IAAS,SAC/ByB,EAAA5C,EAAA,CACC,WAACC,EACC,CAAA,SAAA,CAAA2C,EAACe,EAAM,EAAA,EACPf,EAAC,QAAA,CACC,KAAK,OACL,GAAG,UACH,KAAK,UACL,YAAY,WACZ,MAAOX,EACP,SAAWa,GAAMZ,EAAWY,EAAE,OAAO,KAAK,EAC1C,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAGDnB,GACCiB,EAAC5C,EACC,CAAA,SAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA2C,EAACe,EAAM,EAAA,EACPf,EAAC,QAAA,CACC,KAAK,WACL,GAAG,WACH,KAAK,WACL,YAAY,yBACZ,MAAOnB,EACP,SAAWqB,GAAMpB,EAAYoB,EAAE,OAAO,KAAK,EAC3C,SAAQ,EAAA,CACV,CAAA,CAAA,CACF,CACF,CAAA,EAGDzB,GAAUuB,EAAAxC,GAAA,CAAc,SAAMiB,CAAA,CAAA,EAE/BuB,EAACzC,GAAA,CACC,KAAK,SACL,SAAUoB,EACV,SAAU,CAAE,MAAO,GAAK,EAEvB,WAAY,sBAAwB,mBAAA,CACvC,IAECjB,GAAc,CAAA,SAAA,CAAA,4BACasC,EAAAQ,EAAA,CAAK,GAAG,SAAS,SAAK,QAAA,CAAA,EAClD,CAAA,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ"}