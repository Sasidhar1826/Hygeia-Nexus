{"version":3,"file":"BookAppointment-90e6b2a2.js","sources":["../../src/pages/BookAppointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n  FaCalendarAlt,\n  FaClock,\n  FaInfoCircle,\n  FaUserMd,\n  FaHospital,\n  FaMoneyBillWave,\n  FaVideo,\n  FaClinicMedical,\n  FaLaptopMedical,\n  FaExclamationCircle,\n  FaCheckCircle,\n  FaArrowRight,\n  FaPhone,\n  FaMapMarkerAlt,\n} from \"react-icons/fa\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Card from \"../components/ui/Card\";\nimport api from \"../services/apiService\";\nimport Input from \"../components/ui/Input\";\nimport Button from \"../components/ui/Button\";\n\nconst BookingContainer = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst BookingHeader = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst BookingContent = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: ${(props) => props.theme.spacing(3)};\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst DoctorInfoCard = styled(Card)`\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst DoctorHeader = styled.div`\n  display: flex;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n`;\n\nconst DoctorAvatar = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-image: url(${(props) => props.image || \"/default-doctor.png\"});\n  background-size: cover;\n  background-position: center;\n  margin-right: ${(props) => props.theme.spacing(2)};\n`;\n\nconst DoctorInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DoctorName = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst DoctorSpecialization = styled.p`\n  margin: ${(props) => props.theme.spacing(0.5)} 0;\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst DoctorDepartment = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.primary.main};\n  font-weight: 500;\n`;\n\nconst DoctorDetails = styled.div`\n  padding: ${(props) => props.theme.spacing(2)};\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${(props) => props.theme.spacing(1.5)};\n\n  svg {\n    color: ${(props) => props.theme.colors.text.secondary};\n    margin-right: ${(props) => props.theme.spacing(1)};\n    min-width: 20px;\n  }\n`;\n\nconst DetailLabel = styled.span`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-right: ${(props) => props.theme.spacing(1)};\n`;\n\nconst DetailValue = styled.span`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  font-weight: 500;\n`;\n\nconst BookingFormCard = styled(Card)`\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst FormSection = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.1rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: ${(props) => props.theme.spacing(1)};\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst DateSelector = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: ${(props) => props.theme.spacing(1)};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst DateButton = styled.button`\n  padding: ${(props) => props.theme.spacing(1)};\n  border: 1px solid\n    ${(props) =>\n      props.isSelected\n        ? props.theme.colors.primary.main\n        : props.theme.colors.border};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.light\n      : props.theme.colors.background.paper};\n  color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.contrastText\n      : props.theme.colors.text.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) =>\n      !props.isSelected && props.theme.colors.background.default};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${(props) => props.theme.colors.primary.light};\n  }\n`;\n\nconst TimeSlots = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst TimeSlot = styled.button`\n  padding: ${(props) => props.theme.spacing(1)};\n  border: 1px solid\n    ${(props) =>\n      props.isSelected\n        ? props.theme.colors.primary.main\n        : props.isAvailable\n        ? props.theme.colors.border\n        : props.theme.colors.status.error};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.light\n      : props.isAvailable\n      ? props.theme.colors.background.paper\n      : props.theme.colors.status.errorLight};\n  color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.contrastText\n      : props.isAvailable\n      ? props.theme.colors.text.primary\n      : props.theme.colors.status.error};\n  font-size: 0.8rem;\n  cursor: ${(props) => (props.isAvailable ? \"pointer\" : \"not-allowed\")};\n  opacity: ${(props) => (props.isAvailable ? 1 : 0.7)};\n\n  &:hover {\n    background-color: ${(props) =>\n      props.isAvailable && !props.isSelected\n        ? props.theme.colors.background.default\n        : props.isSelected\n        ? props.theme.colors.primary.light\n        : props.theme.colors.status.errorLight};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${(props) => props.theme.colors.primary.light};\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst InputField = styled.input`\n  width: 100%;\n  padding: ${(props) => props.theme.spacing(1)};\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  background-color: ${(props) => props.theme.colors.background.paper};\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: 0 0 0 2px ${(props) => props.theme.colors.primary.light}40;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: ${(props) => props.theme.spacing(1)};\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  background-color: ${(props) => props.theme.colors.background.paper};\n  min-height: 100px;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: 0 0 0 2px ${(props) => props.theme.colors.primary.light}40;\n  }\n`;\n\nconst AppointmentTypeSelector = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst AppointmentTypeButton = styled.button`\n  flex: 1;\n  padding: ${(props) => props.theme.spacing(1.5)};\n  border: 1px solid\n    ${(props) =>\n      props.isSelected\n        ? props.theme.colors.primary.main\n        : props.theme.colors.border};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.light\n      : props.theme.colors.background.paper};\n  color: ${(props) =>\n    props.isSelected\n      ? props.theme.colors.primary.contrastText\n      : props.theme.colors.text.primary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(0.5)};\n\n  svg {\n    font-size: 1.2rem;\n  }\n\n  &:hover {\n    background-color: ${(props) =>\n      !props.isSelected && props.theme.colors.background.default};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${(props) => props.theme.colors.primary.light};\n  }\n`;\n\nconst CheckboxGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spacing(1)};\n`;\n\nconst Checkbox = styled.input`\n  margin-right: ${(props) => props.theme.spacing(1)};\n`;\n\nconst CheckboxLabel = styled.label`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst SubmitButton = styled(motion.button)`\n  width: 100%;\n  padding: ${(props) => props.theme.spacing(1.5)};\n  background-color: ${(props) => props.theme.colors.primary.main};\n  color: white;\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.primary.dark};\n  }\n\n  &:disabled {\n    background-color: ${(props) => props.theme.colors.text.disabled};\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${(props) => props.theme.colors.status.error};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  font-size: 0.9rem;\n  padding: ${(props) => props.theme.spacing(1)};\n  background-color: ${(props) => props.theme.colors.status.errorLight};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst SuccessMessage = styled.div`\n  color: ${(props) => props.theme.colors.status.success};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  font-size: 0.9rem;\n  padding: ${(props) => props.theme.spacing(1)};\n  background-color: ${(props) => props.theme.colors.status.successLight};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst BookAppointment = () => {\n  const { doctorId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  const [doctor, setDoctor] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  // Form state\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n  const [appointmentType, setAppointmentType] = useState(\"in-person\");\n  const [reason, setReason] = useState(\"\");\n  const [additionalNotes, setAdditionalNotes] = useState(\"\");\n  const [agreeToTerms, setAgreeToTerms] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Available dates (next 7 days)\n  const availableDates = Array.from({ length: 7 }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() + i);\n    return date;\n  });\n\n  // Mock available time slots\n  const availableTimeSlots = [\n    { time: \"09:00\", available: true },\n    { time: \"09:30\", available: true },\n    { time: \"10:00\", available: false },\n    { time: \"10:30\", available: true },\n    { time: \"11:00\", available: true },\n    { time: \"11:30\", available: false },\n    { time: \"12:00\", available: false },\n    { time: \"14:00\", available: true },\n    { time: \"14:30\", available: true },\n    { time: \"15:00\", available: true },\n    { time: \"15:30\", available: false },\n    { time: \"16:00\", available: true },\n    { time: \"16:30\", available: true },\n  ];\n\n  useEffect(() => {\n    const fetchDoctor = async () => {\n      try {\n        setLoading(true);\n        const response = await api.getDoctorById(doctorId);\n        setDoctor(response);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching doctor:\", err);\n        setError(\"Failed to load doctor information. Please try again later.\");\n        setLoading(false);\n      }\n    };\n\n    fetchDoctor();\n  }, [doctorId]);\n\n  const formatDate = (date) => {\n    return new Intl.DateTimeFormat(\"en-US\", {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\",\n    }).format(date);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!selectedDate || !selectedTimeSlot || !reason) {\n      setError(\"Please fill in all required fields\");\n      return;\n    }\n\n    if (!agreeToTerms) {\n      setError(\"Please agree to the terms and conditions\");\n      return;\n    }\n\n    if (!user || !user._id) {\n      setError(\"You must be logged in to book an appointment\");\n      setTimeout(() => {\n        navigate(\"/login\");\n      }, 2000);\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n      setError(\"\");\n\n      // Ensure consistent time format (24-hour format without AM/PM)\n      const formattedStartTime = selectedTimeSlot;\n\n      // Calculate appointment end time (30 min duration)\n      const [hours, minutes] = formattedStartTime.split(\":\");\n      const startTime = new Date(selectedDate);\n      startTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n\n      const endTime = new Date(startTime);\n      endTime.setMinutes(endTime.getMinutes() + 30);\n\n      const formattedEndTime = `${endTime\n        .getHours()\n        .toString()\n        .padStart(2, \"0\")}:${endTime.getMinutes().toString().padStart(2, \"0\")}`;\n\n      // Format date for appointment\n      const appointmentDate = new Date(selectedDate)\n        .toISOString()\n        .split(\"T\")[0];\n\n      console.log(\"Creating appointment with times:\", {\n        date: appointmentDate,\n        startTime: formattedStartTime,\n        endTime: formattedEndTime,\n      });\n\n      const appointmentData = {\n        patient: user._id,\n        doctor: doctorId,\n        department: doctor.department._id,\n        appointmentDate,\n        startTime: formattedStartTime,\n        endTime: formattedEndTime,\n        reason,\n        notes: additionalNotes,\n        type: appointmentType,\n        status: \"pending\",\n      };\n\n      const response = await api.createAppointment(appointmentData);\n      console.log(\"Appointment created:\", response);\n\n      setSuccess(\"Appointment booked successfully!\");\n      setIsSubmitting(false);\n\n      // Redirect to appointments page after 2 seconds\n      setTimeout(() => {\n        navigate(\"/dashboard/appointments\");\n      }, 2000);\n    } catch (err) {\n      console.error(\"Error booking appointment:\", err);\n      setError(\n        err.response?.data?.message ||\n          \"Failed to book appointment. Please try again.\"\n      );\n      setIsSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <BookingContainer>\n        <BookingHeader>\n          <Title>Loading doctor information...</Title>\n        </BookingHeader>\n      </BookingContainer>\n    );\n  }\n\n  if (!doctor) {\n    return (\n      <BookingContainer>\n        <BookingHeader>\n          <Title>Doctor Not Found</Title>\n          <Subtitle>\n            The doctor you're looking for doesn't exist or has been removed.\n          </Subtitle>\n        </BookingHeader>\n        <ErrorMessage>\n          <FaInfoCircle />\n          {error || \"Doctor not found\"}\n        </ErrorMessage>\n      </BookingContainer>\n    );\n  }\n\n  return (\n    <BookingContainer>\n      <BookingHeader>\n        <Title>Book an Appointment</Title>\n        <Subtitle>\n          Select your preferred date and time to book an appointment with Dr.{\" \"}\n          {doctor.name}\n        </Subtitle>\n      </BookingHeader>\n\n      {error && (\n        <ErrorMessage>\n          <FaInfoCircle />\n          {error}\n        </ErrorMessage>\n      )}\n\n      {success && (\n        <SuccessMessage>\n          <FaInfoCircle />\n          {success}\n        </SuccessMessage>\n      )}\n\n      <BookingContent>\n        <DoctorInfoCard>\n          <DoctorHeader>\n            <DoctorAvatar image={doctor.profileImage} />\n            <DoctorInfo>\n              <DoctorName>Dr. {doctor.name}</DoctorName>\n              {doctor.specialization && (\n                <DoctorSpecialization>\n                  {doctor.specialization}\n                </DoctorSpecialization>\n              )}\n              {doctor.department && (\n                <DoctorDepartment>{doctor.department.name}</DoctorDepartment>\n              )}\n            </DoctorInfo>\n          </DoctorHeader>\n\n          <DoctorDetails>\n            <DetailItem>\n              <FaUserMd />\n              <DetailLabel>Experience:</DetailLabel>\n              <DetailValue>{doctor.experience || \"Not specified\"}</DetailValue>\n            </DetailItem>\n\n            <DetailItem>\n              <FaHospital />\n              <DetailLabel>Department:</DetailLabel>\n              <DetailValue>\n                {doctor.department?.name || \"Not specified\"}\n              </DetailValue>\n            </DetailItem>\n\n            <DetailItem>\n              <FaMoneyBillWave />\n              <DetailLabel>Consultation Fee:</DetailLabel>\n              <DetailValue>\n                ${doctor.consultationFee || \"Not specified\"}\n              </DetailValue>\n            </DetailItem>\n\n            {doctor.bio && (\n              <DetailItem\n                style={{ flexDirection: \"column\", alignItems: \"flex-start\" }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    marginBottom: \"8px\",\n                  }}\n                >\n                  <FaInfoCircle style={{ marginRight: \"8px\" }} />\n                  <DetailLabel>About:</DetailLabel>\n                </div>\n                <DetailValue style={{ lineHeight: \"1.5\" }}>\n                  {doctor.bio}\n                </DetailValue>\n              </DetailItem>\n            )}\n          </DoctorDetails>\n        </DoctorInfoCard>\n\n        <BookingFormCard>\n          <form onSubmit={handleSubmit}>\n            <FormSection>\n              <SectionTitle>\n                <FaCalendarAlt />\n                Select Date\n              </SectionTitle>\n              <DateSelector>\n                {availableDates.map((date) => (\n                  <DateButton\n                    key={date.toISOString()}\n                    type=\"button\"\n                    isSelected={\n                      selectedDate &&\n                      new Date(selectedDate).toDateString() ===\n                        date.toDateString()\n                    }\n                    onClick={() => setSelectedDate(date.toISOString())}\n                  >\n                    {formatDate(date)}\n                  </DateButton>\n                ))}\n              </DateSelector>\n            </FormSection>\n\n            <FormSection>\n              <SectionTitle>\n                <FaClock />\n                Select Time\n              </SectionTitle>\n              <TimeSlots>\n                {availableTimeSlots.map((slot) => (\n                  <TimeSlot\n                    key={slot.time}\n                    type=\"button\"\n                    isAvailable={slot.available}\n                    isSelected={selectedTimeSlot === slot.time}\n                    onClick={() =>\n                      slot.available && setSelectedTimeSlot(slot.time)\n                    }\n                    disabled={!slot.available}\n                  >\n                    {slot.time}\n                  </TimeSlot>\n                ))}\n              </TimeSlots>\n            </FormSection>\n\n            <FormSection>\n              <SectionTitle>\n                <FaInfoCircle />\n                Appointment Type\n              </SectionTitle>\n              <AppointmentTypeSelector>\n                <AppointmentTypeButton\n                  type=\"button\"\n                  isSelected={appointmentType === \"in-person\"}\n                  onClick={() => setAppointmentType(\"in-person\")}\n                >\n                  <FaUserMd />\n                  In-Person\n                </AppointmentTypeButton>\n                <AppointmentTypeButton\n                  type=\"button\"\n                  isSelected={appointmentType === \"video\"}\n                  onClick={() => setAppointmentType(\"video\")}\n                >\n                  <FaVideo />\n                  Video Call\n                </AppointmentTypeButton>\n              </AppointmentTypeSelector>\n            </FormSection>\n\n            <FormSection>\n              <SectionTitle>\n                <FaInfoCircle />\n                Appointment Details\n              </SectionTitle>\n              <FormGroup>\n                <Label htmlFor=\"reason\">Reason for Visit *</Label>\n                <InputField\n                  id=\"reason\"\n                  name=\"reason\"\n                  type=\"text\"\n                  value={reason}\n                  onChange={(e) => setReason(e.target.value)}\n                  placeholder=\"Brief reason for appointment\"\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"notes\">Additional Notes</Label>\n                <TextArea\n                  id=\"additionalNotes\"\n                  name=\"additionalNotes\"\n                  value={additionalNotes}\n                  onChange={(e) => setAdditionalNotes(e.target.value)}\n                  placeholder=\"Any additional information you'd like the doctor to know\"\n                />\n              </FormGroup>\n\n              <CheckboxGroup>\n                <Checkbox\n                  type=\"checkbox\"\n                  id=\"agreeToTerms\"\n                  name=\"agreeToTerms\"\n                  checked={agreeToTerms}\n                  onChange={(e) => setAgreeToTerms(e.target.checked)}\n                />\n                <CheckboxLabel htmlFor=\"agreeToTerms\">\n                  I agree to the terms and conditions for booking an appointment\n                </CheckboxLabel>\n              </CheckboxGroup>\n            </FormSection>\n\n            <SubmitButton\n              type=\"submit\"\n              disabled={isSubmitting}\n              whileTap={{ scale: 0.95 }}\n            >\n              <FaCalendarAlt />\n              {isSubmitting ? \"Booking Appointment...\" : \"Book Appointment\"}\n            </SubmitButton>\n          </form>\n        </BookingFormCard>\n      </BookingContent>\n    </BookingContainer>\n  );\n};\n\nexport default BookAppointment;\n"],"names":["BookingContainer","styled","props","BookingHeader","Title","Subtitle","BookingContent","DoctorInfoCard","Card","DoctorHeader","DoctorAvatar","DoctorInfo","DoctorName","DoctorSpecialization","DoctorDepartment","DoctorDetails","DetailItem","DetailLabel","DetailValue","BookingFormCard","FormSection","SectionTitle","DateSelector","DateButton","TimeSlots","TimeSlot","FormGroup","Label","InputField","TextArea","AppointmentTypeSelector","AppointmentTypeButton","CheckboxGroup","Checkbox","CheckboxLabel","SubmitButton","motion","ErrorMessage","SuccessMessage","BookAppointment","doctorId","useParams","navigate","useNavigate","user","useAuth","doctor","setDoctor","useState","loading","setLoading","error","setError","success","setSuccess","selectedDate","setSelectedDate","selectedTimeSlot","setSelectedTimeSlot","appointmentType","setAppointmentType","reason","setReason","additionalNotes","setAdditionalNotes","agreeToTerms","setAgreeToTerms","isSubmitting","setIsSubmitting","availableDates","_","i","date","availableTimeSlots","useEffect","response","api","err","formatDate","handleSubmit","e","formattedStartTime","hours","minutes","startTime","endTime","formattedEndTime","appointmentDate","appointmentData","_b","_a","jsx","jsxs","FaInfoCircle","FaUserMd","FaHospital","FaMoneyBillWave","FaCalendarAlt","FaClock","slot","FaVideo"],"mappings":"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"}