{"version":3,"file":"Doctors-3d58b6e3.js","sources":["../../src/pages/Doctors.jsx"],"sourcesContent":["import React, { useState, useEffect, forwardRef } from \"react\";\nimport { useLocation, useNavigate, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n  FaUserMd,\n  FaSearch,\n  FaFilter,\n  FaStar,\n  FaCalendarAlt,\n} from \"react-icons/fa\";\nimport Card from \"../components/ui/Card\";\nimport api from \"../services/apiService\";\n\nconst DoctorsContainer = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  padding: ${(props) => props.theme.spacing(1)};\n  width: 300px;\n  border: 1px solid ${(props) => props.theme.colors.border};\n\n  svg {\n    margin: 0 ${(props) => props.theme.spacing(1)};\n    color: ${(props) => props.theme.colors.text.secondary};\n  }\n\n  input {\n    flex: 1;\n    border: none;\n    background: transparent;\n    padding: ${(props) => props.theme.spacing(1)};\n    font-size: 0.9rem;\n    color: ${(props) => props.theme.colors.text.primary};\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  flex-wrap: wrap;\n`;\n\nconst FilterSelect = styled.select`\n  padding: ${(props) => props.theme.spacing(1)}\n    ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  border: 1px solid ${(props) => props.theme.colors.border};\n  background-color: ${(props) => props.theme.colors.background.paper};\n  color: ${(props) => props.theme.colors.text.primary};\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst DoctorsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: ${(props) => props.theme.spacing(3)};\n`;\n\nconst DoctorCard = styled(motion(Card))`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst DoctorHeader = styled.div`\n  display: flex;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\n`;\n\nconst DoctorAvatar = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-image: url(${(props) =>\n    props.image || \"/images/doctor-placeholder.jpg\"});\n  background-size: cover;\n  background-position: center;\n  margin-right: ${(props) => props.theme.spacing(2)};\n  flex-shrink: 0;\n`;\n\nconst DoctorInfo = styled.div`\n  flex: 1;\n`;\n\nconst DoctorName = styled.h2`\n  font-size: 1.2rem;\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n  color: ${(props) => props.theme.colors.primary.main};\n`;\n\nconst DoctorSpecialization = styled.p`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n`;\n\nconst DoctorDepartment = styled.p`\n  font-size: 0.8rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-weight: 500;\n`;\n\nconst DoctorContent = styled.div`\n  padding: ${(props) => props.theme.spacing(2)};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DoctorBio = styled.p`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  flex: 1;\n`;\n\nconst DoctorFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spacing(1)};\n`;\n\nconst ConsultationFee = styled.span`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst BookAppointmentButton = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primary.main};\n  color: white;\n  padding: ${(props) => props.theme.spacing(1)}\n    ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  text-decoration: none;\n  font-weight: 500;\n  transition: background-color 0.3s;\n\n  svg {\n    margin-right: ${(props) => props.theme.spacing(1)};\n  }\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.primary.dark};\n  }\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: ${(props) => props.theme.spacing(4)};\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: ${(props) => props.theme.spacing(4)};\n  color: ${(props) => props.theme.colors.status.error};\n`;\n\nconst Doctors = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  const departmentId = queryParams.get(\"department\");\n\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState(\n    departmentId || \"\"\n  );\n  const [specializations, setSpecializations] = useState([]);\n  const [selectedSpecialization, setSelectedSpecialization] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch departments\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        // Use api instead of mockApi\n        const response = await api.getDepartments();\n        setDepartments(response);\n      } catch (error) {\n        console.error(\"Error fetching departments:\", error);\n      }\n    };\n\n    fetchDepartments();\n  }, []);\n\n  // Fetch doctors\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        setLoading(true);\n\n        // Prepare filter parameters\n        const filters = {};\n        if (selectedDepartment) {\n          filters.department = selectedDepartment;\n        }\n        if (selectedSpecialization) {\n          filters.specialization = selectedSpecialization;\n        }\n\n        // Use api instead of mockApi\n        const response = await api.getDoctors(filters);\n\n        // Ensure response is an array\n        const doctorsArray = Array.isArray(response)\n          ? response\n          : response && response.data\n          ? response.data\n          : [];\n\n        setDoctors(doctorsArray);\n        setFilteredDoctors(doctorsArray);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching doctors:\", error);\n        setError(\"Failed to load doctors. Please try again later.\");\n        setDoctors([]);\n        setFilteredDoctors([]);\n        setLoading(false);\n      }\n    };\n\n    fetchDoctors();\n  }, [selectedDepartment, selectedSpecialization]);\n\n  // Filter doctors based on search term\n  useEffect(() => {\n    if (!Array.isArray(doctors)) {\n      console.error(\"Doctors is not an array:\", doctors);\n      setFilteredDoctors([]);\n      return;\n    }\n\n    if (searchTerm.trim() === \"\") {\n      setFilteredDoctors(doctors);\n    } else {\n      const filtered = doctors.filter(\n        (doc) =>\n          doc.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          (doc.specialization &&\n            doc.specialization\n              .toLowerCase()\n              .includes(searchTerm.toLowerCase())) ||\n          (doc.bio && doc.bio.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n      setFilteredDoctors(filtered);\n    }\n  }, [searchTerm, doctors]);\n\n  // Update URL when department changes\n  useEffect(() => {\n    const params = new URLSearchParams();\n\n    if (selectedDepartment) {\n      params.append(\"department\", selectedDepartment);\n    }\n\n    navigate(\n      {\n        pathname: location.pathname,\n        search: params.toString(),\n      },\n      { replace: true }\n    );\n  }, [selectedDepartment, navigate, location.pathname]);\n\n  const handleDepartmentChange = (e) => {\n    setSelectedDepartment(e.target.value);\n    setSelectedSpecialization(\"\");\n  };\n\n  if (loading) {\n    return <LoadingMessage>Loading doctors...</LoadingMessage>;\n  }\n\n  if (error) {\n    return <ErrorMessage>{error}</ErrorMessage>;\n  }\n\n  return (\n    <DoctorsContainer>\n      <Header>\n        <Title>Our Doctors</Title>\n        <SearchContainer>\n          <FaSearch />\n          <input\n            type=\"text\"\n            placeholder=\"Search doctors...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </SearchContainer>\n      </Header>\n\n      <FiltersContainer>\n        <FilterSelect\n          value={selectedDepartment}\n          onChange={handleDepartmentChange}\n        >\n          <option value=\"\">All Departments</option>\n          {Array.isArray(departments) &&\n            departments.map((dept) => (\n              <option key={dept._id} value={dept._id}>\n                {dept.name}\n              </option>\n            ))}\n        </FilterSelect>\n\n        <FilterSelect\n          value={selectedSpecialization}\n          onChange={(e) => setSelectedSpecialization(e.target.value)}\n          disabled={specializations.length === 0}\n        >\n          <option value=\"\">All Specializations</option>\n          {Array.isArray(specializations) &&\n            specializations.map((spec) => (\n              <option key={spec} value={spec}>\n                {spec}\n              </option>\n            ))}\n        </FilterSelect>\n      </FiltersContainer>\n\n      {!Array.isArray(filteredDoctors) || filteredDoctors.length === 0 ? (\n        <ErrorMessage>No doctors found matching your criteria.</ErrorMessage>\n      ) : (\n        <DoctorsGrid>\n          {filteredDoctors.map((doctor) => (\n            <DoctorCard\n              key={doctor._id || `doctor-${Math.random()}`}\n              whileHover={{ y: -5 }}\n              transition={{ duration: 0.2 }}\n            >\n              <DoctorHeader>\n                <DoctorAvatar image={doctor.profileImage} />\n                <DoctorInfo>\n                  <DoctorName>Dr. {doctor.name || \"Unknown\"}</DoctorName>\n                  {doctor.specialization && (\n                    <DoctorSpecialization>\n                      {doctor.specialization}\n                    </DoctorSpecialization>\n                  )}\n                  {doctor.department && (\n                    <DoctorDepartment>\n                      {typeof doctor.department === \"object\" &&\n                      doctor.department.name\n                        ? doctor.department.name\n                        : \"Department information not available\"}\n                    </DoctorDepartment>\n                  )}\n                </DoctorInfo>\n              </DoctorHeader>\n              <DoctorContent>\n                <DoctorBio>\n                  {doctor.bio || \"No bio available for this doctor.\"}\n                </DoctorBio>\n                <DoctorFooter>\n                  <ConsultationFee>\n                    Fee: ${doctor.consultationFee || \"N/A\"}\n                  </ConsultationFee>\n                  <BookAppointmentButton\n                    to={`/dashboard/book-appointment/${doctor._id}`}\n                  >\n                    <FaCalendarAlt />\n                    Book Appointment\n                  </BookAppointmentButton>\n                </DoctorFooter>\n              </DoctorContent>\n            </DoctorCard>\n          ))}\n        </DoctorsGrid>\n      )}\n    </DoctorsContainer>\n  );\n};\n\nexport default Doctors;\n"],"names":["DoctorsContainer","styled","props","Header","Title","SearchContainer","FiltersContainer","FilterSelect","DoctorsGrid","DoctorCard","motion","Card","DoctorHeader","DoctorAvatar","DoctorInfo","DoctorName","DoctorSpecialization","DoctorDepartment","DoctorContent","DoctorBio","DoctorFooter","ConsultationFee","BookAppointmentButton","Link","LoadingMessage","ErrorMessage","Doctors","location","useLocation","navigate","useNavigate","departmentId","doctors","setDoctors","useState","filteredDoctors","setFilteredDoctors","searchTerm","setSearchTerm","departments","setDepartments","selectedDepartment","setSelectedDepartment","specializations","setSpecializations","selectedSpecialization","setSelectedSpecialization","loading","setLoading","error","setError","useEffect","response","api","filters","doctorsArray","filtered","doc","_a","params","handleDepartmentChange","e","jsx","jsxs","FaSearch","dept","spec","doctor","FaCalendarAlt"],"mappings":"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"}