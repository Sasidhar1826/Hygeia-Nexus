{"version":3,"file":"LabReportCard-3ba92b1f.js","sources":["../../src/components/modals/ViewLabReport.jsx","../../src/components/medical/LabReportCard.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport {\n  FaTimes,\n  FaVial,\n  FaUser,\n  FaCalendarAlt,\n  FaFileMedical,\n  FaPrint,\n  FaDownload,\n} from \"react-icons/fa\";\n\nconst ModalBackdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst ModalContent = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  padding: ${(props) => props.theme.spacing(4)};\n  width: 100%;\n  max-width: 700px;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: ${(props) => props.theme.spacing(2)};\n  right: ${(props) => props.theme.spacing(2)};\n  background: none;\n  border: none;\n  font-size: 1.2rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(1)};\n  border-radius: 50%;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.background.default};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n`;\n\nconst ReportHeader = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n  padding-bottom: ${(props) => props.theme.spacing(3)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst Title = styled.h2`\n  font-size: 1.4rem;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  color: ${(props) => props.theme.colors.text.primary};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: ${(props) => props.theme.spacing(3)};\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InfoCard = styled.div`\n  padding: ${(props) => props.theme.spacing(2)};\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n`;\n\nconst InfoTitle = styled.div`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst InfoValue = styled.div`\n  font-size: 1rem;\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst ResultsTable = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst ResultsRow = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:first-child {\n    background-color: ${(props) => props.theme.colors.background.default};\n    font-weight: 600;\n  }\n`;\n\nconst ResultsCell = styled.div`\n  padding: ${(props) => props.theme.spacing(2)};\n  flex: ${(props) => props.flex || \"1\"};\n`;\n\nconst Notes = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n  padding: ${(props) => props.theme.spacing(3)};\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n`;\n\nconst NotesTitle = styled.div`\n  font-weight: 600;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(2)};\n  justify-content: flex-end;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  padding: ${(props) => props.theme.spacing(1.5)}\n    ${(props) => props.theme.spacing(3)};\n  background-color: ${(props) =>\n    props.variant === \"secondary\"\n      ? props.theme.colors.background.default\n      : props.theme.colors.primary.main};\n  color: ${(props) =>\n    props.variant === \"secondary\" ? props.theme.colors.text.primary : \"white\"};\n  border: ${(props) =>\n    props.variant === \"secondary\"\n      ? `1px solid ${props.theme.colors.border.main}`\n      : \"none\"};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.variant === \"secondary\"\n        ? props.theme.colors.background.paper\n        : props.theme.colors.primary.dark};\n  }\n`;\n\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n};\n\nconst ViewLabReport = ({ isOpen, onClose, report }) => {\n  if (!report) return null;\n\n  // Format reportDate as a readable string\n  const formattedDate = formatDate(report.date || new Date().toISOString());\n\n  // Extract results data from the lab report\n  const hasResults = report.results && Object.keys(report.results).length > 0;\n  const hasComponents = report.components && report.components.length > 0;\n\n  // Choose which data source to use for display\n  let displayResults = [];\n\n  if (hasComponents) {\n    // If we have components array, use that (preferred format)\n    displayResults = report.components;\n  } else if (hasResults && typeof report.results === \"object\") {\n    // Otherwise convert the results object to an array\n    displayResults = Object.entries(report.results).map(([name, value]) => ({\n      name,\n      value,\n      unit: report.units?.[name] || \"\",\n      flagged: report.flaggedResults?.[name] || false,\n    }));\n  }\n\n  // Get patient and technician details\n  const patientName =\n    report.patientName || (report.patient ? report.patient.name : \"Unknown\");\n  const patientId =\n    report.patientId || (report.patient ? report.patient._id : \"Not specified\");\n  const technicianName =\n    report.technicianName ||\n    (report.technician ? report.technician.name : \"Unknown\");\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <ModalBackdrop\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          onClick={onClose}\n        >\n          <ModalContent\n            initial={{ y: 50, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: 50, opacity: 0 }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <CloseButton onClick={onClose}>\n              <FaTimes />\n            </CloseButton>\n\n            <ReportHeader>\n              <Title>\n                <FaVial />{\" \"}\n                {report.testType || report.reportType || \"Laboratory Report\"}\n              </Title>\n              <div style={{ color: \"#666\", fontSize: \"0.9rem\" }}>\n                {formattedDate}\n              </div>\n            </ReportHeader>\n\n            <InfoGrid>\n              <InfoCard>\n                <InfoTitle>\n                  <FaUser /> Patient Information\n                </InfoTitle>\n                <InfoValue>{patientName}</InfoValue>\n                <div\n                  style={{\n                    fontSize: \"0.9rem\",\n                    color: \"#666\",\n                    marginTop: \"4px\",\n                  }}\n                >\n                  ID: {patientId}\n                </div>\n              </InfoCard>\n\n              <InfoCard>\n                <InfoTitle>\n                  <FaCalendarAlt /> Test Details\n                </InfoTitle>\n                <InfoValue>\n                  {report.testType || report.reportType || \"Laboratory Test\"}\n                </InfoValue>\n                <div\n                  style={{\n                    fontSize: \"0.9rem\",\n                    color: \"#666\",\n                    marginTop: \"4px\",\n                  }}\n                >\n                  Collected: {formattedDate}\n                </div>\n              </InfoCard>\n            </InfoGrid>\n\n            <ResultsTable>\n              <ResultsRow>\n                <ResultsCell flex=\"2\">Parameter</ResultsCell>\n                <ResultsCell>Result</ResultsCell>\n                <ResultsCell>Reference Range</ResultsCell>\n                <ResultsCell>Status</ResultsCell>\n              </ResultsRow>\n\n              {displayResults.length > 0 ? (\n                displayResults.map((item, index) => (\n                  <ResultsRow key={index}>\n                    <ResultsCell flex=\"2\">{item.name}</ResultsCell>\n                    <ResultsCell>\n                      {item.value} {item.unit}\n                    </ResultsCell>\n                    <ResultsCell>\n                      {item.referenceRange || \"Not specified\"}\n                    </ResultsCell>\n                    <ResultsCell>\n                      {item.flagged ? (\n                        <span style={{ color: \"#e53935\", fontWeight: 600 }}>\n                          Abnormal\n                        </span>\n                      ) : (\n                        <span style={{ color: \"#4caf50\" }}>Normal</span>\n                      )}\n                    </ResultsCell>\n                  </ResultsRow>\n                ))\n              ) : (\n                <ResultsRow>\n                  <ResultsCell colSpan=\"4\" style={{ textAlign: \"center\" }}>\n                    {typeof report.results === \"string\" ? (\n                      <div\n                        style={{ whiteSpace: \"pre-wrap\", margin: 0 }}\n                        dangerouslySetInnerHTML={{ __html: report.results }}\n                      />\n                    ) : (\n                      \"No detailed results available\"\n                    )}\n                  </ResultsCell>\n                </ResultsRow>\n              )}\n            </ResultsTable>\n\n            {report.interpretation && (\n              <Notes>\n                <NotesTitle>Interpretation</NotesTitle>\n                <div>{report.interpretation}</div>\n              </Notes>\n            )}\n\n            {report.notes && (\n              <Notes>\n                <NotesTitle>Notes</NotesTitle>\n                <div>{report.notes}</div>\n              </Notes>\n            )}\n\n            <ActionButtons>\n              <Button variant=\"secondary\">\n                <FaPrint /> Print Report\n              </Button>\n              <Button>\n                <FaDownload /> Download PDF\n              </Button>\n            </ActionButtons>\n          </ModalContent>\n        </ModalBackdrop>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ViewLabReport;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n  FaFlask,\n  FaCalendarAlt,\n  FaUser,\n  FaDownload,\n  FaPrint,\n  FaChevronDown,\n  FaChevronUp,\n  FaExclamationTriangle,\n  FaCheck,\n  FaVial,\n  FaMicroscope,\n  FaChartBar,\n  FaStethoscope,\n} from \"react-icons/fa\";\n\nconst ReportCard = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.small};\n  overflow: hidden;\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst ReportHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${(props) => props.theme.spacing(2)};\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n  cursor: pointer;\n`;\n\nconst ReportTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.text.primary};\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst ReportBadge = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${(props) =>\n    `${props.theme.spacing(0.5)} ${props.theme.spacing(1)}`};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) =>\n    props.$abnormal\n      ? `${props.theme.colors.status.error}20`\n      : `${props.theme.colors.success}20`};\n  color: ${(props) =>\n    props.$abnormal\n      ? props.theme.colors.status.error\n      : props.theme.colors.success};\n  font-size: 0.8rem;\n  font-weight: 500;\n  margin-left: ${(props) => props.theme.spacing(2)};\n`;\n\nconst ReportDate = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst ReportContent = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n  display: ${(props) => (props.$isExpanded ? \"block\" : \"none\")};\n`;\n\nconst InfoGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: ${(props) => props.theme.spacing(3)};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n`;\n\nconst InfoSection = styled.div`\n  background-color: ${(props) => props.theme.colors.background.default};\n  padding: ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  height: fit-content;\n`;\n\nconst SectionTitle = styled.div`\n  font-weight: 600;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  color: ${(props) => props.theme.colors.text.primary};\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst ResultsTable = styled.div`\n  width: 100%;\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  overflow: hidden;\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst ResultsRow = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 2fr 1fr;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:nth-child(odd) {\n    background-color: ${(props) => props.theme.colors.background.default};\n  }\n\n  &:first-child {\n    background-color: ${(props) => props.theme.colors.background.default};\n    font-weight: 600;\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n`;\n\nconst ResultsHeaderRow = styled(ResultsRow)`\n  background-color: ${(props) => props.theme.colors.primary.main}10 !important;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.text.primary};\n  padding: ${(props) => props.theme.spacing(1.5)}\n    ${(props) => props.theme.spacing(2)};\n`;\n\nconst ResultsCell = styled.div`\n  padding: ${(props) => props.theme.spacing(1.5)}\n    ${(props) => props.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.$abnormal &&\n    `\n    color: ${props.theme.colors.status.error};\n    font-weight: 600;\n  `}\n`;\n\nconst NotesSection = styled.div`\n  margin-top: ${(props) => props.theme.spacing(3)};\n  padding: ${(props) => props.theme.spacing(2)};\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  white-space: pre-line;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-top: ${(props) => props.theme.spacing(3)};\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  padding: ${(props) => `${props.theme.spacing(1)} ${props.theme.spacing(2)}`};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) =>\n    props.variant === \"secondary\"\n      ? props.theme.colors.background.default\n      : props.theme.colors.primary.main};\n  color: ${(props) =>\n    props.variant === \"secondary\" ? props.theme.colors.text.primary : \"white\"};\n  border: 1px solid\n    ${(props) =>\n      props.variant === \"secondary\"\n        ? props.theme.colors.border.main\n        : props.theme.colors.primary.main};\n  cursor: pointer;\n  font-size: 0.9rem;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.variant === \"secondary\"\n        ? props.theme.colors.background.paper\n        : props.theme.colors.primary.dark};\n  }\n`;\n\nconst StatusIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 0.9rem;\n  gap: ${(props) => props.theme.spacing(0.5)};\n  color: ${(props) =>\n    props.$abnormal\n      ? props.theme.colors.status.error\n      : props.theme.colors.success};\n`;\n\nconst SummaryCard = styled.div`\n  background-color: ${(props) => `${props.theme.colors.primary.main}10`};\n  padding: ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst SummaryItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  color: ${(props) =>\n    props.$abnormal\n      ? props.theme.colors.status.error\n      : props.theme.colors.text.primary};\n  font-weight: ${(props) => (props.$abnormal ? \"600\" : \"normal\")};\n  padding: ${(props) => props.theme.spacing(0.5)} 0;\n\n  svg {\n    color: ${(props) =>\n      props.$abnormal\n        ? props.theme.colors.status.error\n        : props.theme.colors.primary.main};\n  }\n`;\n\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n};\n\n// Reference ranges for common lab tests\nconst referenceRanges = {\n  // Complete Blood Count\n  \"White Blood Cells\": { min: 4.5, max: 11.0, unit: \"thousand/μL\" },\n  \"Red Blood Cells\": { min: 4.5, max: 5.9, unit: \"million/μL\" },\n  Hemoglobin: { min: 13.5, max: 17.5, unit: \"g/dL\" },\n  Hematocrit: { min: 41, max: 50, unit: \"%\" },\n  Platelets: { min: 150, max: 450, unit: \"thousand/μL\" },\n  // Metabolic Panel\n  Glucose: { min: 70, max: 99, unit: \"mg/dL\" },\n  BUN: { min: 7, max: 20, unit: \"mg/dL\" },\n  Creatinine: { min: 0.6, max: 1.2, unit: \"mg/dL\" },\n  Sodium: { min: 135, max: 145, unit: \"mmol/L\" },\n  Potassium: { min: 3.5, max: 5.0, unit: \"mmol/L\" },\n  Calcium: { min: 8.5, max: 10.2, unit: \"mg/dL\" },\n  Albumin: { min: 3.5, max: 5.0, unit: \"g/dL\" },\n  \"Total Bilirubin\": { min: 0.1, max: 1.2, unit: \"mg/dL\" },\n  ALT: { min: 7, max: 55, unit: \"U/L\" },\n  AST: { min: 8, max: 48, unit: \"U/L\" },\n  // Lipid Panel\n  \"Total Cholesterol\": { min: 0, max: 200, unit: \"mg/dL\" },\n  \"HDL Cholesterol\": { min: 40, max: 60, unit: \"mg/dL\" },\n  \"LDL Cholesterol\": { min: 0, max: 100, unit: \"mg/dL\" },\n  Triglycerides: { min: 0, max: 150, unit: \"mg/dL\" },\n  // Urinalysis\n  pH: { min: 4.5, max: 8.0, unit: \"\" },\n  \"Specific Gravity\": { min: 1.005, max: 1.03, unit: \"\" },\n  \"Glucose (Urine)\": { min: 0, max: 0, unit: \"mg/dL\" },\n  \"Protein (Urine)\": { min: 0, max: 0, unit: \"mg/dL\" },\n  // HbA1c\n  HbA1c: { min: 4.0, max: 5.6, unit: \"%\" },\n};\n\n// Improved results display components\nconst ResultsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n`;\n\nconst ResultItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: ${(props) => props.theme.spacing(1.5)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:nth-child(odd) {\n    background-color: ${(props) => props.theme.colors.background.default};\n  }\n`;\n\nconst ResultName = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst ResultValue = styled.div`\n  font-weight: ${(props) => (props.$abnormal ? \"600\" : \"normal\")};\n  color: ${(props) =>\n    props.$abnormal\n      ? props.theme.colors.status.error\n      : props.theme.colors.text.primary};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n\n  svg {\n    font-size: 14px;\n  }\n`;\n\nconst LabReportCard = ({ report, onClick }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const hasAbnormalResults = report.hasAbnormalResults || false;\n\n  // Toggle expansion state\n  const toggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  // Handle click on the view button or when the card is clicked directly\n  const handleViewClick = (e) => {\n    e.stopPropagation();\n    if (onClick) onClick(report);\n  };\n\n  if (!report) return null;\n\n  // Check if this lab report contains any test details\n  const hasComponents = report.components && report.components.length > 0;\n\n  // Check for abnormal results in the components\n  const abnormalResults = hasComponents\n    ? report.components.filter(\n        (comp) => comp.flagged || isAbnormal(comp.name, comp.value)\n      )\n    : [];\n\n  // Helper function to check if a value is outside reference range\n  function isAbnormal(name, value) {\n    if (typeof value !== \"string\" && typeof value !== \"number\") return false;\n\n    const numValue = parseFloat(value);\n    if (isNaN(numValue)) return false;\n\n    const range = referenceRanges[name];\n    if (!range) return false;\n\n    return numValue < range.min || numValue > range.max;\n  }\n\n  // Get appropriate reference range text\n  function getReferenceRange(name) {\n    const range = referenceRanges[name];\n    if (!range) return \"Not specified\";\n\n    if (range.min === 0 && range.max === 0) {\n      return `Negative ${range.unit ? `(${range.unit})` : \"\"}`;\n    }\n\n    return `${range.min}-${range.max} ${range.unit}`;\n  }\n\n  // Generate summary items for the lab report\n  function generateSummaryItems() {\n    if (!hasComponents) return null;\n\n    const safeRender = (value) => {\n      if (value === null || value === undefined) return \"N/A\";\n      if (typeof value === \"object\") {\n        try {\n          return JSON.stringify(value);\n        } catch (e) {\n          return \"Complex data\";\n        }\n      }\n      return String(value);\n    };\n\n    return (\n      <SummaryCard>\n        <SectionTitle>\n          <FaChartBar /> Lab Report Summary\n        </SectionTitle>\n\n        <SummaryItem>\n          <FaVial />{\" \"}\n          {report.testName || report.reportType || \"Laboratory Tests\"}\n        </SummaryItem>\n\n        <SummaryItem>\n          <FaCalendarAlt /> Collected: {formatDate(report.date)}\n        </SummaryItem>\n\n        <SummaryItem $abnormal={abnormalResults.length > 0}>\n          <FaChartBar />{\" \"}\n          {abnormalResults.length === 0\n            ? \"All results within normal range\"\n            : `${abnormalResults.length} abnormal ${\n                abnormalResults.length === 1 ? \"result\" : \"results\"\n              }`}\n        </SummaryItem>\n\n        {abnormalResults.length > 0 &&\n          abnormalResults.map((result, index) => (\n            <SummaryItem key={index} $abnormal={true}>\n              <FaExclamationTriangle /> {safeRender(result.name)}:{\" \"}\n              {safeRender(result.value)} {result.unit || \"\"} (Reference:{\" \"}\n              {getReferenceRange(result.name)})\n            </SummaryItem>\n          ))}\n      </SummaryCard>\n    );\n  }\n\n  // Get patient, technician and doctor names\n  const patientName =\n    report.patientName || (report.patient ? report.patient.name : \"Unknown\");\n  const patientId =\n    report.patientId || (report.patient ? report.patient._id : \"Unknown\");\n  const technicianName =\n    report.technicianName ||\n    (report.technician ? report.technician.name : \"Unknown\");\n  const doctorName =\n    report.doctorName || (report.doctor ? report.doctor.name : \"Unknown\");\n\n  // Improved function to format and display lab results\n  function formatResultsDisplay(report) {\n    // Ensure safe rendering of any value by converting objects to strings\n    const safeRender = (value) => {\n      if (value === null || value === undefined) return \"N/A\";\n      if (typeof value === \"object\") {\n        try {\n          return JSON.stringify(value);\n        } catch (e) {\n          return \"Complex data\";\n        }\n      }\n      return String(value); // Convert to string to be safe\n    };\n\n    // Case 1: Report has components array - use the structured table\n    if (report.components && report.components.length > 0) {\n      return (\n        <ResultsTable>\n          <ResultsHeaderRow>\n            <ResultsCell>Parameter</ResultsCell>\n            <ResultsCell>Result</ResultsCell>\n            <ResultsCell>Reference Range</ResultsCell>\n            <ResultsCell>Status</ResultsCell>\n          </ResultsHeaderRow>\n\n          {report.components.map((comp, index) => {\n            const abnormal =\n              comp.flagged || isAbnormal(comp.name, safeRender(comp.value));\n            return (\n              <ResultsRow key={index}>\n                <ResultsCell>{safeRender(comp.name)}</ResultsCell>\n                <ResultsCell $abnormal={abnormal}>\n                  {safeRender(comp.value)} {comp.unit || \"\"}\n                </ResultsCell>\n                <ResultsCell>{getReferenceRange(comp.name)}</ResultsCell>\n                <ResultsCell>\n                  <StatusIndicator $abnormal={abnormal}>\n                    {abnormal ? (\n                      <>\n                        <FaExclamationTriangle />\n                        <span>Abnormal</span>\n                      </>\n                    ) : (\n                      <>\n                        <FaCheck />\n                        <span>Normal</span>\n                      </>\n                    )}\n                  </StatusIndicator>\n                </ResultsCell>\n              </ResultsRow>\n            );\n          })}\n        </ResultsTable>\n      );\n    }\n\n    // Case 2: Report has results as object - display as name-value pairs\n    if (report.results && typeof report.results === \"object\") {\n      return (\n        <NotesSection>\n          <SectionTitle>\n            <FaChartBar /> Results Summary\n          </SectionTitle>\n          <ResultsGrid>\n            {Object.entries(report.results).map(([key, value], index) => {\n              // Always convert value to a safe display string\n              const displayValue = safeRender(value);\n\n              // Try to determine if value is abnormal based on key name\n              const numValue = parseFloat(displayValue);\n              const isNum = !isNaN(numValue);\n              const range = referenceRanges[key];\n              const abnormal =\n                isNum && range\n                  ? numValue < range.min || numValue > range.max\n                  : false;\n\n              return (\n                <ResultItem key={index}>\n                  <ResultName>{key}:</ResultName>\n                  <ResultValue $abnormal={abnormal}>\n                    {displayValue}\n                    {abnormal && <FaExclamationTriangle />}\n                  </ResultValue>\n                </ResultItem>\n              );\n            })}\n          </ResultsGrid>\n        </NotesSection>\n      );\n    }\n\n    // Case 3: Report has results as string - display as formatted text\n    if (report.results && typeof report.results === \"string\") {\n      return (\n        <NotesSection>\n          <SectionTitle>\n            <FaChartBar /> Results Summary\n          </SectionTitle>\n          <div\n            style={{\n              margin: \"8px 0\",\n              whiteSpace: \"pre-wrap\",\n              lineHeight: \"1.5\",\n            }}\n            dangerouslySetInnerHTML={{ __html: report.results }}\n          />\n        </NotesSection>\n      );\n    }\n\n    // Fallback for no results\n    return (\n      <NotesSection>\n        <SectionTitle>Results Summary</SectionTitle>\n        <div style={{ margin: \"8px 0\" }}>No detailed results available.</div>\n      </NotesSection>\n    );\n  }\n\n  return (\n    <ReportCard initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n      <ReportHeader onClick={toggleExpand}>\n        <ReportTitle>\n          <FaFlask /> {report.testType || report.reportType || \"Lab Test\"}\n          <ReportBadge $abnormal={hasAbnormalResults}>\n            {hasAbnormalResults ? (\n              <>\n                <FaExclamationTriangle /> Abnormal\n              </>\n            ) : (\n              <>\n                <FaCheck /> Normal\n              </>\n            )}\n          </ReportBadge>\n        </ReportTitle>\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\n          <ReportDate>\n            <FaCalendarAlt /> {formatDate(report.date)}\n          </ReportDate>\n          {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\n        </div>\n      </ReportHeader>\n\n      <ReportContent $isExpanded={isExpanded}>\n        {generateSummaryItems()}\n\n        <InfoGrid>\n          <InfoSection>\n            <SectionTitle>\n              <FaUser /> Patient Information\n            </SectionTitle>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Name:</strong>{\" \"}\n              {typeof patientName === \"object\"\n                ? JSON.stringify(patientName)\n                : patientName}\n            </div>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>ID:</strong>{\" \"}\n              {typeof patientId === \"object\"\n                ? JSON.stringify(patientId)\n                : patientId}\n            </div>\n          </InfoSection>\n\n          <InfoSection>\n            <SectionTitle>\n              <FaStethoscope /> Provider Information\n            </SectionTitle>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Ordered By:</strong>{\" \"}\n              {typeof doctorName === \"object\"\n                ? JSON.stringify(doctorName)\n                : doctorName}\n            </div>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Lab Technician:</strong>{\" \"}\n              {typeof technicianName === \"object\"\n                ? JSON.stringify(technicianName)\n                : technicianName}\n            </div>\n          </InfoSection>\n\n          <InfoSection>\n            <SectionTitle>\n              <FaVial /> Test Information\n            </SectionTitle>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Test Type:</strong>{\" \"}\n              {typeof report.testType === \"object\"\n                ? JSON.stringify(report.testType)\n                : typeof report.reportType === \"object\"\n                ? JSON.stringify(report.reportType)\n                : report.testType || report.reportType || \"Blood Test\"}\n            </div>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Status:</strong>{\" \"}\n              {typeof report.status === \"object\"\n                ? JSON.stringify(report.status)\n                : report.status || \"completed\"}\n            </div>\n            <div style={{ margin: \"8px 0\" }}>\n              <strong>Sample:</strong>{\" \"}\n              {typeof report.sample === \"object\"\n                ? JSON.stringify(report.sample)\n                : report.sample || \"Blood\"}\n            </div>\n          </InfoSection>\n        </InfoGrid>\n\n        {/* Use the improved results display formatter */}\n        {formatResultsDisplay(report)}\n\n        {report.interpretation && (\n          <NotesSection>\n            <SectionTitle>Interpretation</SectionTitle>\n            <div style={{ margin: \"8px 0\" }}>\n              {typeof report.interpretation === \"object\"\n                ? JSON.stringify(report.interpretation)\n                : report.interpretation}\n            </div>\n          </NotesSection>\n        )}\n\n        {report.notes && (\n          <NotesSection>\n            <SectionTitle>Notes</SectionTitle>\n            <div style={{ margin: \"8px 0\" }}>\n              {typeof report.notes === \"object\"\n                ? JSON.stringify(report.notes)\n                : report.notes}\n            </div>\n          </NotesSection>\n        )}\n\n        <ActionButtons>\n          <Button variant=\"secondary\" onClick={(e) => handleViewClick(e)}>\n            <FaPrint /> Print Report\n          </Button>\n          <Button onClick={(e) => handleViewClick(e)}>\n            <FaDownload /> Download PDF\n          </Button>\n        </ActionButtons>\n      </ReportContent>\n    </ReportCard>\n  );\n};\n\nexport default LabReportCard;\n"],"names":["ModalBackdrop","styled","motion","props","ModalContent","CloseButton","ReportHeader","Title","InfoGrid","InfoCard","InfoTitle","InfoValue","ResultsTable","ResultsRow","ResultsCell","Notes","NotesTitle","ActionButtons","Button","formatDate","dateString","ViewLabReport","isOpen","onClose","report","formattedDate","hasResults","hasComponents","displayResults","name","value","_a","_b","patientName","patientId","jsx","AnimatePresence","jsxs","e","FaTimes","FaVial","FaUser","FaCalendarAlt","item","index","FaPrint","FaDownload","ReportCard","ReportTitle","ReportBadge","ReportDate","ReportContent","InfoSection","SectionTitle","ResultsHeaderRow","NotesSection","StatusIndicator","SummaryCard","SummaryItem","referenceRanges","ResultsGrid","ResultItem","ResultName","ResultValue","LabReportCard","onClick","isExpanded","setIsExpanded","useState","hasAbnormalResults","toggleExpand","handleViewClick","abnormalResults","comp","isAbnormal","numValue","range","getReferenceRange","generateSummaryItems","safeRender","FaChartBar","result","FaExclamationTriangle","technicianName","doctorName","formatResultsDisplay","abnormal","Fragment","FaCheck","key","displayValue","isNum","FaFlask","FaChevronUp","FaChevronDown","FaStethoscope"],"mappings":"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"}