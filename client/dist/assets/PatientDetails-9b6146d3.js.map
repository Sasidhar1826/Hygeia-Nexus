{"version":3,"file":"PatientDetails-9b6146d3.js","sources":["../../src/components/modals/RequestLabTest.jsx","../../src/components/modals/SmartDiagnosisModal.jsx","../../src/components/modals/AIDiagnosticHistoryModal.jsx","../../src/components/modals/PrescriptionModal.jsx","../../src/components/medical/MedicalReportCard.jsx","../../src/services/medicalDataFormatters.js","../../src/pages/PatientDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  FaFlask,\r\n  FaRegClipboard,\r\n  FaTimes,\r\n  FaExclamationTriangle,\r\n} from \"react-icons/fa\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport api from \"../../services/apiService\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst ModalBackdrop = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 999;\r\n`;\r\n\r\nconst ModalContent = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  width: 500px;\r\n  max-width: 90%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: ${(props) => props.theme.shadows.large};\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${(props) => props.theme.spacing(2)}\r\n    ${(props) => props.theme.spacing(3)};\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.border};\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 1.3rem;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  font-size: 1.2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: ${(props) => props.theme.spacing(0.5)};\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.background.default};\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  padding: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.9rem;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  font-weight: 500;\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  font-size: 0.95rem;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  padding: ${(props) => props.theme.spacing(1.5)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  font-size: 0.95rem;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  resize: vertical;\r\n  min-height: 80px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  margin-top: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst Button = styled(motion.button)`\r\n  padding: ${(props) => props.theme.spacing(1.5)}\r\n    ${(props) => props.theme.spacing(3)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n\r\n  background-color: ${(props) =>\r\n    props.variant === \"primary\"\r\n      ? props.theme.colors.primary.main\r\n      : props.theme.colors.background.default};\r\n\r\n  color: ${(props) =>\r\n    props.variant === \"primary\" ? \"white\" : props.theme.colors.text.primary};\r\n\r\n  border: ${(props) =>\r\n    props.variant === \"primary\"\r\n      ? \"none\"\r\n      : `1px solid ${props.theme.colors.border}`};\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.variant === \"primary\"\r\n        ? props.theme.colors.primary.dark\r\n        : props.theme.colors.background.card};\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst UrgencyOption = styled.div`\r\n  display: flex;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  margin-top: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst RadioOption = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  cursor: pointer;\r\n  padding: ${(props) => props.theme.spacing(1)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.colors.background.default};\r\n  }\r\n\r\n  input {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    font-size: 0.9rem;\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst UrgentBadge = styled.span`\r\n  color: ${(props) => props.theme.colors.status.error};\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst SuccessMessage = styled(motion.div)`\r\n  text-align: center;\r\n  padding: ${(props) => props.theme.spacing(3)};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n\r\n  h3 {\r\n    color: ${(props) => props.theme.colors.status.success};\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst RequestLabTest = ({\r\n  isOpen,\r\n  onClose,\r\n  patient,\r\n  patientId,\r\n  departmentId,\r\n  doctorId,\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [testType, setTestType] = useState(\"Blood Test\");\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [urgency, setUrgency] = useState(\"Normal\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [fetchedPatient, setFetchedPatient] = useState(patient || null);\r\n  const [loading, setLoading] = useState(!patient && !!patientId);\r\n\r\n  // Fetch patient data if needed\r\n  useEffect(() => {\r\n    const getPatientData = async () => {\r\n      if (!patient && patientId) {\r\n        setLoading(true);\r\n        try {\r\n          const data = await api.getPatientById(patientId);\r\n          setFetchedPatient(data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching patient data:\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else if (patient) {\r\n        setFetchedPatient(patient);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      getPatientData();\r\n    }\r\n  }, [patient, patientId, isOpen]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsSubmitting(true);\r\n\r\n      // Create the lab order\r\n      const labOrder = {\r\n        patient: patientId,\r\n        doctor: user._id,\r\n        reportType: testType,\r\n        urgency: urgency,\r\n        notes: notes,\r\n        status: \"pending\",\r\n      };\r\n\r\n      // Submit the lab order\r\n      await api.createLabOrder(labOrder);\r\n\r\n      toast.success(\"Lab test requested successfully\");\r\n      onClose();\r\n    } catch (error) {\r\n      console.error(\"Error requesting lab test:\", error);\r\n      toast.error(\"Failed to request lab test\");\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const modalVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n  };\r\n\r\n  const contentVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <ModalBackdrop\r\n      variants={modalVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"hidden\"\r\n      onClick={onClose}\r\n    >\r\n      <ModalContent\r\n        variants={contentVariants}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <ModalHeader>\r\n          <ModalTitle>\r\n            <FaFlask />\r\n            Request Lab Test\r\n          </ModalTitle>\r\n          <CloseButton onClick={onClose}>\r\n            <FaTimes />\r\n          </CloseButton>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>\r\n          {loading ? (\r\n            <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n              <p>Loading patient data...</p>\r\n            </div>\r\n          ) : isSubmitted ? (\r\n            <SuccessMessage\r\n              initial={{ opacity: 0, y: 10 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n            >\r\n              <FaRegClipboard size={40} color=\"#4CAF50\" />\r\n              <h3>Lab Test Requested Successfully</h3>\r\n              <p>The lab technician will be notified of the request.</p>\r\n            </SuccessMessage>\r\n          ) : !fetchedPatient ? (\r\n            <div style={{ textAlign: \"center\", padding: \"20px\", color: \"red\" }}>\r\n              <p>Error: Could not retrieve patient data</p>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                style={{ marginTop: \"10px\" }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"patient-name\">Patient</Label>\r\n                <div\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    border: \"1px solid #ddd\",\r\n                    borderRadius: \"4px\",\r\n                    backgroundColor: \"#f9f9f9\",\r\n                  }}\r\n                >\r\n                  {fetchedPatient.firstName && fetchedPatient.lastName\r\n                    ? `${fetchedPatient.firstName} ${fetchedPatient.lastName}`\r\n                    : fetchedPatient.name || \"Unknown Patient\"}\r\n                </div>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"test-type\">Test Type</Label>\r\n                <Select\r\n                  id=\"test-type\"\r\n                  value={testType}\r\n                  onChange={(e) => setTestType(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"Blood Test\">Blood Test</option>\r\n                  <option value=\"Urine Analysis\">Urine Analysis</option>\r\n                  <option value=\"X-Ray\">X-Ray</option>\r\n                  <option value=\"CT Scan\">CT Scan</option>\r\n                  <option value=\"MRI\">MRI</option>\r\n                  <option value=\"Ultrasound\">Ultrasound</option>\r\n                  <option value=\"ECG\">ECG</option>\r\n                </Select>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label>Urgency</Label>\r\n                <UrgencyOption>\r\n                  <RadioOption>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"normal\"\r\n                      name=\"urgency\"\r\n                      value=\"Normal\"\r\n                      checked={urgency === \"Normal\"}\r\n                      onChange={(e) => setUrgency(e.target.value)}\r\n                    />\r\n                    <span>Normal</span>\r\n                  </RadioOption>\r\n\r\n                  <RadioOption>\r\n                    <input\r\n                      type=\"radio\"\r\n                      id=\"urgent\"\r\n                      name=\"urgency\"\r\n                      value=\"Urgent\"\r\n                      checked={urgency === \"Urgent\"}\r\n                      onChange={(e) => setUrgency(e.target.value)}\r\n                    />\r\n                    <span>\r\n                      Urgent\r\n                      {urgency === \"Urgent\" && (\r\n                        <UrgentBadge>\r\n                          <FaExclamationTriangle />\r\n                          Priority Processing\r\n                        </UrgentBadge>\r\n                      )}\r\n                    </span>\r\n                  </RadioOption>\r\n                </UrgencyOption>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Label htmlFor=\"notes\">Notes & Instructions</Label>\r\n                <Textarea\r\n                  id=\"notes\"\r\n                  value={notes}\r\n                  onChange={(e) => setNotes(e.target.value)}\r\n                  placeholder=\"Add any specific instructions or details for the lab technician...\"\r\n                />\r\n              </FormGroup>\r\n\r\n              <ButtonGroup>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={onClose}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                >\r\n                  {isSubmitting ? \"Submitting...\" : \"Submit Request\"}\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          )}\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </ModalBackdrop>\r\n  );\r\n};\r\n\r\nexport default RequestLabTest;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport api from \"../../services/apiService\";\nimport {\n  FaBrain,\n  FaTimesCircle,\n  FaCheck,\n  FaExclamationTriangle,\n  FaSpinner,\n  FaArrowRight,\n  FaChartBar,\n  FaFileAlt,\n  FaNotesMedical,\n  FaCheckCircle,\n  FaPrint,\n  FaHistory,\n  FaFlask,\n  FaFileMedical,\n  FaPlus,\n  FaComments,\n  FaPaperPlane,\n  FaInfoCircle,\n} from \"react-icons/fa\";\nconst ModalOverlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  padding: ${(props) => props.theme.spacing(2)};\n`;\n\nconst ModalContent = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.large};\n  width: 90%;\n  max-width: 900px;\n  max-height: 85vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${(props) => props.theme.spacing(3)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n  position: sticky;\n  top: 0;\n  background-color: ${(props) => props.theme.colors.background.paper};\n  z-index: 10;\n`;\n\nconst HeaderTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(2)};\n\n  h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n\n  svg {\n    font-size: 1.8rem;\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(1)};\n  border-radius: 50%;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.background.default};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(6)};\n  text-align: center;\n\n  svg {\n    font-size: 2.5rem;\n    color: ${(props) => props.theme.colors.primary.main};\n    animation: spin 1.5s linear infinite;\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  h3 {\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n\n  p {\n    color: ${(props) => props.theme.colors.text.secondary};\n    max-width: 400px;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  max-width: 400px;\n  height: 8px;\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: 4px;\n  margin: ${(props) => props.theme.spacing(2)} 0;\n  overflow: hidden;\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${(props) => props.progress}%;\n  background-color: ${(props) => props.theme.colors.primary.main};\n  transition: width 0.3s ease;\n`;\n\nconst ModalBody = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(4)};\n`;\n\nconst SummaryCard = styled.div`\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  padding: ${(props) => props.theme.spacing(3)};\n  border-left: 4px solid ${(props) => props.theme.colors.primary.main};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.2rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst DiagnosisList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-top: ${(props) => props.theme.spacing(2)};\n`;\n\nconst DiagnosisItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(2)};\n  padding: ${(props) => props.theme.spacing(2)};\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    box-shadow: ${(props) => props.theme.shadows.small};\n  }\n`;\n\nconst ConfidenceBadge = styled.div`\n  background-color: ${(props) =>\n    props.confidence >= 70\n      ? props.theme.colors.success\n      : props.confidence >= 40\n      ? props.theme.colors.warning\n      : props.theme.colors.status.error};\n  color: white;\n  border-radius: 20px;\n  padding: ${(props) =>\n    `${props.theme.spacing(0.5)} ${props.theme.spacing(2)}`};\n  font-weight: 500;\n  min-width: 65px;\n  text-align: center;\n`;\n\nconst DiagnosisTitle = styled.div`\n  flex: 1;\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst DetailSection = styled.div`\n  margin: ${(props) => props.theme.spacing(4)} 0;\n`;\n\nconst FactorList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(1)};\n  margin-top: ${(props) => props.theme.spacing(2)};\n`;\n\nconst FactorItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(2)};\n\n  svg {\n    min-width: 20px;\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst FactorWeight = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n\n  .factor-label {\n    font-size: 0.8rem;\n    color: ${(props) => props.theme.colors.text.secondary};\n    margin-bottom: ${(props) => props.theme.spacing(0.5)};\n  }\n\n  .weight-bar {\n    height: 8px;\n    background-color: ${(props) => props.theme.colors.background.default};\n    border-radius: 4px;\n    overflow: hidden;\n    position: relative;\n  }\n\n  .weight-fill {\n    position: absolute;\n    height: 100%;\n    width: ${(props) => props.$weight}%;\n    background-color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst FactorText = styled.p`\n  flex: 1;\n  margin: 0;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-top: ${(props) => props.theme.spacing(4)};\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  padding: ${(props) => props.theme.spacing(1.5)}\n    ${(props) => props.theme.spacing(3)};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n  background-color: ${(props) =>\n    props.variant === \"secondary\"\n      ? props.theme.colors.background.paper\n      : props.theme.colors.primary.main};\n  color: ${(props) =>\n    props.variant === \"secondary\" ? props.theme.colors.text.primary : \"white\"};\n  border: ${(props) =>\n    props.variant === \"secondary\"\n      ? `1px solid ${props.theme.colors.border.main}`\n      : \"none\"};\n\n  &:hover {\n    background-color: ${(props) =>\n      props.variant === \"secondary\"\n        ? props.theme.colors.background.default\n        : props.theme.colors.primary.dark};\n  }\n`;\n\nconst Disclaimer = styled.p`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-style: italic;\n  margin-top: ${(props) => props.theme.spacing(4)};\n  padding-top: ${(props) => props.theme.spacing(2)};\n  border-top: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst Tab = styled.button`\n  padding: ${(props) => props.theme.spacing(2)}\n    ${(props) => props.theme.spacing(3)};\n  background: none;\n  border: none;\n  font-weight: ${(props) => (props.$active ? \"600\" : \"400\")};\n  color: ${(props) =>\n    props.$active\n      ? props.theme.colors.primary.main\n      : props.theme.colors.text.secondary};\n  border-bottom: 2px solid\n    ${(props) =>\n      props.$active ? props.theme.colors.primary.main : \"transparent\"};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst TabPanel = styled.div`\n  display: ${(props) => (props.$active ? \"block\" : \"none\")};\n`;\n\n// Add this styled component for the spinner animation\nconst SpinnerIcon = styled(FaSpinner)`\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  animation: spin 1.5s linear infinite;\n`;\n\n// Add new styled components for symptom selection\nconst SymptomSelector = styled.div`\n  margin: ${(props) => props.theme.spacing(3)} 0;\n`;\n\nconst SymptomList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${(props) => props.theme.spacing(1)};\n  margin-top: ${(props) => props.theme.spacing(2)};\n`;\n\nconst SymptomChip = styled.div`\n  background-color: ${(props) =>\n    props.$selected\n      ? props.theme.colors.primary.main\n      : props.theme.colors.background.default};\n  color: ${(props) =>\n    props.$selected ? \"white\" : props.theme.colors.text.primary};\n  border-radius: 20px;\n  padding: ${(props) =>\n    `${props.theme.spacing(0.5)} ${props.theme.spacing(2)}`};\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n  border: 1px solid\n    ${(props) =>\n      props.$selected\n        ? props.theme.colors.primary.main\n        : props.theme.colors.border.main};\n\n  &:hover {\n    border-color: ${(props) => props.theme.colors.primary.main};\n    background-color: ${(props) =>\n      props.$selected\n        ? props.theme.colors.primary.main\n        : `${props.theme.colors.primary.main}10`};\n  }\n`;\n\nconst AddSymptomInput = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(1)};\n  margin-top: ${(props) => props.theme.spacing(2)};\n\n  input {\n    flex: 1;\n    padding: ${(props) => props.theme.spacing(1)};\n    border-radius: ${(props) => props.theme.borderRadius.small};\n    border: 1px solid ${(props) => props.theme.colors.border.main};\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 36px;\n    height: 36px;\n    border-radius: 50%;\n    border: none;\n    background-color: ${(props) => props.theme.colors.primary.main};\n    color: white;\n    cursor: pointer;\n\n    &:hover {\n      background-color: ${(props) => props.theme.colors.primary.dark};\n    }\n  }\n`;\n\n// List of common symptoms to select from\nconst commonSymptoms = [\n  \"Fever\",\n  \"Cough\",\n  \"Headache\",\n  \"Fatigue\",\n  \"Nausea\",\n  \"Shortness of breath\",\n  \"Dizziness\",\n  \"Chest pain\",\n  \"Abdominal pain\",\n  \"Back pain\",\n  \"Joint pain\",\n  \"Sore throat\",\n  \"Runny nose\",\n  \"Muscle ache\",\n  \"Insomnia\",\n  \"Loss of appetite\",\n  \"Weight loss\",\n  \"Swelling\",\n  \"Rash\",\n  \"Vomiting\",\n  \"Diarrhea\",\n  \"Constipation\",\n  \"Blurred vision\",\n  \"Increased thirst\",\n  \"Frequent urination\",\n];\n\n// Add components for the chat interface\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 400px;\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  overflow: hidden;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: ${(props) => props.theme.spacing(2)};\n  background-color: ${(props) => props.theme.colors.background.default};\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst ChatInputContainer = styled.div`\n  display: flex;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-top: 1px solid ${(props) => props.theme.colors.border.main};\n  background-color: ${(props) => props.theme.colors.background.paper};\n`;\n\nconst ChatInput = styled.input`\n  flex: 1;\n  padding: ${(props) => props.theme.spacing(1.5)};\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  margin-right: ${(props) => props.theme.spacing(1)};\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst SendButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${(props) => props.theme.colors.primary.main};\n  color: white;\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  padding: ${(props) => `${props.theme.spacing(1)} ${props.theme.spacing(2)}`};\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.primary.dark};\n  }\n\n  &:disabled {\n    background-color: ${(props) => props.theme.colors.background.default};\n    color: ${(props) => props.theme.colors.text.disabled};\n    cursor: not-allowed;\n  }\n`;\n\nconst Message = styled.div`\n  max-width: 70%;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  background-color: ${(props) =>\n    props.$sender === \"user\"\n      ? props.theme.colors.primary.main\n      : props.theme.colors.background.paper};\n  color: ${(props) =>\n    props.$sender === \"user\" ? \"white\" : props.theme.colors.text.primary};\n  align-self: ${(props) =>\n    props.$sender === \"user\" ? \"flex-end\" : \"flex-start\"};\n  box-shadow: ${(props) => props.theme.shadows.small};\n\n  p {\n    margin: 0;\n    white-space: pre-wrap;\n  }\n`;\n\nconst SmartDiagnosisModal = ({ isOpen, onClose, patientId, onViewHistory }) => {\n  const [loading, setLoading] = useState(true);\n  const [progress, setProgress] = useState(0);\n  const [selectedDiagnosis, setSelectedDiagnosis] = useState(null);\n  const [diagnosisResults, setDiagnosisResults] = useState(null);\n  const [activeTab, setActiveTab] = useState(\"symptoms\");\n  const [error, setError] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const [newSymptom, setNewSymptom] = useState(\"\");\n  const [patientData, setPatientData] = useState(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [isChatLoading, setIsChatLoading] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && patientId) {\n      // Reset state when modal opens\n      setLoading(true);\n      setProgress(0);\n      setSelectedDiagnosis(null);\n      setSelectedSymptoms([]);\n      setError(null);\n\n      // Fetch patient basic info\n      fetchPatientBasicInfo();\n    }\n  }, [isOpen, patientId]);\n\n  const fetchPatientBasicInfo = async () => {\n    try {\n      const patientData = await api.getPatientById(patientId);\n      setPatientData(patientData);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching patient data:\", error);\n      setError(\"Failed to load patient information. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  const handleToggleSymptom = (symptom) => {\n    if (selectedSymptoms.includes(symptom)) {\n      setSelectedSymptoms(selectedSymptoms.filter((s) => s !== symptom));\n    } else {\n      setSelectedSymptoms([...selectedSymptoms, symptom]);\n    }\n  };\n\n  const handleAddCustomSymptom = () => {\n    if (newSymptom.trim() && !selectedSymptoms.includes(newSymptom.trim())) {\n      setSelectedSymptoms([...selectedSymptoms, newSymptom.trim()]);\n      setNewSymptom(\"\");\n    }\n  };\n\n  const handleGenerateDiagnosis = async () => {\n    if (selectedSymptoms.length === 0) {\n      setError(\"Please select at least one symptom to generate a diagnosis.\");\n      return;\n    }\n\n    setLoading(true);\n    setProgress(0);\n    setError(null);\n\n    // Simulate the AI processing time with a progress bar\n    const progressInterval = setInterval(() => {\n      setProgress((prev) => {\n        const newProgress = prev + Math.random() * 10;\n        if (newProgress >= 100) {\n          clearInterval(progressInterval);\n          fetchDiagnosticResults();\n          return 100;\n        }\n        return newProgress;\n      });\n    }, 400);\n\n    return () => clearInterval(progressInterval);\n  };\n\n  const fetchDiagnosticResults = async () => {\n    try {\n      // Create request payload with symptoms and patient context\n      const diagnosticRequest = {\n        symptoms: selectedSymptoms,\n        patientId,\n        geminiApiKey: \"AIzaSyDhRb7fLT6gV0zNUcQaZGDtwmnmYRjmZU0\",\n      };\n\n      // Use the v2 API that was enhanced with support for Gemini\n      const results = await api.getAIDiagnosticSuggestionV2(\n        patientId,\n        diagnosticRequest\n      );\n\n      setDiagnosisResults(results);\n      setSelectedDiagnosis(results.diagnoses[0]); // Select the first diagnosis by default\n      setLoading(false);\n      setActiveTab(\"overview\");\n    } catch (error) {\n      console.error(\"Error fetching diagnostic suggestions:\", error);\n      setError(\"Failed to generate diagnostic suggestions. Please try again.\");\n      setLoading(false);\n    }\n  };\n\n  const handleSaveDiagnosis = async () => {\n    if (!diagnosisResults || !selectedDiagnosis) return;\n\n    setIsSaving(true);\n    setSaveSuccess(false);\n\n    try {\n      // Create a record containing the selected diagnosis and patient context\n      const diagnosisRecord = {\n        diagnosis: selectedDiagnosis,\n        summary: diagnosisResults.summary,\n        patientContext: diagnosisResults.patientContext,\n        symptoms: selectedSymptoms,\n        timestamp: new Date().toISOString(),\n      };\n\n      // Save to patient record using the mockApi\n      const result = await api.saveAIDiagnosticSuggestion(\n        patientId,\n        diagnosisRecord\n      );\n\n      console.log(\"Diagnosis saved successfully:\", result);\n      setSaveSuccess(true);\n\n      // Reset after 3 seconds\n      setTimeout(() => {\n        setSaveSuccess(false);\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error saving diagnosis:\", error);\n      setError(\"Failed to save diagnosis to patient record.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handlePrintReport = () => {\n    // In a real implementation, this would generate a PDF report\n    // For now, we'll just show the browser print dialog with the current content\n    window.print();\n  };\n\n  // Add function to handle chat messages\n  const handleSendMessage = async () => {\n    if (!chatInput.trim() || isChatLoading) return;\n\n    // Add user message to chat\n    const userMessage = chatInput.trim();\n    setChatMessages([...chatMessages, { sender: \"user\", text: userMessage }]);\n    setChatInput(\"\");\n    setIsChatLoading(true);\n\n    try {\n      // Generate context from diagnosis results\n      let context = \"\";\n      if (diagnosisResults) {\n        context = `Based on the patient's symptoms (${selectedSymptoms.join(\n          \", \"\n        )}), `;\n        context += `the top diagnosis is ${diagnosisResults.diagnoses[0].name} `;\n        context += `with ${diagnosisResults.diagnoses[0].confidence}% confidence. `;\n      } else {\n        context = `Based on the patient's symptoms (${selectedSymptoms.join(\n          \", \"\n        )}), `;\n      }\n\n      // Generate prompt for Gemini\n      const prompt = `\n${context}\n\nPrevious conversation:\n${chatMessages\n  .map((msg) => `${msg.sender === \"user\" ? \"Doctor\" : \"AI\"}: ${msg.text}`)\n  .join(\"\\n\")}\n\nDoctor: ${userMessage}\n\nPlease respond to the doctor's question as a medical AI assistant. Keep your response professional, evidence-based, and concise. Only respond to the specific question or follow-up, without unnecessary explanations about your role or excessive medical disclaimers.\n`;\n\n      // Call Gemini API\n      const response = await api.callGeminiAPI(\n        prompt,\n        \"AIzaSyDhRb7fLT6gV0zNUcQaZGDtwmnmYRjmZU0\"\n      );\n\n      // Add AI response to chat\n      setChatMessages([\n        ...chatMessages,\n        { sender: \"user\", text: userMessage },\n        { sender: \"ai\", text: response },\n      ]);\n    } catch (error) {\n      console.error(\"Error getting AI response:\", error);\n\n      // Add error message\n      setChatMessages([\n        ...chatMessages,\n        { sender: \"user\", text: userMessage },\n        {\n          sender: \"ai\",\n          text: \"I apologize, but I'm unable to process your request at the moment. Please try again later.\",\n        },\n      ]);\n    } finally {\n      setIsChatLoading(false);\n    }\n  };\n\n  // Add function to handle Enter key press\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n\n  const modalVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n  };\n\n  const contentVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: { opacity: 1, y: 0, transition: { delay: 0.2 } },\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence>\n      <ModalOverlay\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"hidden\"\n        variants={modalVariants}\n        onClick={(e) => e.target === e.currentTarget && onClose()}\n      >\n        <ModalContent variants={contentVariants}>\n          <ModalHeader>\n            <HeaderTitle>\n              <FaBrain />\n              <h2>Smart Diagnosis Assistant</h2>\n            </HeaderTitle>\n            <CloseButton onClick={onClose}>\n              <FaTimesCircle />\n            </CloseButton>\n          </ModalHeader>\n\n          {loading ? (\n            <LoadingState>\n              <SpinnerIcon />\n              <h3>Analyzing Patient Data</h3>\n              <p>\n                AI is analyzing patient history, symptoms, lab results, and\n                relevant medical knowledge to generate diagnostic suggestions.\n              </p>\n              <ProgressBar>\n                <ProgressFill progress={progress} />\n              </ProgressBar>\n            </LoadingState>\n          ) : error ? (\n            <LoadingState>\n              <FaExclamationTriangle style={{ color: \"#EF4444\" }} />\n              <h3>Error</h3>\n              <p>{error}</p>\n              <Button\n                onClick={() => {\n                  setError(null);\n                  if (diagnosisResults) {\n                    setActiveTab(\"symptoms\");\n                  }\n                }}\n                style={{ marginTop: \"16px\" }}\n              >\n                Try Again\n              </Button>\n            </LoadingState>\n          ) : (\n            <ModalBody>\n              <TabsContainer>\n                <Tab\n                  $active={activeTab === \"symptoms\"}\n                  onClick={() => setActiveTab(\"symptoms\")}\n                >\n                  <FaNotesMedical /> Symptoms\n                </Tab>\n                {diagnosisResults && (\n                  <>\n                    <Tab\n                      $active={activeTab === \"overview\"}\n                      onClick={() => setActiveTab(\"overview\")}\n                    >\n                      <FaFileMedical /> Overview\n                    </Tab>\n                    <Tab\n                      $active={activeTab === \"context\"}\n                      onClick={() => setActiveTab(\"context\")}\n                    >\n                      <FaInfoCircle /> Context\n                    </Tab>\n                    <Tab\n                      $active={activeTab === \"chat\"}\n                      onClick={() => setActiveTab(\"chat\")}\n                    >\n                      <FaComments /> Ask AI\n                    </Tab>\n                  </>\n                )}\n              </TabsContainer>\n\n              <ResultsContainer>\n                <TabPanel $active={activeTab === \"symptoms\"}>\n                  {patientData && (\n                    <SummaryCard>\n                      <SectionTitle>\n                        <FaFileAlt /> Patient Information\n                      </SectionTitle>\n                      <p>\n                        <strong>Name:</strong>{\" \"}\n                        {patientData?.firstName ||\n                          patientData?.name ||\n                          \"Unknown\"}\n                        {patientData?.lastName\n                          ? ` ${patientData.lastName}`\n                          : \"\"}\n                        <br />\n                        <strong>Age:</strong>{\" \"}\n                        {patientData?.dateOfBirth || patientData?.birthDate\n                          ? new Date().getFullYear() -\n                            new Date(\n                              patientData?.dateOfBirth || patientData?.birthDate\n                            ).getFullYear()\n                          : \"Unknown\"}\n                        <br />\n                        <strong>Gender:</strong>{\" \"}\n                        {patientData?.gender || \"Unknown\"}\n                        <br />\n                        <strong>Blood Group:</strong>{\" \"}\n                        {patientData?.bloodGroup || \"Unknown\"}\n                      </p>\n                    </SummaryCard>\n                  )}\n\n                  <SymptomSelector>\n                    <SectionTitle>\n                      <FaNotesMedical /> Select Symptoms\n                    </SectionTitle>\n                    <p>Select all symptoms the patient is experiencing:</p>\n\n                    <SymptomList>\n                      {commonSymptoms.map((symptom) => (\n                        <SymptomChip\n                          key={symptom}\n                          $selected={selectedSymptoms.includes(symptom)}\n                          onClick={() => handleToggleSymptom(symptom)}\n                        >\n                          {symptom}\n                        </SymptomChip>\n                      ))}\n                    </SymptomList>\n\n                    <AddSymptomInput>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Add custom symptom\"\n                        value={newSymptom}\n                        onChange={(e) => setNewSymptom(e.target.value)}\n                        onKeyPress={(e) =>\n                          e.key === \"Enter\" && handleAddCustomSymptom()\n                        }\n                      />\n                      <button onClick={handleAddCustomSymptom}>\n                        <FaPlus />\n                      </button>\n                    </AddSymptomInput>\n\n                    {selectedSymptoms.length > 0 && (\n                      <div style={{ marginTop: \"20px\" }}>\n                        <SectionTitle>Selected Symptoms</SectionTitle>\n                        <ul>\n                          {selectedSymptoms.map((symptom) => (\n                            <li key={symptom}>{symptom}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n\n                    <Button\n                      onClick={handleGenerateDiagnosis}\n                      style={{ marginTop: \"20px\" }}\n                      disabled={selectedSymptoms.length === 0}\n                    >\n                      Generate Diagnosis\n                    </Button>\n                  </SymptomSelector>\n                </TabPanel>\n\n                {diagnosisResults && (\n                  <>\n                    <TabPanel $active={activeTab === \"overview\"}>\n                      <SummaryCard>\n                        <SectionTitle>\n                          <FaFileAlt /> Summary\n                        </SectionTitle>\n                        <p>{diagnosisResults.summary}</p>\n                      </SummaryCard>\n\n                      <SectionTitle>\n                        <FaChartBar /> Potential Diagnoses\n                      </SectionTitle>\n                      <DiagnosisList>\n                        {diagnosisResults.diagnoses.map((diagnosis) => (\n                          <DiagnosisItem\n                            key={diagnosis.id}\n                            onClick={() => setSelectedDiagnosis(diagnosis)}\n                            style={{\n                              borderColor:\n                                selectedDiagnosis?.id === diagnosis.id\n                                  ? \"currentColor\"\n                                  : undefined,\n                              borderLeftWidth:\n                                selectedDiagnosis?.id === diagnosis.id\n                                  ? \"4px\"\n                                  : \"1px\",\n                            }}\n                          >\n                            <ConfidenceBadge confidence={diagnosis.confidence}>\n                              {diagnosis.confidence}%\n                            </ConfidenceBadge>\n                            <DiagnosisTitle>{diagnosis.name}</DiagnosisTitle>\n                            <FaArrowRight />\n                          </DiagnosisItem>\n                        ))}\n                      </DiagnosisList>\n                    </TabPanel>\n\n                    <TabPanel $active={activeTab === \"context\"}>\n                      <DetailSection>\n                        <SectionTitle>\n                          <FaNotesMedical /> Selected Symptoms\n                        </SectionTitle>\n                        <ul>\n                          {selectedSymptoms.map((symptom, index) => (\n                            <li key={index}>{symptom}</li>\n                          ))}\n                        </ul>\n                      </DetailSection>\n\n                      <DetailSection>\n                        <SectionTitle>\n                          <FaFileAlt /> Relevant Medical History\n                        </SectionTitle>\n                        {diagnosisResults?.patientContext?.relevantHistory &&\n                        diagnosisResults.patientContext.relevantHistory.length >\n                          0 ? (\n                          <ul>\n                            {diagnosisResults.patientContext.relevantHistory.map(\n                              (history, index) => (\n                                <li key={index}>{history}</li>\n                              )\n                            )}\n                          </ul>\n                        ) : (\n                          <p>No relevant medical history found</p>\n                        )}\n                      </DetailSection>\n\n                      <DetailSection>\n                        <SectionTitle>\n                          <FaFlask /> Recent Lab Results\n                        </SectionTitle>\n                        {diagnosisResults?.patientContext?.recentLabResults &&\n                        diagnosisResults.patientContext.recentLabResults\n                          .length > 0 ? (\n                          <ul>\n                            {diagnosisResults.patientContext.recentLabResults.map(\n                              (result, index) => (\n                                <li key={index}>{result}</li>\n                              )\n                            )}\n                          </ul>\n                        ) : (\n                          <p>No recent lab results found</p>\n                        )}\n                      </DetailSection>\n\n                      <DetailSection>\n                        <SectionTitle>\n                          <FaFileMedical /> Current Medications\n                        </SectionTitle>\n                        {diagnosisResults?.patientContext?.currentMedications &&\n                        diagnosisResults.patientContext.currentMedications\n                          .length > 0 ? (\n                          <ul>\n                            {diagnosisResults.patientContext.currentMedications.map(\n                              (med, index) => (\n                                <li key={index}>{med}</li>\n                              )\n                            )}\n                          </ul>\n                        ) : (\n                          <p>No current medications found</p>\n                        )}\n                      </DetailSection>\n                    </TabPanel>\n                  </>\n                )}\n\n                {/* New Chat Tab Panel */}\n                {diagnosisResults && (\n                  <TabPanel $active={activeTab === \"chat\"}>\n                    <SummaryCard>\n                      <SectionTitle>\n                        <FaComments /> AI Medical Assistant\n                      </SectionTitle>\n                      <p>\n                        Ask follow-up questions or seek clarification about the\n                        diagnosis, treatment options, or medical information.\n                        The AI assistant will respond based on the diagnostic\n                        context.\n                      </p>\n                    </SummaryCard>\n\n                    <ChatContainer>\n                      <ChatMessages>\n                        {chatMessages.length === 0 ? (\n                          <Message $sender=\"ai\">\n                            <p>\n                              Hello, I'm your AI medical assistant. I can help\n                              answer questions about the diagnosis, symptoms,\n                              potential treatments, or provide additional\n                              medical information. What would you like to know?\n                            </p>\n                          </Message>\n                        ) : (\n                          chatMessages.map((message, index) => (\n                            <Message key={index} $sender={message.sender}>\n                              <p>{message.text}</p>\n                            </Message>\n                          ))\n                        )}\n                        {isChatLoading && (\n                          <Message $sender=\"ai\">\n                            <p>\n                              <SpinnerIcon\n                                style={{ fontSize: \"1rem\", marginRight: \"8px\" }}\n                              />\n                              Thinking...\n                            </p>\n                          </Message>\n                        )}\n                      </ChatMessages>\n                      <ChatInputContainer>\n                        <ChatInput\n                          type=\"text\"\n                          placeholder=\"Type your medical question here...\"\n                          value={chatInput}\n                          onChange={(e) => setChatInput(e.target.value)}\n                          onKeyPress={handleKeyPress}\n                          disabled={isChatLoading}\n                        />\n                        <SendButton\n                          onClick={handleSendMessage}\n                          disabled={!chatInput.trim() || isChatLoading}\n                        >\n                          {isChatLoading ? <SpinnerIcon /> : <FaPaperPlane />}\n                        </SendButton>\n                      </ChatInputContainer>\n                    </ChatContainer>\n                  </TabPanel>\n                )}\n\n                <ActionButtons>\n                  <Button variant=\"secondary\" onClick={onClose}>\n                    Close\n                  </Button>\n                  {onViewHistory && (\n                    <Button\n                      variant=\"secondary\"\n                      onClick={onViewHistory}\n                      style={{ marginRight: \"auto\" }}\n                    >\n                      <FaHistory /> View History\n                    </Button>\n                  )}\n                  {diagnosisResults && (\n                    <>\n                      <Button\n                        onClick={handleSaveDiagnosis}\n                        disabled={isSaving || !diagnosisResults}\n                      >\n                        {isSaving ? (\n                          <>\n                            <SpinnerIcon /> Saving...\n                          </>\n                        ) : saveSuccess ? (\n                          <>\n                            <FaCheckCircle style={{ color: \"#10B981\" }} />{\" \"}\n                            Saved!\n                          </>\n                        ) : (\n                          <>Save to Patient Record</>\n                        )}\n                      </Button>\n                      <Button onClick={handlePrintReport}>\n                        <FaPrint /> Print Report\n                      </Button>\n                    </>\n                  )}\n                </ActionButtons>\n\n                <Disclaimer>\n                  Note: This AI-generated diagnostic suggestion is meant to\n                  assist healthcare professionals and should not replace\n                  clinical judgment. Always consider the full clinical context\n                  and use your professional expertise when making diagnoses.\n                </Disclaimer>\n              </ResultsContainer>\n            </ModalBody>\n          )}\n        </ModalContent>\n      </ModalOverlay>\n    </AnimatePresence>\n  );\n};\n\nexport default SmartDiagnosisModal;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport api from \"../../services/apiService\";\nimport {\n  FaBrain,\n  FaTimesCircle,\n  FaSpinner,\n  FaHistory,\n  FaCalendarAlt,\n  FaChevronRight,\n  FaChevronDown,\n} from \"react-icons/fa\";\n\nconst ModalOverlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  padding: ${(props) => props.theme.spacing(2)};\n`;\n\nconst ModalContent = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.large};\n  width: 90%;\n  max-width: 800px;\n  max-height: 85vh;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${(props) => props.theme.spacing(3)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n  position: sticky;\n  top: 0;\n  background-color: ${(props) => props.theme.colors.background.paper};\n  z-index: 10;\n`;\n\nconst HeaderTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(2)};\n\n  h2 {\n    margin: 0;\n    font-size: 1.5rem;\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n\n  svg {\n    font-size: 1.8rem;\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-size: 1.5rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(1)};\n  border-radius: 50%;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.background.default};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n`;\n\nconst ModalBody = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n`;\n\nconst LoadingState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(6)};\n  text-align: center;\n\n  svg {\n    font-size: 2.5rem;\n    color: ${(props) => props.theme.colors.primary.main};\n    animation: spin 1.5s linear infinite;\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  h3 {\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n\n  p {\n    color: ${(props) => props.theme.colors.text.secondary};\n    max-width: 400px;\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(6)};\n  text-align: center;\n\n  svg {\n    font-size: 3rem;\n    color: ${(props) => props.theme.colors.text.secondary};\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n  }\n\n  h3 {\n    margin-bottom: ${(props) => props.theme.spacing(2)};\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n\n  p {\n    color: ${(props) => props.theme.colors.text.secondary};\n    max-width: 400px;\n  }\n`;\n\nconst HistoryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(3)};\n`;\n\nconst HistoryItem = styled.div`\n  background-color: ${(props) => props.theme.colors.background.default};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  overflow: hidden;\n  border: 1px solid ${(props) => props.theme.colors.border.main};\n`;\n\nconst HistoryItemHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(2)};\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${(props) =>\n      props.theme.colors.background.hover ||\n      props.theme.colors.background.card};\n  }\n`;\n\nconst HistoryItemDate = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  color: ${(props) => props.theme.colors.text.primary};\n  font-weight: 500;\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst ToggleIcon = styled.div`\n  color: ${(props) => props.theme.colors.text.secondary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HistoryItemContent = styled(motion.div)`\n  padding: ${(props) => props.theme.spacing(2)};\n  border-top: 1px solid ${(props) => props.theme.colors.border.main};\n  background-color: ${(props) => props.theme.colors.background.paper};\n`;\n\nconst SummaryText = styled.p`\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst Diagnoses = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-top: ${(props) => props.theme.spacing(3)};\n`;\n\nconst DiagnosisChip = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  background-color: ${(props) =>\n    props.confidence >= 70\n      ? `${props.theme.colors.success}20`\n      : props.confidence >= 40\n      ? `${props.theme.colors.warning}20`\n      : `${props.theme.colors.status.error}20`};\n  border: 1px solid\n    ${(props) =>\n      props.confidence >= 70\n        ? props.theme.colors.success\n        : props.confidence >= 40\n        ? props.theme.colors.warning\n        : props.theme.colors.status.error};\n  border-radius: ${(props) => props.theme.borderRadius.large};\n  padding: ${(props) =>\n    `${props.theme.spacing(0.5)} ${props.theme.spacing(2)}`};\n  margin-right: ${(props) => props.theme.spacing(1)};\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.primary};\n\n  span {\n    font-weight: 500;\n  }\n`;\n\nconst AIDiagnosticHistoryModal = ({ isOpen, onClose, patientId }) => {\n  const [loading, setLoading] = useState(true);\n  const [diagnosticHistory, setDiagnosticHistory] = useState([]);\n  const [expandedItems, setExpandedItems] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDiagnosticHistory = async () => {\n      try {\n        setLoading(true);\n        // Fetch AI diagnostic history for the patient\n        const history = await api.getAIDiagnosticHistory(patientId);\n        setDiagnosticHistory(history);\n        setLoading(false);\n\n        // Initialize expanded state for all items\n        const initialExpandedState = {};\n        history.forEach((item) => {\n          initialExpandedState[item._id] = false;\n        });\n        setExpandedItems(initialExpandedState);\n      } catch (error) {\n        console.error(\"Error fetching AI diagnostic history:\", error);\n        setError(\"Failed to load diagnostic history\");\n        setLoading(false);\n      }\n    };\n\n    if (isOpen && patientId) {\n      fetchDiagnosticHistory();\n    }\n  }, [isOpen, patientId]);\n\n  const toggleExpand = (id) => {\n    setExpandedItems((prev) => ({\n      ...prev,\n      [id]: !prev[id],\n    }));\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    });\n  };\n\n  const modalVariants = {\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 },\n  };\n\n  const contentVariants = {\n    hidden: { opacity: 0, y: 50 },\n    visible: { opacity: 1, y: 0, transition: { delay: 0.2 } },\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence>\n      <ModalOverlay\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit=\"hidden\"\n        variants={modalVariants}\n        onClick={(e) => e.target === e.currentTarget && onClose()}\n      >\n        <ModalContent variants={contentVariants}>\n          <ModalHeader>\n            <HeaderTitle>\n              <FaHistory />\n              <h2>AI Diagnostic History</h2>\n            </HeaderTitle>\n            <CloseButton onClick={onClose}>\n              <FaTimesCircle />\n            </CloseButton>\n          </ModalHeader>\n\n          <ModalBody>\n            {loading ? (\n              <LoadingState>\n                <FaSpinner />\n                <h3>Loading Diagnostic History</h3>\n                <p>\n                  Please wait while we fetch the patient's AI diagnostic\n                  history.\n                </p>\n              </LoadingState>\n            ) : error ? (\n              <EmptyState>\n                <FaTimesCircle />\n                <h3>Error</h3>\n                <p>{error}</p>\n              </EmptyState>\n            ) : diagnosticHistory.length === 0 ? (\n              <EmptyState>\n                <FaBrain />\n                <h3>No Diagnostic History</h3>\n                <p>\n                  No AI diagnostic suggestions have been saved for this patient\n                  yet.\n                </p>\n              </EmptyState>\n            ) : (\n              <HistoryList>\n                {diagnosticHistory.map((item) => (\n                  <HistoryItem key={item._id}>\n                    <HistoryItemHeader onClick={() => toggleExpand(item._id)}>\n                      <HistoryItemDate>\n                        <FaCalendarAlt />\n                        {formatDate(item.timestamp)}\n                      </HistoryItemDate>\n                      <ToggleIcon>\n                        {expandedItems[item._id] ? (\n                          <FaChevronDown />\n                        ) : (\n                          <FaChevronRight />\n                        )}\n                      </ToggleIcon>\n                    </HistoryItemHeader>\n\n                    <AnimatePresence>\n                      {expandedItems[item._id] && (\n                        <HistoryItemContent\n                          initial={{ height: 0, opacity: 0 }}\n                          animate={{ height: \"auto\", opacity: 1 }}\n                          exit={{ height: 0, opacity: 0 }}\n                          transition={{ duration: 0.3 }}\n                        >\n                          <SummaryText>\n                            {item.diagnosisData.summary}\n                          </SummaryText>\n\n                          <h4>Primary Diagnoses</h4>\n                          <Diagnoses>\n                            {item.diagnosisData.diagnoses.map((diagnosis) => (\n                              <DiagnosisChip\n                                key={diagnosis.id}\n                                confidence={diagnosis.confidence}\n                              >\n                                <span>{diagnosis.name}</span> -{\" \"}\n                                {diagnosis.confidence}% confidence\n                              </DiagnosisChip>\n                            ))}\n                          </Diagnoses>\n                        </HistoryItemContent>\n                      )}\n                    </AnimatePresence>\n                  </HistoryItem>\n                ))}\n              </HistoryList>\n            )}\n          </ModalBody>\n        </ModalContent>\n      </ModalOverlay>\n    </AnimatePresence>\n  );\n};\n\nexport default AIDiagnosticHistoryModal;\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport api from \"../../services/apiService\";\r\nimport {\r\n  FaSearch,\r\n  FaPills,\r\n  FaSpinner,\r\n  FaFilePrescription,\r\n} from \"react-icons/fa\";\r\n\r\nconst ModalOverlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst ModalContainer = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.large};\r\n  width: 100%;\r\n  max-width: 900px;\r\n  max-height: 90vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: ${(props) => props.theme.shadows.large};\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: ${(props) => props.theme.spacing(2)}\r\n    ${(props) => props.theme.spacing(3)};\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${(props) => props.theme.spacing(0)};\r\n  overflow: hidden;\r\n  flex: 1;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  flex: 2;\r\n  border-right: 1px solid ${(props) => props.theme.colors.border.main};\r\n  overflow-y: auto;\r\n  max-height: 70vh;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  flex: 1;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  overflow-y: auto;\r\n  max-height: 70vh;\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n`;\r\n\r\nconst SearchBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  padding: ${(props) => props.theme.spacing(1)}\r\n    ${(props) => props.theme.spacing(2)};\r\n  margin-bottom: ${(props) => props.theme.spacing(2)};\r\n  border: 1px solid ${(props) => props.theme.colors.border.main};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n    margin-right: ${(props) => props.theme.spacing(1)};\r\n  }\r\n\r\n  input {\r\n    border: none;\r\n    background: none;\r\n    flex: 1;\r\n    outline: none;\r\n    font-size: 1rem;\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n  }\r\n`;\r\n\r\nconst TabsContainer = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\r\n  margin-bottom: ${(props) => props.theme.spacing(2)};\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: ${(props) => props.theme.spacing(1)}\r\n    ${(props) => props.theme.spacing(2)};\r\n  background: none;\r\n  border: none;\r\n  border-bottom: 2px solid\r\n    ${(props) =>\r\n      props.$active ? props.theme.colors.primary.main : \"transparent\"};\r\n  color: ${(props) =>\r\n    props.$active\r\n      ? props.theme.colors.primary.main\r\n      : props.theme.colors.text.secondary};\r\n  font-weight: ${(props) => (props.$active ? 600 : 400)};\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n\r\n  &:hover {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst MedicationsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst MedicationCard = styled.div`\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border: 1px solid\r\n    ${(props) =>\r\n      props.$selected\r\n        ? props.theme.colors.primary.main\r\n        : props.theme.colors.border.main};\r\n  box-shadow: ${(props) =>\r\n    props.$selected\r\n      ? `0 0 0 2px ${props.theme.colors.primary.main}30`\r\n      : props.theme.shadows.small};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst MedicationHeader = styled.div`\r\n  display: flex;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  margin-bottom: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst MedicationIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  background-color: ${(props) => `${props.theme.colors.primary.main}15`};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst MedicationInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst MedicationName = styled.h4`\r\n  margin: 0;\r\n  font-size: 1rem;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst MedicationCategory = styled.div`\r\n  font-size: 0.8rem;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n`;\r\n\r\nconst MedicationDetail = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.85rem;\r\n  margin-top: ${(props) => props.theme.spacing(1)};\r\n\r\n  span:first-child {\r\n    color: ${(props) => props.theme.colors.text.secondary};\r\n  }\r\n\r\n  span:last-child {\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst StockIndicator = styled.div`\r\n  display: inline-block;\r\n  padding: 2px 6px;\r\n  border-radius: 12px;\r\n  font-size: 0.7rem;\r\n  font-weight: 600;\r\n  margin-top: 4px;\r\n\r\n  &.high {\r\n    background-color: ${(props) => `${props.theme.colors.status.success}20`};\r\n    color: ${(props) => props.theme.colors.status.success};\r\n  }\r\n\r\n  &.medium {\r\n    background-color: ${(props) => `${props.theme.colors.status.warning}20`};\r\n    color: ${(props) => props.theme.colors.status.warning};\r\n  }\r\n\r\n  &.low {\r\n    background-color: ${(props) => `${props.theme.colors.status.error}20`};\r\n    color: ${(props) => props.theme.colors.status.error};\r\n  }\r\n`;\r\n\r\nconst PrescriptionForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: ${(props) => props.theme.spacing(1)};\r\n  border: 1px solid ${(props) => props.theme.colors.border.main};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-size: 0.95rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n    box-shadow: 0 0 0 2px ${(props) => `${props.theme.colors.primary.main}30`};\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  padding: ${(props) => props.theme.spacing(1)};\r\n  border: 1px solid ${(props) => props.theme.colors.border.main};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-size: 0.95rem;\r\n  min-height: 80px;\r\n  resize: vertical;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n    box-shadow: 0 0 0 2px ${(props) => `${props.theme.colors.primary.main}30`};\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  padding: ${(props) => props.theme.spacing(1)};\r\n  border: 1px solid ${(props) => props.theme.colors.border.main};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  font-size: 0.95rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${(props) => props.theme.colors.primary.main};\r\n    box-shadow: 0 0 0 2px ${(props) => `${props.theme.colors.primary.main}30`};\r\n  }\r\n`;\r\n\r\nconst NoMedicationsMessage = styled.div`\r\n  text-align: center;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n`;\r\n\r\nconst LoadingSpinner = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: ${(props) => props.theme.spacing(4)};\r\n\r\n  svg {\r\n    animation: spin 1s linear infinite;\r\n    font-size: 1.5rem;\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding: ${(props) => props.theme.spacing(2)}\r\n    ${(props) => props.theme.spacing(3)};\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  border-top: 1px solid ${(props) => props.theme.colors.border.main};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: ${(props) => props.theme.spacing(1)}\r\n    ${(props) => props.theme.spacing(2)};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n\r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &.primary {\r\n    background-color: ${(props) => props.theme.colors.primary.main};\r\n    color: white;\r\n\r\n    &:hover:not(:disabled) {\r\n      background-color: ${(props) => props.theme.colors.primary.dark};\r\n    }\r\n  }\r\n\r\n  &.secondary {\r\n    background-color: ${(props) => props.theme.colors.background.paper};\r\n    border: 1px solid ${(props) => props.theme.colors.border.main};\r\n    color: ${(props) => props.theme.colors.text.primary};\r\n\r\n    &:hover:not(:disabled) {\r\n      background-color: ${(props) => props.theme.colors.background.default};\r\n    }\r\n  }\r\n\r\n  svg {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst PrescriptionModal = ({\r\n  isOpen,\r\n  onClose,\r\n  patientId,\r\n  patientName,\r\n  doctorId,\r\n  doctorName,\r\n}) => {\r\n  const [medications, setMedications] = useState([]);\r\n  const [filteredMedications, setFilteredMedications] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"all\");\r\n  const [selectedMedication, setSelectedMedication] = useState(null);\r\n  const [prescriptionData, setPrescriptionData] = useState({\r\n    dosage: \"\",\r\n    frequency: \"\",\r\n    duration: \"\",\r\n    instructions: \"\",\r\n    quantity: 1,\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMedications = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const result = await api.getMedications();\r\n        setMedications(result);\r\n        setFilteredMedications(result);\r\n      } catch (err) {\r\n        console.error(\"Error fetching medications:\", err);\r\n        setError(\"Failed to load medications. Please try again.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      fetchMedications();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    filterMedications();\r\n  }, [searchTerm, activeTab, medications]);\r\n\r\n  const filterMedications = () => {\r\n    let filtered = [...medications];\r\n\r\n    // Apply category/status filter\r\n    if (activeTab === \"low-stock\") {\r\n      filtered = filtered.filter((med) => med.stockStatus === \"low\");\r\n    } else if (activeTab !== \"all\") {\r\n      // This assumes your categories are available as tabs\r\n      filtered = filtered.filter(\r\n        (med) => med.category.toLowerCase() === activeTab\r\n      );\r\n    }\r\n\r\n    // Apply search filter\r\n    if (searchTerm.trim()) {\r\n      const term = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (med) =>\r\n          med.name.toLowerCase().includes(term) ||\r\n          med.category.toLowerCase().includes(term) ||\r\n          med.manufacturer?.toLowerCase().includes(term)\r\n      );\r\n    }\r\n\r\n    setFilteredMedications(filtered);\r\n  };\r\n\r\n  const handleMedicationSelect = (medication) => {\r\n    setSelectedMedication(medication);\r\n    // Auto-fill some prescription data based on the medication\r\n    setPrescriptionData({\r\n      ...prescriptionData,\r\n      dosage: medication.dosage || \"\",\r\n    });\r\n  };\r\n\r\n  const handlePrescriptionChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPrescriptionData({\r\n      ...prescriptionData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!selectedMedication) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      setError(null);\r\n\r\n      const prescriptionToAdd = {\r\n        medicine: selectedMedication.name,\r\n        medicationId: selectedMedication.id,\r\n        category: selectedMedication.category,\r\n        ...prescriptionData,\r\n        date: new Date().toISOString(),\r\n        doctor: doctorName,\r\n        doctorId: doctorId,\r\n      };\r\n\r\n      await api.addPrescriptionToPatient(patientId, prescriptionToAdd);\r\n      onClose(true); // Pass true to indicate success for refreshing\r\n    } catch (err) {\r\n      console.error(\"Error adding prescription:\", err);\r\n      // Handle both error objects and error messages\r\n      const errorMessage =\r\n        err.message || \"Failed to add prescription. Please try again.\";\r\n      setError(errorMessage);\r\n      setSubmitting(false); // Make sure to set submitting to false here\r\n    }\r\n  };\r\n\r\n  const getStockLabel = (status) => {\r\n    switch (status) {\r\n      case \"high\":\r\n        return \"In Stock\";\r\n      case \"medium\":\r\n        return \"Limited Stock\";\r\n      case \"low\":\r\n        return \"Low Stock\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  };\r\n\r\n  const renderCategories = () => {\r\n    // Get unique categories for tabs\r\n    const categories = Array.from(\r\n      new Set(medications.map((med) => med.category.toLowerCase()))\r\n    );\r\n\r\n    return (\r\n      <TabsContainer>\r\n        <Tab $active={activeTab === \"all\"} onClick={() => setActiveTab(\"all\")}>\r\n          All Medications\r\n        </Tab>\r\n        <Tab\r\n          $active={activeTab === \"low-stock\"}\r\n          onClick={() => setActiveTab(\"low-stock\")}\r\n        >\r\n          Low Stock\r\n        </Tab>\r\n        {categories.slice(0, 5).map((category) => (\r\n          <Tab\r\n            key={category}\r\n            $active={activeTab === category}\r\n            onClick={() => setActiveTab(category)}\r\n          >\r\n            {category.charAt(0).toUpperCase() + category.slice(1)}\r\n          </Tab>\r\n        ))}\r\n      </TabsContainer>\r\n    );\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <ModalOverlay\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        onClick={(e) => {\r\n          if (e.target === e.currentTarget) onClose();\r\n        }}\r\n      >\r\n        <ModalContainer\r\n          initial={{ scale: 0.9, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.9, opacity: 0 }}\r\n          transition={{ type: \"spring\", damping: 20 }}\r\n        >\r\n          <ModalHeader>\r\n            <ModalTitle>\r\n              <FaFilePrescription /> Prescribe Medication for {patientName}\r\n            </ModalTitle>\r\n            <CloseButton onClick={onClose}>×</CloseButton>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <SearchBar>\r\n              <FaSearch />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search medications...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </SearchBar>\r\n\r\n            <ModalContent>\r\n              <LeftPanel>\r\n                {renderCategories()}\r\n\r\n                {loading ? (\r\n                  <LoadingSpinner>\r\n                    <FaSpinner />\r\n                  </LoadingSpinner>\r\n                ) : error ? (\r\n                  <NoMedicationsMessage>{error}</NoMedicationsMessage>\r\n                ) : filteredMedications.length === 0 ? (\r\n                  <NoMedicationsMessage>\r\n                    No medications found. Try adjusting your filters.\r\n                  </NoMedicationsMessage>\r\n                ) : (\r\n                  <MedicationsGrid>\r\n                    {filteredMedications.map((medication) => (\r\n                      <MedicationCard\r\n                        key={medication.id}\r\n                        $selected={selectedMedication?.id === medication.id}\r\n                        onClick={() => handleMedicationSelect(medication)}\r\n                      >\r\n                        <MedicationHeader>\r\n                          <MedicationIcon>\r\n                            <FaPills />\r\n                          </MedicationIcon>\r\n                          <MedicationInfo>\r\n                            <MedicationName>{medication.name}</MedicationName>\r\n                            <MedicationCategory>\r\n                              {medication.category}\r\n                            </MedicationCategory>\r\n                          </MedicationInfo>\r\n                        </MedicationHeader>\r\n\r\n                        <MedicationDetail>\r\n                          <span>Dosage:</span>\r\n                          <span>{medication.dosage}</span>\r\n                        </MedicationDetail>\r\n\r\n                        <MedicationDetail>\r\n                          <span>Form:</span>\r\n                          <span>{medication.form}</span>\r\n                        </MedicationDetail>\r\n\r\n                        <MedicationDetail>\r\n                          <span>Stock:</span>\r\n                          <span>\r\n                            {medication.stock} units\r\n                            <StockIndicator className={medication.stockStatus}>\r\n                              {getStockLabel(medication.stockStatus)}\r\n                            </StockIndicator>\r\n                          </span>\r\n                        </MedicationDetail>\r\n                      </MedicationCard>\r\n                    ))}\r\n                  </MedicationsGrid>\r\n                )}\r\n              </LeftPanel>\r\n\r\n              <RightPanel>\r\n                <h3>Prescription Details</h3>\r\n\r\n                {!selectedMedication ? (\r\n                  <div\r\n                    style={{\r\n                      padding: \"20px 0\",\r\n                      color: \"#666\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Please select a medication from the list\r\n                  </div>\r\n                ) : (\r\n                  <PrescriptionForm\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      handleSubmit();\r\n                    }}\r\n                  >\r\n                    <FormGroup>\r\n                      <Label>Selected Medication</Label>\r\n                      <div style={{ fontWeight: 500 }}>\r\n                        {selectedMedication.name} ({selectedMedication.dosage})\r\n                      </div>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"dosage\">Dosage Instructions*</Label>\r\n                      <Input\r\n                        id=\"dosage\"\r\n                        name=\"dosage\"\r\n                        value={prescriptionData.dosage}\r\n                        onChange={handlePrescriptionChange}\r\n                        required\r\n                        placeholder=\"e.g., 2 tablets\"\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"frequency\">Frequency*</Label>\r\n                      <Select\r\n                        id=\"frequency\"\r\n                        name=\"frequency\"\r\n                        value={prescriptionData.frequency}\r\n                        onChange={handlePrescriptionChange}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select frequency</option>\r\n                        <option value=\"Once daily\">Once daily</option>\r\n                        <option value=\"Twice daily\">Twice daily</option>\r\n                        <option value=\"Three times daily\">\r\n                          Three times daily\r\n                        </option>\r\n                        <option value=\"Four times daily\">\r\n                          Four times daily\r\n                        </option>\r\n                        <option value=\"Every 4 hours\">Every 4 hours</option>\r\n                        <option value=\"Every 6 hours\">Every 6 hours</option>\r\n                        <option value=\"Every 8 hours\">Every 8 hours</option>\r\n                        <option value=\"Every 12 hours\">Every 12 hours</option>\r\n                        <option value=\"As needed\">As needed</option>\r\n                        <option value=\"Weekly\">Weekly</option>\r\n                      </Select>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"duration\">Duration*</Label>\r\n                      <Input\r\n                        id=\"duration\"\r\n                        name=\"duration\"\r\n                        value={prescriptionData.duration}\r\n                        onChange={handlePrescriptionChange}\r\n                        required\r\n                        placeholder=\"e.g., 7 days\"\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"quantity\">Quantity</Label>\r\n                      <Input\r\n                        id=\"quantity\"\r\n                        name=\"quantity\"\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={prescriptionData.quantity}\r\n                        onChange={handlePrescriptionChange}\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"instructions\">\r\n                        Additional Instructions\r\n                      </Label>\r\n                      <TextArea\r\n                        id=\"instructions\"\r\n                        name=\"instructions\"\r\n                        value={prescriptionData.instructions}\r\n                        onChange={handlePrescriptionChange}\r\n                        placeholder=\"Any special instructions for taking this medication\"\r\n                      />\r\n                    </FormGroup>\r\n\r\n                    {error && (\r\n                      <div\r\n                        style={{\r\n                          color: \"red\",\r\n                          padding: \"8px\",\r\n                          backgroundColor: \"#fee\",\r\n                          borderRadius: \"4px\",\r\n                          fontSize: \"0.9rem\",\r\n                        }}\r\n                      >\r\n                        {error}\r\n                      </div>\r\n                    )}\r\n                  </PrescriptionForm>\r\n                )}\r\n              </RightPanel>\r\n            </ModalContent>\r\n          </ModalBody>\r\n\r\n          <ActionButtons>\r\n            <Button className=\"secondary\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"primary\"\r\n              onClick={handleSubmit}\r\n              disabled={\r\n                !selectedMedication ||\r\n                !prescriptionData.dosage ||\r\n                !prescriptionData.frequency ||\r\n                !prescriptionData.duration ||\r\n                submitting\r\n              }\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <FaSpinner className=\"spin\" /> Prescribing...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FaFilePrescription /> Prescribe Medication\r\n                </>\r\n              )}\r\n            </Button>\r\n          </ActionButtons>\r\n        </ModalContainer>\r\n      </ModalOverlay>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default PrescriptionModal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  FaFileMedical,\r\n  FaCalendarAlt,\r\n  FaUser,\r\n  FaDownload,\r\n  FaPrint,\r\n  FaHeartbeat,\r\n  FaChartLine,\r\n  FaNotesMedical,\r\n  FaSyringe,\r\n  FaArrowRight,\r\n  FaChevronDown,\r\n  FaChevronUp,\r\n  FaExclamationTriangle,\r\n  FaCheck,\r\n} from \"react-icons/fa\";\r\n\r\nconst ReportCard = styled(motion.div)`\r\n  background-color: ${(props) => props.theme.colors.background.paper};\r\n  border-radius: ${(props) => props.theme.borderRadius.medium};\r\n  box-shadow: ${(props) => props.theme.shadows.small};\r\n  overflow: hidden;\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n  border: 1px solid ${(props) => props.theme.colors.border.main};\r\n`;\r\n\r\nconst ReportHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ReportTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst ReportDate = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  font-size: 0.9rem;\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n`;\r\n\r\nconst ReportContent = styled.div`\r\n  padding: ${(props) => props.theme.spacing(3)};\r\n  display: ${(props) => (props.$isExpanded ? \"block\" : \"none\")};\r\n`;\r\n\r\nconst InfoGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: ${(props) => props.theme.spacing(3)};\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst InfoSection = styled.div`\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n  font-weight: 600;\r\n  margin-bottom: ${(props) => props.theme.spacing(1)};\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.colors.primary.main};\r\n  }\r\n`;\r\n\r\nconst DataItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: ${(props) => props.theme.spacing(0.5)} 0;\r\n  border-bottom: 1px dotted ${(props) => props.theme.colors.border.main};\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst DataLabel = styled.span`\r\n  color: ${(props) => props.theme.colors.text.secondary};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst DataValue = styled.span`\r\n  color: ${(props) => props.theme.colors.text.primary};\r\n  font-weight: ${(props) => (props.$abnormal ? \"600\" : \"normal\")};\r\n\r\n  ${(props) =>\r\n    props.$abnormal &&\r\n    `\r\n    color: ${props.theme.colors.status.error};\r\n  `}\r\n`;\r\n\r\nconst DiagnosisSection = styled.div`\r\n  background-color: ${(props) =>\r\n    props.$highlighted\r\n      ? `${props.theme.colors.primary.main}10`\r\n      : props.theme.colors.background.default};\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  margin-bottom: ${(props) => props.theme.spacing(3)};\r\n  border-left: 3px solid ${(props) => props.theme.colors.primary.main};\r\n`;\r\n\r\nconst NotesSection = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing(3)};\r\n  padding: ${(props) => props.theme.spacing(2)};\r\n  background-color: ${(props) => props.theme.colors.background.default};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: ${(props) => props.theme.spacing(2)};\r\n  margin-top: ${(props) => props.theme.spacing(3)};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  padding: ${(props) => `${props.theme.spacing(1)} ${props.theme.spacing(2)}`};\r\n  border-radius: ${(props) => props.theme.borderRadius.small};\r\n  background-color: ${(props) =>\r\n    props.variant === \"secondary\"\r\n      ? props.theme.colors.background.default\r\n      : props.theme.colors.primary.main};\r\n  color: ${(props) =>\r\n    props.variant === \"secondary\" ? props.theme.colors.text.primary : \"white\"};\r\n  border: 1px solid\r\n    ${(props) =>\r\n      props.variant === \"secondary\"\r\n        ? props.theme.colors.border.main\r\n        : props.theme.colors.primary.main};\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.variant === \"secondary\"\r\n        ? props.theme.colors.background.paper\r\n        : props.theme.colors.primary.dark};\r\n  }\r\n`;\r\n\r\nconst VisualIndicator = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.9rem;\r\n  gap: ${(props) => props.theme.spacing(1)};\r\n  margin: ${(props) => props.theme.spacing(1)} 0;\r\n  color: ${(props) => {\r\n    if (props.$status === \"normal\") return props.theme.colors.success;\r\n    if (props.$status === \"warning\") return props.theme.colors.warning;\r\n    if (props.$status === \"alert\") return props.theme.colors.status.error;\r\n    return props.theme.colors.text.secondary;\r\n  }};\r\n`;\r\n\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nconst MedicalReportCard = ({ report }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  if (!report) return null;\r\n\r\n  const renderVitalSigns = () => {\r\n    if (!report.vitalSigns) return null;\r\n\r\n    const getVitalStatus = (type, value) => {\r\n      if (type === \"bloodPressure\") {\r\n        const [systolic, diastolic] = value.split(\"/\").map(Number);\r\n        if (systolic >= 140 || diastolic >= 90) return \"alert\";\r\n        if (systolic >= 120 || diastolic >= 80) return \"warning\";\r\n        return \"normal\";\r\n      }\r\n\r\n      if (type === \"heartRate\") {\r\n        const rate = Number(value);\r\n        if (rate > 100 || rate < 60) return \"warning\";\r\n        if (rate > 120 || rate < 50) return \"alert\";\r\n        return \"normal\";\r\n      }\r\n\r\n      if (type === \"temperature\") {\r\n        const temp = Number(value);\r\n        if (temp > 99.5 || temp < 97) return \"warning\";\r\n        if (temp > 100.4 || temp < 96) return \"alert\";\r\n        return \"normal\";\r\n      }\r\n\r\n      if (type === \"bloodGlucose\") {\r\n        const glucose = Number(value);\r\n        if (glucose > 125 || glucose < 70) return \"warning\";\r\n        if (glucose > 180 || glucose < 55) return \"alert\";\r\n        return \"normal\";\r\n      }\r\n\r\n      return \"normal\";\r\n    };\r\n\r\n    const getStatusIcon = (status) => {\r\n      if (status === \"normal\") return <FaCheck />;\r\n      if (status === \"warning\") return <FaExclamationTriangle />;\r\n      if (status === \"alert\") return <FaExclamationTriangle />;\r\n      return null;\r\n    };\r\n\r\n    return (\r\n      <InfoSection>\r\n        <SectionTitle>\r\n          <FaHeartbeat /> Vital Signs\r\n        </SectionTitle>\r\n\r\n        {report.vitalSigns.bloodPressure && (\r\n          <>\r\n            <DataItem>\r\n              <DataLabel>Blood Pressure</DataLabel>\r\n              <DataValue>{report.vitalSigns.bloodPressure}</DataValue>\r\n            </DataItem>\r\n            <VisualIndicator\r\n              $status={getVitalStatus(\r\n                \"bloodPressure\",\r\n                report.vitalSigns.bloodPressure\r\n              )}\r\n            >\r\n              {getStatusIcon(\r\n                getVitalStatus(\"bloodPressure\", report.vitalSigns.bloodPressure)\r\n              )}\r\n              {getVitalStatus(\r\n                \"bloodPressure\",\r\n                report.vitalSigns.bloodPressure\r\n              ) === \"normal\"\r\n                ? \"Normal\"\r\n                : getVitalStatus(\r\n                    \"bloodPressure\",\r\n                    report.vitalSigns.bloodPressure\r\n                  ) === \"warning\"\r\n                ? \"Elevated\"\r\n                : \"Hypertension\"}\r\n            </VisualIndicator>\r\n          </>\r\n        )}\r\n\r\n        {report.vitalSigns.heartRate && (\r\n          <>\r\n            <DataItem>\r\n              <DataLabel>Heart Rate</DataLabel>\r\n              <DataValue>{report.vitalSigns.heartRate} bpm</DataValue>\r\n            </DataItem>\r\n            <VisualIndicator\r\n              $status={getVitalStatus(\"heartRate\", report.vitalSigns.heartRate)}\r\n            >\r\n              {getStatusIcon(\r\n                getVitalStatus(\"heartRate\", report.vitalSigns.heartRate)\r\n              )}\r\n              {getVitalStatus(\"heartRate\", report.vitalSigns.heartRate) ===\r\n              \"normal\"\r\n                ? \"Normal\"\r\n                : \"Abnormal\"}\r\n            </VisualIndicator>\r\n          </>\r\n        )}\r\n\r\n        {report.vitalSigns.temperature && (\r\n          <DataItem>\r\n            <DataLabel>Temperature</DataLabel>\r\n            <DataValue>{report.vitalSigns.temperature}°F</DataValue>\r\n          </DataItem>\r\n        )}\r\n\r\n        {report.vitalSigns.respiratoryRate && (\r\n          <DataItem>\r\n            <DataLabel>Respiratory Rate</DataLabel>\r\n            <DataValue>{report.vitalSigns.respiratoryRate} bpm</DataValue>\r\n          </DataItem>\r\n        )}\r\n\r\n        {report.vitalSigns.oxygenSaturation && (\r\n          <DataItem>\r\n            <DataLabel>Oxygen Saturation</DataLabel>\r\n            <DataValue>{report.vitalSigns.oxygenSaturation}</DataValue>\r\n          </DataItem>\r\n        )}\r\n\r\n        {report.vitalSigns.bloodGlucose && (\r\n          <>\r\n            <DataItem>\r\n              <DataLabel>Blood Glucose</DataLabel>\r\n              <DataValue>{report.vitalSigns.bloodGlucose} mg/dL</DataValue>\r\n            </DataItem>\r\n            <VisualIndicator\r\n              $status={getVitalStatus(\r\n                \"bloodGlucose\",\r\n                report.vitalSigns.bloodGlucose\r\n              )}\r\n            >\r\n              {getStatusIcon(\r\n                getVitalStatus(\"bloodGlucose\", report.vitalSigns.bloodGlucose)\r\n              )}\r\n              {getVitalStatus(\r\n                \"bloodGlucose\",\r\n                report.vitalSigns.bloodGlucose\r\n              ) === \"normal\"\r\n                ? \"Normal\"\r\n                : getVitalStatus(\r\n                    \"bloodGlucose\",\r\n                    report.vitalSigns.bloodGlucose\r\n                  ) === \"warning\"\r\n                ? \"Elevated\"\r\n                : \"High\"}\r\n            </VisualIndicator>\r\n          </>\r\n        )}\r\n      </InfoSection>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ReportCard>\r\n      <ReportHeader onClick={() => setIsExpanded(!isExpanded)}>\r\n        <ReportTitle>\r\n          <FaFileMedical /> {report.recordType || \"Medical Report\"} -{\" \"}\r\n          {report.diagnosis}\r\n        </ReportTitle>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n          <ReportDate>\r\n            <FaCalendarAlt /> {formatDate(report.date)}\r\n          </ReportDate>\r\n          {isExpanded ? <FaChevronUp /> : <FaChevronDown />}\r\n        </div>\r\n      </ReportHeader>\r\n\r\n      <ReportContent $isExpanded={isExpanded}>\r\n        <InfoGrid>\r\n          <InfoSection>\r\n            <SectionTitle>\r\n              <FaUser /> Provider Information\r\n            </SectionTitle>\r\n            <DataItem>\r\n              <DataLabel>Doctor</DataLabel>\r\n              <DataValue>\r\n                {report.doctorId?.name || report.doctorId || \"Unknown\"}\r\n              </DataValue>\r\n            </DataItem>\r\n            <DataItem>\r\n              <DataLabel>Department</DataLabel>\r\n              <DataValue>\r\n                {report.departmentId?.name || report.departmentId || \"Unknown\"}\r\n              </DataValue>\r\n            </DataItem>\r\n            <DataItem>\r\n              <DataLabel>Consultation ID</DataLabel>\r\n              <DataValue>{report.consultationId || \"N/A\"}</DataValue>\r\n            </DataItem>\r\n          </InfoSection>\r\n\r\n          {renderVitalSigns()}\r\n\r\n          <InfoSection>\r\n            <SectionTitle>\r\n              <FaNotesMedical /> Symptoms & Complaints\r\n            </SectionTitle>\r\n            {report.symptoms && report.symptoms.length > 0 ? (\r\n              report.symptoms.map((symptom, index) => (\r\n                <div key={index} style={{ padding: \"3px 0\" }}>\r\n                  <FaArrowRight\r\n                    style={{ fontSize: \"0.8rem\", marginRight: \"8px\" }}\r\n                  />{\" \"}\r\n                  {symptom}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div>No symptoms recorded</div>\r\n            )}\r\n          </InfoSection>\r\n        </InfoGrid>\r\n\r\n        <DiagnosisSection $highlighted={true}>\r\n          <SectionTitle>\r\n            <FaChartLine /> Diagnosis\r\n          </SectionTitle>\r\n          <div\r\n            style={{ fontSize: \"1.1rem\", fontWeight: \"500\", margin: \"8px 0\" }}\r\n          >\r\n            {report.diagnosis || \"No diagnosis recorded\"}\r\n          </div>\r\n        </DiagnosisSection>\r\n\r\n        <InfoSection>\r\n          <SectionTitle>\r\n            <FaSyringe /> Treatment Plan\r\n          </SectionTitle>\r\n          <div style={{ margin: \"8px 0\" }}>\r\n            {report.treatmentPlan || \"No treatment plan recorded\"}\r\n          </div>\r\n          {report.followUp && (\r\n            <div style={{ marginTop: \"12px\", fontStyle: \"italic\" }}>\r\n              Follow-up: {report.followUp}\r\n            </div>\r\n          )}\r\n        </InfoSection>\r\n\r\n        {report.notes && (\r\n          <NotesSection>\r\n            <SectionTitle>Clinician Notes</SectionTitle>\r\n            <div style={{ margin: \"8px 0\" }}>{report.notes}</div>\r\n          </NotesSection>\r\n        )}\r\n\r\n        <ActionButtons>\r\n          <Button variant=\"secondary\">\r\n            <FaPrint /> Print\r\n          </Button>\r\n          <Button>\r\n            <FaDownload /> Download PDF\r\n          </Button>\r\n        </ActionButtons>\r\n      </ReportContent>\r\n    </ReportCard>\r\n  );\r\n};\r\n\r\nexport default MedicalReportCard;\r\n","/**\r\n * Helper functions for formatting medical data consistently across the application\r\n */\r\n\r\n/**\r\n * Format lab reports for display\r\n * @param {Array} reports - Raw lab reports from the API\r\n * @returns {Array} - Formatted lab reports\r\n */\r\nexport const getFormattedLabReports = (reports = []) => {\r\n  if (!reports || !Array.isArray(reports)) {\r\n    console.warn(\"Invalid lab reports data:\", reports);\r\n    return [];\r\n  }\r\n\r\n  return reports.map((report) => ({\r\n    id: report._id || report.id,\r\n    testName: report.testName || \"Unknown Test\",\r\n    date: report.date || report.createdAt || new Date().toISOString(),\r\n    status: report.status || \"completed\",\r\n    doctor: report.doctor?.name || report.doctorName || \"Unknown Doctor\",\r\n    patient: report.patient?.name || report.patientName || \"Unknown Patient\",\r\n    results: report.results || [],\r\n    summary: report.summary || \"\",\r\n    department: report.department?.name || report.departmentName || \"General\",\r\n    type: report.type || \"Lab Test\",\r\n    technician:\r\n      report.technician?.name || report.technicianName || \"Unknown Technician\",\r\n    reportUrl: report.reportUrl || \"\",\r\n    normalRanges: report.normalRanges || {},\r\n  }));\r\n};\r\n\r\n/**\r\n * Format medical records for display\r\n * @param {Array} records - Raw medical records from the API\r\n * @returns {Array} - Formatted medical records\r\n */\r\nexport const getFormattedMedicalRecords = (records = []) => {\r\n  if (!records || !Array.isArray(records)) {\r\n    console.warn(\"Invalid medical records data:\", records);\r\n    return [];\r\n  }\r\n\r\n  return records.map((record) => ({\r\n    id: record._id || record.id,\r\n    type: record.type || \"Check-up\",\r\n    date: record.date || record.createdAt || new Date().toISOString(),\r\n    doctor: record.doctor?.name || record.doctorName || \"Unknown Doctor\",\r\n    patient: record.patient?.name || record.patientName || \"Unknown Patient\",\r\n    diagnosis: record.diagnosis || [],\r\n    symptoms: record.symptoms || [],\r\n    notes: record.notes || \"\",\r\n    treatment: record.treatment || \"\",\r\n    medications: record.medications || [],\r\n    followUp: record.followUp || null,\r\n    department: record.department?.name || record.departmentName || \"General\",\r\n    attachments: record.attachments || [],\r\n  }));\r\n};\r\n\r\n/**\r\n * Format medications for display\r\n * @param {Array} medications - Raw medications from the API\r\n * @returns {Array} - Formatted medications\r\n */\r\nexport const getFormattedMedications = (medications = []) => {\r\n  if (!medications || !Array.isArray(medications)) {\r\n    console.warn(\"Invalid medications data:\", medications);\r\n    return [];\r\n  }\r\n\r\n  return medications.map((med) => ({\r\n    id: med._id || med.id,\r\n    name: med.name || \"Unknown Medication\",\r\n    dosage: med.dosage || \"\",\r\n    frequency: med.frequency || \"\",\r\n    duration: med.duration || \"\",\r\n    startDate: med.startDate || new Date().toISOString(),\r\n    endDate: med.endDate || null,\r\n    instructions: med.instructions || \"\",\r\n    prescribedBy: med.prescribedBy?.name || med.doctorName || \"Unknown Doctor\",\r\n    prescribedDate:\r\n      med.prescribedDate || med.createdAt || new Date().toISOString(),\r\n    status: med.status || \"active\",\r\n    refills: med.refills || 0,\r\n    sideEffects: med.sideEffects || [],\r\n    category: med.category || \"General\",\r\n  }));\r\n};\r\n\r\n/**\r\n * Format a date in a consistent way for display\r\n * @param {string} dateString - ISO date string\r\n * @returns {string} - Formatted date (e.g., \"Jan 15, 2023\")\r\n */\r\nexport const formatDate = (dateString) => {\r\n  if (!dateString) return \"N/A\";\r\n\r\n  try {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error formatting date:\", error);\r\n    return \"Invalid Date\";\r\n  }\r\n};\r\n\r\n/**\r\n * Calculate age from a birth date\r\n * @param {string} birthDateString - ISO date string of birth date\r\n * @returns {number} - Age in years\r\n */\r\nexport const calculateAge = (birthDateString) => {\r\n  if (!birthDateString) return \"N/A\";\r\n\r\n  try {\r\n    const birthDate = new Date(birthDateString);\r\n    const today = new Date();\r\n    let age = today.getFullYear() - birthDate.getFullYear();\r\n    const monthDiff = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (\r\n      monthDiff < 0 ||\r\n      (monthDiff === 0 && today.getDate() < birthDate.getDate())\r\n    ) {\r\n      age--;\r\n    }\r\n\r\n    return age;\r\n  } catch (error) {\r\n    console.error(\"Error calculating age:\", error);\r\n    return \"N/A\";\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport PageTransition from \"../components/animations/PageTransition\";\nimport { childVariants } from \"../components/animations/PageTransition\";\nimport AnimationContainer from \"../components/animations/AnimationContainer\";\nimport {\n  FaArrowLeft,\n  FaEdit,\n  FaCalendarPlus,\n  FaFileMedical,\n  FaFilePrescription,\n  FaPrint,\n  FaTrashAlt,\n  FaUser,\n  FaFlask,\n  FaVial,\n  FaBrain,\n  FaHistory,\n  FaHeartbeat,\n  FaChartLine,\n  FaFileAlt,\n} from \"react-icons/fa\";\nimport { useAuth } from \"../context/AuthContext\";\nimport RequestLabTest from \"../components/modals/RequestLabTest\";\nimport ViewLabReport from \"../components/modals/ViewLabReport\";\nimport SmartDiagnosisModal from \"../components/modals/SmartDiagnosisModal\";\nimport AIDiagnosticHistoryModal from \"../components/modals/AIDiagnosticHistoryModal\";\nimport PrescriptionModal from \"../components/modals/PrescriptionModal\";\nimport MedicalReportCard from \"../components/medical/MedicalReportCard\";\nimport LabReportCard from \"../components/medical/LabReportCard\";\nimport api from \"../services/apiService\";\nimport {\n  getFormattedLabReports,\n  getFormattedMedicalRecords,\n} from \"../services/medicalDataFormatters\";\nimport Card from \"../components/ui/Card\";\nimport Button from \"../components/ui/Button\";\n\nconst PageHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst BackButton = styled(motion.button)`\n  background: none;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-size: 0.9rem;\n  cursor: pointer;\n  padding: ${(props) => props.theme.spacing(1)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  margin-right: ${(props) => props.theme.spacing(2)};\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.background.default};\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin: 0;\n  flex: 1;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst ContentContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: ${(props) => props.theme.spacing(4)};\n\n  @media (max-width: 992px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst PatientProfileCard = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.small};\n  padding: ${(props) => props.theme.spacing(3)};\n  height: fit-content;\n`;\n\nconst PatientAvatar = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n`;\n\nconst AvatarCircle = styled.div`\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.colors.background.default};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-size: 3rem;\n`;\n\nconst PatientName = styled.h2`\n  text-align: center;\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  color: ${(props) => props.theme.colors.text.primary};\n  font-size: 1.4rem;\n`;\n\nconst PatientBasicDetails = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  text-align: center;\n`;\n\nconst PatientBasicInfo = styled.p`\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n  font-size: 0.95rem;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-top: 1px solid ${(props) => props.theme.colors.border.main};\n  margin: ${(props) => props.theme.spacing(3)} 0;\n`;\n\nconst DetailsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst DetailItem = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DetailLabel = styled.span`\n  font-size: 0.85rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n`;\n\nconst DetailValue = styled.span`\n  color: ${(props) => props.theme.colors.text.primary};\n  font-weight: 500;\n`;\n\nconst TabsWrapper = styled.div`\n  width: 100%;\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst TabsHeader = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n\n  /* Hide scrollbar for Chrome, Safari and Opera */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  /* Hide scrollbar for IE, Edge and Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n`;\n\nconst TabButton = styled.button`\n  padding: ${(props) => props.theme.spacing(2)}\n    ${(props) => props.theme.spacing(4)};\n  background: none;\n  border: none;\n  white-space: nowrap;\n  font-size: 1rem;\n  font-weight: ${(props) => (props.$isActive ? \"600\" : \"400\")};\n  color: ${(props) =>\n    props.$isActive\n      ? props.theme.colors.primary.main\n      : props.theme.colors.text.secondary};\n  border-bottom: 3px solid\n    ${(props) =>\n      props.$isActive ? props.theme.colors.primary.main : \"transparent\"};\n  transition: all 0.2s ease;\n  cursor: pointer;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.primary.main};\n    background-color: ${(props) => props.theme.colors.background.hover};\n  }\n\n  &:focus {\n    outline: none;\n    background-color: ${(props) => props.theme.colors.background.hover};\n  }\n\n  svg {\n    margin-right: ${(props) => props.theme.spacing(1)};\n    vertical-align: middle;\n  }\n`;\n\nconst TabContent = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.default};\n  padding-top: ${(props) => props.theme.spacing(3)};\n`;\n\nconst MedicalInfoCard = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.small};\n  padding: ${(props) => props.theme.spacing(3)};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n`;\n\nconst SectionTitle = styled.h3`\n  color: ${(props) => props.theme.colors.text.primary};\n  font-size: 1.1rem;\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst AppointmentList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst AppointmentItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) => props.theme.colors.background.default};\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst AppointmentDate = styled.div`\n  background-color: ${(props) => props.theme.colors.primary.main};\n  color: white;\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  padding: ${(props) => props.theme.spacing(1)};\n  min-width: 60px;\n  text-align: center;\n`;\n\nconst AppointmentDay = styled.div`\n  font-weight: bold;\n  font-size: 1.2rem;\n`;\n\nconst AppointmentMonth = styled.div`\n  font-size: 0.8rem;\n`;\n\nconst AppointmentInfo = styled.div`\n  flex: 1;\n`;\n\nconst AppointmentTitle = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst AppointmentDetails = styled.div`\n  font-size: 0.85rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst AppointmentStatus = styled.div`\n  padding: ${(props) => props.theme.spacing(0.5)}\n    ${(props) => props.theme.spacing(1.5)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  font-size: 0.8rem;\n  font-weight: 500;\n  background-color: ${(props) => {\n    switch (props.$status) {\n      case \"scheduled\":\n        return props.theme.colors.status.infoLight;\n      case \"completed\":\n        return props.theme.colors.status.successLight;\n      case \"cancelled\":\n        return props.theme.colors.status.errorLight;\n      default:\n        return props.theme.colors.status.warningLight;\n    }\n  }};\n  color: ${(props) => {\n    switch (props.$status) {\n      case \"scheduled\":\n        return props.theme.colors.status.info;\n      case \"completed\":\n        return props.theme.colors.status.success;\n      case \"cancelled\":\n        return props.theme.colors.status.error;\n      default:\n        return props.theme.colors.status.warning;\n    }\n  }};\n`;\n\n// New styled components for the summary card\nconst SummaryCard = styled.div`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  box-shadow: ${(props) => props.theme.shadows.small};\n  padding: ${(props) => props.theme.spacing(3)};\n  margin-bottom: ${(props) => props.theme.spacing(3)};\n  border-left: 4px solid ${(props) => props.theme.colors.primary.main};\n`;\n\nconst SummaryHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n    font-size: 1.5rem;\n    margin-right: ${(props) => props.theme.spacing(1)};\n  }\n\n  h3 {\n    margin: 0;\n    color: ${(props) => props.theme.colors.text.primary};\n  }\n`;\n\nconst SummaryContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spacing(2)};\n`;\n\nconst SummaryItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spacing(1)};\n\n  svg {\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n\n  span {\n    color: ${(props) => props.theme.colors.text.secondary};\n  }\n`;\n\n// Implement the Tabs system\nconst Tabs = ({ children, activeTab, setActiveTab }) => {\n  // Extract tabs from children\n  const tabs = React.Children.toArray(children).filter(\n    (child) => child.type === Tab\n  );\n\n  return (\n    <TabsWrapper>\n      <TabsHeader>\n        {tabs.map((tab, index) => (\n          <TabButton\n            key={tab.props.id || index}\n            $isActive={activeTab === (tab.props.id || index)}\n            onClick={() => setActiveTab(tab.props.id || index)}\n          >\n            {tab.props.icon && (\n              <span className=\"tab-icon\">{tab.props.icon}</span>\n            )}\n            {tab.props.label}\n          </TabButton>\n        ))}\n      </TabsHeader>\n      <TabContent\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n      >\n        {tabs.find(\n          (tab) => tab.props.id === activeTab || tabs.indexOf(tab) === activeTab\n        )}\n      </TabContent>\n    </TabsWrapper>\n  );\n};\n\nconst Tab = ({ children, id, label, icon }) => {\n  return (\n    <div role=\"tabpanel\" id={`tabpanel-${id}`}>\n      {children}\n    </div>\n  );\n};\n\nconst PatientDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [patient, setPatient] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const [labReports, setLabReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState(\"appointments\");\n  const [showLabTestModal, setShowLabTestModal] = useState(false);\n  const [selectedLabReport, setSelectedLabReport] = useState(null);\n  const [showLabReportModal, setShowLabReportModal] = useState(false);\n  const [showSmartDiagnosisModal, setShowSmartDiagnosisModal] = useState(false);\n  const [showAIDiagnosticHistoryModal, setShowAIDiagnosticHistoryModal] =\n    useState(false);\n  const [showPrescriptionModal, setShowPrescriptionModal] = useState(false);\n  const [patientSummary, setPatientSummary] = useState(null);\n  const [summaryLoading, setSummaryLoading] = useState(false);\n\n  // Extract fetchData function outside of useEffect so it can be reused\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      console.log(\"Fetching patient with ID:\", id);\n\n      // Fetch patient data from api\n      try {\n        const patientData = await api.getPatientById(id);\n        console.log(\"Fetched patient data:\", patientData);\n\n        if (patientData) {\n          // Calculate age from birthDate\n          if (patientData.birthDate) {\n            patientData.age = calculateAge(patientData.birthDate);\n          }\n\n          // Initialize empty arrays for properties that should be arrays\n          patientData.medicalRecords = patientData.medicalRecords || [];\n          patientData.prescriptions = patientData.prescriptions || [];\n          patientData.allergies = patientData.allergies || [];\n          patientData.chronicConditions = patientData.chronicConditions || [];\n\n          setPatient(patientData);\n\n          // Fetch patient summary data\n          try {\n            setSummaryLoading(true);\n            const summary = await api.getPatientSummary(id);\n            if (summary) {\n              setPatientSummary(summary);\n            } else {\n              console.log(\"No patient summary data returned\");\n            }\n            setSummaryLoading(false);\n          } catch (error) {\n            console.error(\"Error fetching patient summary:\", error);\n            setSummaryLoading(false);\n          }\n        } else {\n          throw new Error(\"Patient not found\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching patient:\", error);\n        setLoading(false);\n        // handle error - redirect or show error message\n        return;\n      }\n\n      // Fetch appointments from api\n      try {\n        const appointmentsResponse = await api.getAppointments({\n          patient: id,\n        });\n        console.log(\"Fetched appointments:\", appointmentsResponse);\n\n        if (Array.isArray(appointmentsResponse)) {\n          // Format the appointments for display\n          const formattedAppointments = appointmentsResponse.map(\n            (appointment) => ({\n              id: appointment._id || `app-${Math.random()}`,\n              date: appointment.appointmentDate || new Date().toISOString(),\n              time: appointment.startTime || \"Not specified\",\n              reason: appointment.reason || \"Consultation\",\n              doctor: appointment.doctor?.name || \"Unknown Doctor\",\n              department: appointment.department?.name || \"General Medicine\",\n              status: appointment.status || \"scheduled\",\n            })\n          );\n\n          setAppointments(formattedAppointments);\n        } else {\n          console.error(\n            \"Appointments response is not an array:\",\n            appointmentsResponse\n          );\n          setAppointments([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching appointments:\", error);\n        setAppointments([]);\n      }\n\n      // Fetch medical records using the new formatter\n      try {\n        const medicalRecordsResponse = await getFormattedMedicalRecords(id);\n        console.log(\"Fetched medical records:\", medicalRecordsResponse);\n\n        if (Array.isArray(medicalRecordsResponse)) {\n          // Update the patient object with the formatted medical records\n          setPatient((prevPatient) => {\n            if (!prevPatient) return null;\n            return {\n              ...prevPatient,\n              medicalRecords: medicalRecordsResponse,\n            };\n          });\n        } else {\n          console.error(\n            \"Medical records response is not an array:\",\n            medicalRecordsResponse\n          );\n          // Ensure patient has empty medicalRecords array as fallback\n          setPatient((prevPatient) => {\n            if (!prevPatient) return null;\n            return {\n              ...prevPatient,\n              medicalRecords: [],\n            };\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching medical records:\", error);\n        // Ensure patient has empty medicalRecords array as fallback\n        setPatient((prevPatient) => {\n          if (!prevPatient) return null;\n          return {\n            ...prevPatient,\n            medicalRecords: [],\n          };\n        });\n      }\n\n      // Fetch lab reports using the new formatter\n      try {\n        const labReportsResponse = await getFormattedLabReports(id);\n        console.log(\"Fetched lab reports:\", labReportsResponse);\n\n        if (Array.isArray(labReportsResponse)) {\n          // Make sure each lab report has required fields for the LabReportCard component\n          const processedLabReports = labReportsResponse.map((report) => {\n            // Ensure results is properly formatted - convert object to string if needed\n            let formattedResults = report.results;\n\n            // If results is an object and we don't have components, convert to a string summary\n            if (\n              typeof report.results === \"object\" &&\n              report.results !== null &&\n              (!report.components || report.components.length === 0)\n            ) {\n              // If we have a string interpretation, use that instead of the object\n              if (\n                typeof report.interpretation === \"string\" &&\n                report.interpretation\n              ) {\n                formattedResults = report.interpretation;\n              }\n            }\n\n            return {\n              ...report,\n              id: report.id || report._id || `report-${Math.random()}`,\n              testType: report.testType || report.type || \"Blood Test\",\n              date: report.date || report.testDate || new Date().toISOString(),\n              patientId: report.patientId || id,\n              doctorId: report.doctorId || user?._id,\n              status: report.status || \"completed\",\n              components: report.components || [],\n              results: formattedResults,\n              hasAbnormalResults:\n                report.hasAbnormalResults === true ||\n                (Array.isArray(report.components) &&\n                  report.components.some((comp) => comp.flagged === true)) ||\n                false,\n            };\n          });\n\n          setLabReports(processedLabReports);\n        } else {\n          console.error(\n            \"Lab reports response is not an array:\",\n            labReportsResponse\n          );\n          setLabReports([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching lab reports:\", error);\n        setLabReports([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [id, user?._id]);\n\n  const calculateAge = (birthDate) => {\n    const birthDateObj = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birthDateObj.getFullYear();\n    const monthDifference = today.getMonth() - birthDateObj.getMonth();\n\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDateObj.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return \"Not available\";\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return \"Invalid date\";\n      return date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n      });\n    } catch (error) {\n      console.error(\"Error formatting date:\", error);\n      return \"Date error\";\n    }\n  };\n\n  const getMonthAbbreviation = (dateString) => {\n    if (!dateString) return \"N/A\";\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return \"N/A\";\n      return date.toLocaleDateString(\"en-US\", { month: \"short\" });\n    } catch (error) {\n      console.error(\"Error getting month abbreviation:\", error);\n      return \"N/A\";\n    }\n  };\n\n  const getDay = (dateString) => {\n    if (!dateString) return \"N/A\";\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return \"N/A\";\n      return date.getDate();\n    } catch (error) {\n      console.error(\"Error getting day:\", error);\n      return \"N/A\";\n    }\n  };\n\n  // Add a function to handle viewing a lab report\n  const handleViewLabReport = (report) => {\n    setSelectedLabReport(report);\n    setShowLabReportModal(true);\n  };\n\n  const handleAddPrescription = () => {\n    console.log(\"Opening prescription modal\");\n    setShowPrescriptionModal(true);\n  };\n\n  const handlePrescriptionModalClose = (wasSuccessful) => {\n    console.log(\"Closing prescription modal, success:\", wasSuccessful);\n    setShowPrescriptionModal(false);\n\n    // If a prescription was successfully added, refresh patient data\n    if (wasSuccessful) {\n      fetchData();\n    }\n  };\n\n  if (loading) {\n    return (\n      <PageTransition>\n        <AnimationContainer type=\"loading\" height=\"400px\" />\n      </PageTransition>\n    );\n  }\n\n  if (!patient) {\n    return (\n      <PageTransition>\n        <div>\n          <PageHeader>\n            <BackButton\n              onClick={() => navigate(-1)}\n              whileHover={{ x: -5 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <FaArrowLeft /> Back to Patients\n            </BackButton>\n            <Title>Patient Not Found</Title>\n          </PageHeader>\n          <AnimationContainer type=\"emptyState\" height=\"300px\" />\n          <p style={{ textAlign: \"center\" }}>\n            The requested patient could not be found.\n          </p>\n        </div>\n      </PageTransition>\n    );\n  }\n\n  // Make sure medical records is always an array\n  const medicalRecords = patient.medicalRecords || [];\n\n  return (\n    <PageTransition>\n      <PageHeader>\n        <BackButton\n          onClick={() => navigate(-1)}\n          whileHover={{ x: -5 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <FaArrowLeft /> Back to Patients\n        </BackButton>\n        <Title>{`${patient.firstName || \"\"} ${patient.lastName || \"\"}`}</Title>\n        <ActionButtons>\n          {/* Temporary debug button for prescription */}\n          <Button\n            variant=\"primary\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            onClick={() => {\n              console.log(\"Debug: Opening prescription modal directly\");\n              console.log(\"Current user:\", user);\n              setShowPrescriptionModal(true);\n            }}\n            style={{ marginRight: \"8px\", background: \"orange\" }}\n          >\n            Add Prescription\n          </Button>\n\n          {user?.role === \"doctor\" && (\n            <>\n              <Button\n                variant=\"primary\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setShowSmartDiagnosisModal(true)}\n                style={{\n                  backgroundColor: \"#10B981\",\n                  marginRight: \"8px\",\n                }}\n              >\n                <FaBrain /> Smart Diagnosis\n              </Button>\n              <Button\n                variant=\"secondary\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setShowAIDiagnosticHistoryModal(true)}\n                style={{ marginRight: \"8px\" }}\n              >\n                <FaHistory /> AI History\n              </Button>\n            </>\n          )}\n          <Button\n            variant=\"secondary\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FaPrint /> Print\n          </Button>\n          <Button whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n            <FaEdit /> Edit\n          </Button>\n          <Button\n            variant=\"danger\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <FaTrashAlt /> Delete\n          </Button>\n        </ActionButtons>\n      </PageHeader>\n\n      {/* New Patient Summary Card */}\n      {patientSummary ? (\n        <SummaryCard>\n          <SummaryHeader>\n            <FaChartLine />\n            <h3>Patient Summary</h3>\n          </SummaryHeader>\n          <SummaryContent>\n            {patientSummary.diagnosisSummary && (\n              <SummaryItem>\n                <FaBrain />\n                <span>{patientSummary.diagnosisSummary}</span>\n              </SummaryItem>\n            )}\n            {patientSummary.vitalTrends &&\n              patientSummary.vitalTrends.bloodPressure &&\n              patientSummary.vitalTrends.bloodPressure.length > 0 && (\n                <SummaryItem>\n                  <FaHeartbeat />\n                  <span>\n                    Latest BP:{\" \"}\n                    {\n                      patientSummary.vitalTrends.bloodPressure[\n                        patientSummary.vitalTrends.bloodPressure.length - 1\n                      ].systolic\n                    }\n                    /\n                    {\n                      patientSummary.vitalTrends.bloodPressure[\n                        patientSummary.vitalTrends.bloodPressure.length - 1\n                      ].diastolic\n                    }{\" \"}\n                    mmHg\n                  </span>\n                </SummaryItem>\n              )}\n            <SummaryItem>\n              <FaCalendarPlus />\n              <span>\n                {patientSummary?.appointments?.filter(\n                  (a) => a.status === \"upcoming\" || a.status === \"confirmed\"\n                ).length || 0}{\" \"}\n                upcoming appointments\n              </span>\n            </SummaryItem>\n            <SummaryItem>\n              <FaFlask />\n              <span>\n                {patientSummary?.labResults?.length || 0} lab reports available,\n                {patientSummary?.labResults?.reduce(\n                  (count, lab) => count + (lab.abnormalFindings || 0),\n                  0\n                ) || 0}{\" \"}\n                abnormal findings\n              </span>\n            </SummaryItem>\n          </SummaryContent>\n        </SummaryCard>\n      ) : summaryLoading ? (\n        <SummaryCard>Loading patient summary...</SummaryCard>\n      ) : null}\n\n      <ContentContainer>\n        <motion.div variants={childVariants}>\n          <PatientProfileCard>\n            <PatientAvatar>\n              <AvatarCircle>\n                <FaUser />\n              </AvatarCircle>\n            </PatientAvatar>\n            <PatientName>{`${patient.firstName || \"\"} ${\n              patient.lastName || \"\"\n            }`}</PatientName>\n            <PatientBasicDetails>\n              <PatientBasicInfo>{`${patient.age || \"Unknown\"} years | ${\n                patient.gender || \"Unknown\"\n              }`}</PatientBasicInfo>\n              <PatientBasicInfo>{`Blood Group: ${\n                patient.bloodGroup || \"Unknown\"\n              }`}</PatientBasicInfo>\n            </PatientBasicDetails>\n\n            <Button\n              style={{ width: \"100%\", marginBottom: \"10px\" }}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <FaCalendarPlus /> Schedule Appointment\n            </Button>\n\n            {user?.role === \"doctor\" && (\n              <Button\n                style={{ width: \"100%\" }}\n                variant=\"secondary\"\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={() => setShowLabTestModal(true)}\n              >\n                <FaFlask /> Request Lab Test\n              </Button>\n            )}\n\n            <Divider />\n\n            <DetailsList>\n              <DetailItem>\n                <DetailLabel>Email</DetailLabel>\n                <DetailValue>{patient.email || \"Not provided\"}</DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Phone</DetailLabel>\n                <DetailValue>\n                  {patient.contactNumber || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Address</DetailLabel>\n                <DetailValue>\n                  {patient.address\n                    ? `${patient.address.street || \"\"}, ${\n                        patient.address.city || \"\"\n                      }, ${patient.address.state || \"\"} ${\n                        patient.address.zip || \"\"\n                      }`\n                    : \"Address not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Birth Date</DetailLabel>\n                <DetailValue>\n                  {patient.birthDate\n                    ? formatDate(patient.birthDate)\n                    : \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n            </DetailsList>\n\n            <Divider />\n\n            <SectionTitle>Emergency Contact</SectionTitle>\n            <DetailsList>\n              <DetailItem>\n                <DetailLabel>Name</DetailLabel>\n                <DetailValue>\n                  {patient.emergencyContact?.name || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Relationship</DetailLabel>\n                <DetailValue>\n                  {patient.emergencyContact?.relationship || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Phone</DetailLabel>\n                <DetailValue>\n                  {patient.emergencyContact?.contactNumber || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n            </DetailsList>\n\n            <Divider />\n\n            <SectionTitle>Insurance Information</SectionTitle>\n            <DetailsList>\n              <DetailItem>\n                <DetailLabel>Provider</DetailLabel>\n                <DetailValue>\n                  {patient.insurance?.provider || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Policy Number</DetailLabel>\n                <DetailValue>\n                  {patient.insurance?.policyNumber || \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n              <DetailItem>\n                <DetailLabel>Expiry Date</DetailLabel>\n                <DetailValue>\n                  {patient.insurance?.expiryDate\n                    ? formatDate(patient.insurance.expiryDate)\n                    : \"Not provided\"}\n                </DetailValue>\n              </DetailItem>\n            </DetailsList>\n          </PatientProfileCard>\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          style={{ width: \"100%\" }}\n        >\n          <Tabs activeTab={activeTab} setActiveTab={setActiveTab}>\n            <Tab\n              id=\"appointments\"\n              label=\"Appointments\"\n              icon={<FaCalendarPlus />}\n            >\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>\n                  <FaCalendarPlus /> Upcoming Appointments\n                </SectionTitle>\n                <AppointmentList>\n                  {appointments\n                    .filter(\n                      (app) =>\n                        app.status === \"scheduled\" ||\n                        app.status === \"pending\" ||\n                        app.status === \"confirmed\"\n                    )\n                    .map((appointment) => (\n                      <AppointmentItem\n                        key={appointment.id || `app-${Math.random()}`}\n                      >\n                        <AppointmentDate>\n                          <AppointmentDay>\n                            {getDay(appointment.date)}\n                          </AppointmentDay>\n                          <AppointmentMonth>\n                            {getMonthAbbreviation(appointment.date)}\n                          </AppointmentMonth>\n                        </AppointmentDate>\n                        <AppointmentInfo>\n                          <AppointmentTitle>\n                            {appointment.reason}\n                          </AppointmentTitle>\n                          <AppointmentDetails>\n                            {`${appointment.time || \"Not specified\"} | ${\n                              appointment.doctor || \"Not assigned\"\n                            } | ${appointment.department || \"General\"}`}\n                          </AppointmentDetails>\n                        </AppointmentInfo>\n                        <AppointmentStatus\n                          $status={appointment.status || \"scheduled\"}\n                        >\n                          {appointment.status\n                            ? appointment.status.charAt(0).toUpperCase() +\n                              appointment.status.slice(1)\n                            : \"Scheduled\"}\n                        </AppointmentStatus>\n                      </AppointmentItem>\n                    ))}\n                  {appointments.filter(\n                    (app) =>\n                      app.status === \"scheduled\" ||\n                      app.status === \"pending\" ||\n                      app.status === \"confirmed\"\n                  ).length === 0 && <p>No upcoming appointments</p>}\n                </AppointmentList>\n              </MedicalInfoCard>\n\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>\n                  <FaCalendarPlus /> Past Appointments\n                </SectionTitle>\n                <AppointmentList>\n                  {appointments\n                    .filter(\n                      (app) =>\n                        app.status === \"completed\" || app.status === \"cancelled\"\n                    )\n                    .map((appointment) => (\n                      <AppointmentItem\n                        key={appointment.id || `app-${Math.random()}`}\n                      >\n                        <AppointmentDate>\n                          <AppointmentDay>\n                            {getDay(appointment.date)}\n                          </AppointmentDay>\n                          <AppointmentMonth>\n                            {getMonthAbbreviation(appointment.date)}\n                          </AppointmentMonth>\n                        </AppointmentDate>\n                        <AppointmentInfo>\n                          <AppointmentTitle>\n                            {appointment.reason}\n                          </AppointmentTitle>\n                          <AppointmentDetails>\n                            {`${appointment.time || \"Not specified\"} | ${\n                              appointment.doctor || \"Not assigned\"\n                            } | ${appointment.department || \"General\"}`}\n                          </AppointmentDetails>\n                        </AppointmentInfo>\n                        <AppointmentStatus\n                          $status={appointment.status || \"completed\"}\n                        >\n                          {appointment.status\n                            ? appointment.status.charAt(0).toUpperCase() +\n                              appointment.status.slice(1)\n                            : \"Completed\"}\n                        </AppointmentStatus>\n                      </AppointmentItem>\n                    ))}\n                  {appointments.filter(\n                    (app) =>\n                      app.status === \"completed\" || app.status === \"cancelled\"\n                  ).length === 0 && <p>No past appointments</p>}\n                </AppointmentList>\n              </MedicalInfoCard>\n            </Tab>\n\n            <Tab\n              id=\"medicalRecords\"\n              label=\"Medical Records\"\n              icon={<FaFileAlt />}\n            >\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>\n                  <FaFileAlt /> Medical Records\n                </SectionTitle>\n                {patient.medicalRecords && patient.medicalRecords.length > 0 ? (\n                  patient.medicalRecords.map((record) => (\n                    <MedicalReportCard\n                      key={record.id || record._id}\n                      report={record}\n                    />\n                  ))\n                ) : (\n                  <div\n                    style={{\n                      padding: \"20px 0\",\n                      textAlign: \"center\",\n                      color: \"#666\",\n                    }}\n                  >\n                    No medical records available\n                  </div>\n                )}\n              </MedicalInfoCard>\n            </Tab>\n\n            <Tab id=\"labReports\" label=\"Lab Reports\" icon={<FaFlask />}>\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>\n                  <FaFlask /> Laboratory Reports\n                </SectionTitle>\n                {labReports && labReports.length > 0 ? (\n                  labReports.map((report) => (\n                    <LabReportCard\n                      key={report.id || report._id}\n                      report={report}\n                      onClick={handleViewLabReport}\n                    />\n                  ))\n                ) : (\n                  <div\n                    style={{\n                      padding: \"20px 0\",\n                      textAlign: \"center\",\n                      color: \"#666\",\n                    }}\n                  >\n                    No lab reports available\n                  </div>\n                )}\n\n                {user?.role === \"doctor\" && (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    <Button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={() => setShowLabTestModal(true)}\n                    >\n                      <FaFlask /> Request New Lab Test\n                    </Button>\n                  </div>\n                )}\n              </MedicalInfoCard>\n            </Tab>\n\n            <Tab\n              id=\"prescriptions\"\n              label=\"Prescriptions\"\n              icon={<FaFilePrescription />}\n            >\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>\n                  <FaFilePrescription /> Prescriptions\n                </SectionTitle>\n                {console.log(\"Current user in prescriptions tab:\", user)}\n                {Array.isArray(patient?.prescriptions) &&\n                patient.prescriptions.length > 0 ? (\n                  patient.prescriptions.map((prescription) => (\n                    <div\n                      key={\n                        prescription.id ||\n                        prescription._id ||\n                        `prescription-${Math.random()}`\n                      }\n                      style={{ marginBottom: \"20px\" }}\n                    >\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          marginBottom: \"8px\",\n                        }}\n                      >\n                        <h4 style={{ margin: 0 }}>\n                          {prescription.medicine || \"Unnamed Medication\"}\n                        </h4>\n                        <span style={{ fontSize: \"0.85rem\", color: \"#666\" }}>\n                          {prescription.date\n                            ? formatDate(prescription.date)\n                            : \"No date\"}\n                        </span>\n                      </div>\n                      <p style={{ margin: \"5px 0\", fontSize: \"0.9rem\" }}>\n                        Dosage: {prescription.dosage || \"Not specified\"} |\n                        Frequency: {prescription.frequency || \"Not specified\"} |\n                        Duration: {prescription.duration || \"Not specified\"}\n                      </p>\n                      <div style={{ fontSize: \"0.85rem\", color: \"#666\" }}>\n                        Prescribed by: {prescription.doctor || \"Unknown doctor\"}\n                      </div>\n                      {prescription.instructions && (\n                        <div\n                          style={{\n                            fontSize: \"0.9rem\",\n                            marginTop: \"8px\",\n                            padding: \"8px\",\n                            backgroundColor: \"#f8f9fa\",\n                            borderRadius: \"4px\",\n                          }}\n                        >\n                          <strong>Instructions:</strong>{\" \"}\n                          {prescription.instructions}\n                        </div>\n                      )}\n                      <Divider />\n                    </div>\n                  ))\n                ) : (\n                  <div\n                    style={{\n                      padding: \"20px 0\",\n                      textAlign: \"center\",\n                      color: \"#666\",\n                    }}\n                  >\n                    No prescriptions available\n                  </div>\n                )}\n\n                {console.log(\"User role for prescription button:\", user?.role)}\n                {console.log(\"Is doctor check:\", user?.role === \"doctor\")}\n                {user?.role === \"doctor\" ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      marginTop: \"20px\",\n                    }}\n                  >\n                    <Button\n                      whileHover={{ scale: 1.02 }}\n                      whileTap={{ scale: 0.98 }}\n                      onClick={handleAddPrescription}\n                      variant=\"primary\"\n                    >\n                      <FaFilePrescription /> Add Prescription\n                    </Button>\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      marginTop: \"20px\",\n                      color: \"#666\",\n                    }}\n                  >\n                    Only doctors can add prescriptions\n                  </div>\n                )}\n              </MedicalInfoCard>\n            </Tab>\n\n            <Tab id=\"medicalInfo\" label=\"Medical Info\" icon={<FaFileMedical />}>\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>Allergies</SectionTitle>\n                {Array.isArray(patient?.allergies) &&\n                patient.allergies.length > 0 ? (\n                  <ul>\n                    {patient.allergies.map((allergy, index) => (\n                      <li key={index}>{allergy}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>No known allergies</p>\n                )}\n              </MedicalInfoCard>\n\n              <MedicalInfoCard variants={childVariants}>\n                <SectionTitle>Chronic Conditions</SectionTitle>\n                {Array.isArray(patient?.chronicConditions) &&\n                patient.chronicConditions.length > 0 ? (\n                  <ul>\n                    {patient.chronicConditions.map((condition, index) => (\n                      <li key={index}>{condition}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <p>No chronic conditions</p>\n                )}\n              </MedicalInfoCard>\n            </Tab>\n          </Tabs>\n        </motion.div>\n      </ContentContainer>\n\n      {/* RequestLabTest Modal */}\n      <RequestLabTest\n        isOpen={showLabTestModal}\n        onClose={() => setShowLabTestModal(false)}\n        patientId={id}\n        doctorId={user?._id}\n      />\n\n      {/* ViewLabReport Modal */}\n      <ViewLabReport\n        isOpen={showLabReportModal}\n        onClose={() => setShowLabReportModal(false)}\n        report={selectedLabReport}\n      />\n\n      {/* SmartDiagnosisModal */}\n      {showSmartDiagnosisModal && (\n        <SmartDiagnosisModal\n          isOpen={showSmartDiagnosisModal}\n          onClose={() => setShowSmartDiagnosisModal(false)}\n          patientId={id}\n          onViewHistory={() => {\n            setShowSmartDiagnosisModal(false);\n            setShowAIDiagnosticHistoryModal(true);\n          }}\n        />\n      )}\n\n      {/* AIDiagnosticHistoryModal */}\n      <AIDiagnosticHistoryModal\n        isOpen={showAIDiagnosticHistoryModal}\n        onClose={() => setShowAIDiagnosticHistoryModal(false)}\n        patientId={id}\n      />\n\n      {/* PrescriptionModal */}\n      <PrescriptionModal\n        isOpen={showPrescriptionModal}\n        onClose={handlePrescriptionModalClose}\n        patientId={id}\n        patientName={patient?.name || \"Patient\"}\n        doctorId={user?._id}\n        doctorName={user?.name || \"Doctor\"}\n      />\n    </PageTransition>\n  );\n};\n\nexport default PatientDetails;\n"],"names":["ModalBackdrop","styled","motion","ModalContent","props","ModalHeader","ModalTitle","CloseButton","ModalBody","Form","FormGroup","Label","Select","Textarea","ButtonGroup","Button","UrgencyOption","RadioOption","UrgentBadge","SuccessMessage","RequestLabTest","isOpen","onClose","patient","patientId","departmentId","doctorId","user","useAuth","testType","setTestType","useState","notes","setNotes","urgency","setUrgency","isSubmitting","setIsSubmitting","isSubmitted","setIsSubmitted","fetchedPatient","setFetchedPatient","loading","setLoading","useEffect","data","api","error","handleSubmit","e","labOrder","toast","modalVariants","contentVariants","jsx","jsxs","FaFlask","FaTimes","FaRegClipboard","FaExclamationTriangle","ModalOverlay","HeaderTitle","LoadingState","ProgressBar","ProgressFill","ResultsContainer","SummaryCard","SectionTitle","DiagnosisList","DiagnosisItem","ConfidenceBadge","DiagnosisTitle","DetailSection","ActionButtons","Disclaimer","TabsContainer","Tab","TabPanel","SpinnerIcon","FaSpinner","SymptomSelector","SymptomList","SymptomChip","AddSymptomInput","commonSymptoms","ChatContainer","ChatMessages","ChatInputContainer","ChatInput","SendButton","Message","SmartDiagnosisModal","onViewHistory","progress","setProgress","selectedDiagnosis","setSelectedDiagnosis","diagnosisResults","setDiagnosisResults","activeTab","setActiveTab","setError","isSaving","setIsSaving","saveSuccess","setSaveSuccess","selectedSymptoms","setSelectedSymptoms","newSymptom","setNewSymptom","patientData","setPatientData","chatMessages","setChatMessages","chatInput","setChatInput","isChatLoading","setIsChatLoading","fetchPatientBasicInfo","handleToggleSymptom","symptom","handleAddCustomSymptom","handleGenerateDiagnosis","progressInterval","prev","newProgress","fetchDiagnosticResults","diagnosticRequest","results","handleSaveDiagnosis","diagnosisRecord","result","handlePrintReport","handleSendMessage","userMessage","context","prompt","msg","response","handleKeyPress","AnimatePresence","FaBrain","FaTimesCircle","FaNotesMedical","Fragment","FaFileMedical","FaInfoCircle","FaComments","FaFileAlt","FaPlus","FaChartBar","diagnosis","FaArrowRight","index","_a","history","_b","_c","med","message","FaPaperPlane","FaHistory","FaCheckCircle","FaPrint","EmptyState","HistoryList","HistoryItem","HistoryItemHeader","HistoryItemDate","ToggleIcon","HistoryItemContent","SummaryText","Diagnoses","DiagnosisChip","AIDiagnosticHistoryModal","diagnosticHistory","setDiagnosticHistory","expandedItems","setExpandedItems","initialExpandedState","item","toggleExpand","id","formatDate","dateString","FaCalendarAlt","FaChevronDown","FaChevronRight","ModalContainer","LeftPanel","RightPanel","SearchBar","MedicationsGrid","MedicationCard","MedicationHeader","MedicationIcon","MedicationInfo","MedicationName","MedicationCategory","MedicationDetail","StockIndicator","PrescriptionForm","Input","TextArea","NoMedicationsMessage","LoadingSpinner","PrescriptionModal","patientName","doctorName","medications","setMedications","filteredMedications","setFilteredMedications","searchTerm","setSearchTerm","selectedMedication","setSelectedMedication","prescriptionData","setPrescriptionData","submitting","setSubmitting","err","filterMedications","filtered","term","handleMedicationSelect","medication","handlePrescriptionChange","name","value","prescriptionToAdd","errorMessage","getStockLabel","status","renderCategories","categories","category","FaFilePrescription","FaSearch","FaPills","ReportCard","ReportHeader","ReportTitle","ReportDate","ReportContent","InfoGrid","InfoSection","DataItem","DataLabel","DataValue","DiagnosisSection","NotesSection","VisualIndicator","MedicalReportCard","report","isExpanded","setIsExpanded","renderVitalSigns","getVitalStatus","type","systolic","diastolic","rate","temp","glucose","getStatusIcon","FaCheck","FaHeartbeat","FaChevronUp","FaUser","FaChartLine","FaSyringe","FaDownload","getFormattedLabReports","reports","_d","getFormattedMedicalRecords","records","record","PageHeader","BackButton","Title","ContentContainer","PatientProfileCard","PatientAvatar","AvatarCircle","PatientName","PatientBasicDetails","PatientBasicInfo","Divider","DetailsList","DetailItem","DetailLabel","DetailValue","TabsWrapper","TabsHeader","TabButton","TabContent","MedicalInfoCard","AppointmentList","AppointmentItem","AppointmentDate","AppointmentDay","AppointmentMonth","AppointmentInfo","AppointmentTitle","AppointmentDetails","AppointmentStatus","SummaryHeader","SummaryContent","SummaryItem","Tabs","children","tabs","React","child","tab","label","icon","PatientDetails","useParams","navigate","useNavigate","setPatient","appointments","setAppointments","labReports","setLabReports","showLabTestModal","setShowLabTestModal","selectedLabReport","setSelectedLabReport","showLabReportModal","setShowLabReportModal","showSmartDiagnosisModal","setShowSmartDiagnosisModal","showAIDiagnosticHistoryModal","setShowAIDiagnosticHistoryModal","showPrescriptionModal","setShowPrescriptionModal","patientSummary","setPatientSummary","summaryLoading","setSummaryLoading","fetchData","calculateAge","summary","appointmentsResponse","formattedAppointments","appointment","medicalRecordsResponse","prevPatient","labReportsResponse","processedLabReports","formattedResults","comp","birthDate","birthDateObj","today","age","monthDifference","date","getMonthAbbreviation","getDay","handleViewLabReport","handleAddPrescription","handlePrescriptionModalClose","wasSuccessful","PageTransition","AnimationContainer","FaArrowLeft","FaEdit","FaTrashAlt","FaCalendarPlus","a","count","lab","childVariants","_e","_f","_g","_h","_i","app","LabReportCard","prescription","allergy","condition","ViewLabReport"],"mappings":"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"}