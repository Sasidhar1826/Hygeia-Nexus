{"version":3,"file":"Dashboard-09645f56.js","sources":["../../src/pages/patient/PatientDashboard.jsx","../../src/pages/doctor/DoctorDashboard.jsx","../../src/pages/lab/LabTechnicianDashboard.jsx","../../src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FaUserInjured,\r\n  FaCalendarAlt,\r\n  FaFileMedical,\r\n  FaFlask,\r\n  FaPrescriptionBottleAlt,\r\n  FaArrowRight,\r\n  FaEye,\r\n  FaCheck,\r\n  FaClock,\r\n  FaRegClock,\r\n} from \"react-icons/fa\";\r\nimport Card from \"../../components/ui/Card\";\r\nimport AnimationContainer from \"../../components/animations/AnimationContainer\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport api from \"../../services/apiService\";\r\n// Styled components\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst StatIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background-color: ${(props) => props.color || \"#4A90E2\"};\r\n  color: white;\r\n  font-size: 24px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst StatContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #333;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 30px 0 15px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin: 0;\r\n`;\r\n\r\nconst ViewAllLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: #4a90e2;\r\n  text-decoration: none;\r\n\r\n  svg {\r\n    margin-left: 5px;\r\n    transition: transform 0.2s ease;\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n\r\n    svg {\r\n      transform: translateX(3px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst AppointmentsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AppointmentItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst AppointmentTime = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 110px;\r\n`;\r\n\r\nconst AppointmentDate = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst AppointmentHour = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst AppointmentInfo = styled.div`\r\n  flex: 1;\r\n  margin: 0 15px;\r\n`;\r\n\r\nconst AppointmentTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst AppointmentPatient = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst AppointmentStatus = styled.div`\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background-color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"confirmed\":\r\n        return \"#E3F2FD\";\r\n      case \"pending\":\r\n        return \"#FFF9C4\";\r\n      case \"cancelled\":\r\n        return \"#FFEBEE\";\r\n      case \"completed\":\r\n        return \"#E8F5E9\";\r\n      default:\r\n        return \"#F5F5F5\";\r\n    }\r\n  }};\r\n  color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"confirmed\":\r\n        return \"#1565C0\";\r\n      case \"pending\":\r\n        return \"#F57F17\";\r\n      case \"cancelled\":\r\n        return \"#C62828\";\r\n      case \"completed\":\r\n        return \"#2E7D32\";\r\n      default:\r\n        return \"#616161\";\r\n    }\r\n  }};\r\n`;\r\n\r\nconst MedicationList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MedicationItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst MedicationIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background-color: #f0f8ff;\r\n  color: #4a90e2;\r\n  font-size: 20px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst MedicationInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst MedicationName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst MedicationDetails = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst Badge = styled.span`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 4px 8px;\r\n  border-radius: 12px;\r\n  background-color: ${(props) => props.color || \"#E3F2FD\"};\r\n  color: ${(props) => props.textColor || \"#1565C0\"};\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst RecordsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RecordItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst RecordIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background-color: #f0f8ff;\r\n  color: #4a90e2;\r\n  font-size: 20px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst RecordInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst RecordTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst RecordDetails = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst PatientDashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [patientData, setPatientData] = useState({\r\n    upcomingAppointments: [],\r\n    labReports: [],\r\n    medications: [],\r\n    recentRecords: [],\r\n  });\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Simulate API loading\r\n    const fetchPatientData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Reset error messages\r\n        setErrorMessages({});\r\n\r\n        // Fetch patient's appointments\r\n        const appointments = await api.getAppointments({\r\n          patient: user._id,\r\n          status: [\"pending\", \"confirmed\"], // Only get upcoming appointments\r\n        });\r\n\r\n        // Ensure appointments is an array before sorting\r\n        const appointmentsArray = Array.isArray(appointments)\r\n          ? appointments\r\n          : appointments && appointments.data\r\n          ? appointments.data\r\n          : [];\r\n\r\n        // Sort appointments by date (most recent first)\r\n        const sortedAppointments = [...appointmentsArray].sort(\r\n          (a, b) => new Date(a.appointmentDate) - new Date(b.appointmentDate)\r\n        );\r\n\r\n        // Format appointments for display\r\n        const formattedAppointments = sortedAppointments.map((appointment) => ({\r\n          id: appointment._id,\r\n          doctorName: appointment.doctor\r\n            ? appointment.doctor.name ||\r\n              (appointment.doctor.user\r\n                ? appointment.doctor.user.name\r\n                : \"Unknown Doctor\")\r\n            : \"Unknown Doctor\",\r\n          date: appointment.appointmentDate,\r\n          time: appointment.startTime,\r\n          purpose: appointment.reason || \"Consultation\",\r\n          department: appointment.department?.name || \"General\",\r\n          status: appointment.status,\r\n        }));\r\n\r\n        // Fetch lab reports for the patient\r\n        let labReports = [];\r\n        let labReportError = null;\r\n        try {\r\n          const labReportsResponse = await api.getLabReports({\r\n            patient: user._id,\r\n          });\r\n\r\n          // Handle different possible response formats\r\n          if (Array.isArray(labReportsResponse)) {\r\n            labReports = labReportsResponse;\r\n          } else if (\r\n            labReportsResponse &&\r\n            Array.isArray(labReportsResponse.data)\r\n          ) {\r\n            labReports = labReportsResponse.data;\r\n          } else if (labReportsResponse && labReportsResponse.message) {\r\n            // Log the error message but don't interrupt the dashboard loading\r\n            console.warn(\"Lab reports message:\", labReportsResponse.message);\r\n            labReportError = labReportsResponse.message;\r\n          } else {\r\n            console.warn(\r\n              \"Unexpected lab reports response format:\",\r\n              labReportsResponse\r\n            );\r\n            labReports = [];\r\n          }\r\n        } catch (labError) {\r\n          console.error(\"Error fetching lab reports:\", labError);\r\n          labReportError = labError.message || \"Failed to load lab reports\";\r\n        }\r\n\r\n        // Update error state if needed\r\n        if (labReportError) {\r\n          setErrorMessages((prev) => ({\r\n            ...prev,\r\n            labReports: labReportError,\r\n          }));\r\n        }\r\n\r\n        // For now, we'll use mock data for medications and medical records\r\n        // In a real app, these would be fetched from the API as well\r\n        const mockMedications = [\r\n          {\r\n            id: \"1\",\r\n            name: \"Lisinopril\",\r\n            dosage: \"10mg\",\r\n            frequency: \"Once daily\",\r\n            remaining: 15,\r\n            nextRefill: \"2024-04-20\",\r\n          },\r\n          {\r\n            id: \"2\",\r\n            name: \"Metformin\",\r\n            dosage: \"500mg\",\r\n            frequency: \"Twice daily\",\r\n            remaining: 8,\r\n            nextRefill: \"2024-04-05\",\r\n          },\r\n          {\r\n            id: \"3\",\r\n            name: \"Atorvastatin\",\r\n            dosage: \"20mg\",\r\n            frequency: \"Once daily at bedtime\",\r\n            remaining: 22,\r\n            nextRefill: \"2024-05-10\",\r\n          },\r\n        ];\r\n\r\n        const mockRecentRecords = [\r\n          {\r\n            id: \"1\",\r\n            date: \"2024-03-15\",\r\n            type: \"Consultation Notes\",\r\n            doctor: \"Dr. Sarah Johnson\",\r\n            department: \"Cardiology\",\r\n          },\r\n          {\r\n            id: \"2\",\r\n            date: \"2024-03-01\",\r\n            type: \"ECG Results\",\r\n            doctor: \"Dr. Michael Chen\",\r\n            department: \"Cardiology\",\r\n          },\r\n        ];\r\n\r\n        // Update the patient data state\r\n        setPatientData({\r\n          upcomingAppointments: formattedAppointments,\r\n          labReports: labReports,\r\n          medications: mockMedications,\r\n          recentRecords: mockRecentRecords,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching patient data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user && user._id) {\r\n      fetchPatientData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <AnimationContainer type=\"loading\" height=\"400px\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StatsGrid>\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#4A90E2\">\r\n            <FaCalendarAlt />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>\r\n              {patientData?.upcomingAppointments?.length || 0}\r\n            </StatValue>\r\n            <StatLabel>Upcoming Appointments</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <StatIcon color=\"#50C878\">\r\n            <FaFileMedical />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{patientData?.recentRecords?.length || 0}</StatValue>\r\n            <StatLabel>Recent Medical Records</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.2 }}\r\n        >\r\n          <StatIcon color=\"#F5A623\">\r\n            <FaFlask />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>\r\n              {patientData?.labReports?.filter((r) => r.status === \"pending\")\r\n                .length || 0}\r\n            </StatValue>\r\n            <StatLabel>Pending Lab Reports</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#E74C3C\">\r\n            <FaPrescriptionBottleAlt />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{patientData?.medications?.length || 0}</StatValue>\r\n            <StatLabel>Active Medications</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Upcoming Appointments</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/appointments\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <AppointmentsList>\r\n          {patientData?.upcomingAppointments?.map((appointment) => (\r\n            <AppointmentItem key={appointment.id}>\r\n              <AppointmentTime>\r\n                <AppointmentDate>\r\n                  {formatDate(appointment.date)}\r\n                </AppointmentDate>\r\n                <AppointmentHour>{appointment.time}</AppointmentHour>\r\n              </AppointmentTime>\r\n              <AppointmentInfo>\r\n                <AppointmentTitle>{appointment.purpose}</AppointmentTitle>\r\n                <AppointmentPatient>\r\n                  Doctor: {appointment.doctorName} | {appointment.department}\r\n                </AppointmentPatient>\r\n              </AppointmentInfo>\r\n              <AppointmentStatus status={appointment.status}>\r\n                {appointment.status.charAt(0).toUpperCase() +\r\n                  appointment.status.slice(1)}\r\n              </AppointmentStatus>\r\n            </AppointmentItem>\r\n          ))}\r\n          {(!patientData?.upcomingAppointments ||\r\n            patientData.upcomingAppointments.length === 0) && (\r\n            <div\r\n              style={{ padding: \"1rem\", textAlign: \"center\", color: \"#666\" }}\r\n            >\r\n              No upcoming appointments.{\" \"}\r\n              <Link to=\"/dashboard/doctors\" style={{ color: \"#3182ce\" }}>\r\n                Schedule one now\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </AppointmentsList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>My Medications</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/prescriptions\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <MedicationList>\r\n          {patientData?.medications?.map((medication) => (\r\n            <MedicationItem key={medication.id}>\r\n              <MedicationIcon>\r\n                <FaPrescriptionBottleAlt />\r\n              </MedicationIcon>\r\n              <MedicationInfo>\r\n                <MedicationName>\r\n                  {medication.name} {medication.dosage}\r\n                  {medication.remaining <= 10 && (\r\n                    <Badge color=\"#FFECB3\" textColor=\"#E65100\">\r\n                      <FaRegClock style={{ marginRight: \"4px\" }} /> Refill soon\r\n                    </Badge>\r\n                  )}\r\n                </MedicationName>\r\n                <MedicationDetails>\r\n                  {medication.frequency} | {medication.remaining} days remaining\r\n                </MedicationDetails>\r\n              </MedicationInfo>\r\n            </MedicationItem>\r\n          ))}\r\n          {(!patientData?.medications ||\r\n            patientData.medications.length === 0) && (\r\n            <div\r\n              style={{ padding: \"1rem\", textAlign: \"center\", color: \"#666\" }}\r\n            >\r\n              No active medications.\r\n            </div>\r\n          )}\r\n        </MedicationList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Recent Lab Reports</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/lab-reports\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        {errorMessages.labReports && (\r\n          <div\r\n            style={{ padding: \"1rem\", textAlign: \"center\", color: \"#e74c3c\" }}\r\n          >\r\n            {errorMessages.labReports}\r\n          </div>\r\n        )}\r\n        <AppointmentsList>\r\n          {patientData?.labReports?.map((report) => (\r\n            <AppointmentItem key={report._id || report.id}>\r\n              <AppointmentTime>\r\n                <AppointmentDate>\r\n                  {formatDate(report.requestedDate || report.date)}\r\n                </AppointmentDate>\r\n                <AppointmentHour>\r\n                  {report.status === \"completed\" ? <FaCheck /> : <FaClock />}\r\n                </AppointmentHour>\r\n              </AppointmentTime>\r\n              <AppointmentInfo>\r\n                <AppointmentTitle>\r\n                  {report.type || report.testType}\r\n                </AppointmentTitle>\r\n                <AppointmentPatient>\r\n                  Technician:{\" \"}\r\n                  {report.technician\r\n                    ? typeof report.technician === \"object\"\r\n                      ? report.technician.name\r\n                      : report.technician\r\n                    : \"Not assigned\"}\r\n                </AppointmentPatient>\r\n              </AppointmentInfo>\r\n              <AppointmentStatus\r\n                status={report.status === \"completed\" ? \"completed\" : \"pending\"}\r\n              >\r\n                {report.status\r\n                  ? report.status.charAt(0).toUpperCase() +\r\n                    report.status.slice(1)\r\n                  : \"Pending\"}\r\n              </AppointmentStatus>\r\n            </AppointmentItem>\r\n          ))}\r\n          {(!patientData?.labReports || patientData.labReports.length === 0) &&\r\n            !errorMessages.labReports && (\r\n              <div\r\n                style={{ padding: \"1rem\", textAlign: \"center\", color: \"#666\" }}\r\n              >\r\n                No lab reports found.\r\n              </div>\r\n            )}\r\n        </AppointmentsList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Recent Medical Records</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/medical-records\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <RecordsList>\r\n          {patientData?.recentRecords?.map((record) => (\r\n            <RecordItem key={record.id}>\r\n              <RecordIcon>\r\n                <FaFileMedical />\r\n              </RecordIcon>\r\n              <RecordInfo>\r\n                <RecordTitle>{record.type}</RecordTitle>\r\n                <RecordDetails>\r\n                  {formatDate(record.date)} | {record.doctor} |{\" \"}\r\n                  {record.department}\r\n                </RecordDetails>\r\n              </RecordInfo>\r\n              <Link to={`/dashboard/medical-records/${record.id}`}>\r\n                <FaEye style={{ color: \"#4A90E2\" }} />\r\n              </Link>\r\n            </RecordItem>\r\n          ))}\r\n          {(!patientData?.recentRecords ||\r\n            patientData.recentRecords.length === 0) && (\r\n            <div\r\n              style={{ padding: \"1rem\", textAlign: \"center\", color: \"#666\" }}\r\n            >\r\n              No recent medical records found.\r\n            </div>\r\n          )}\r\n        </RecordsList>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FaUserInjured,\r\n  FaCalendarAlt,\r\n  FaFileMedical,\r\n  FaFlask,\r\n  FaPrescriptionBottleAlt,\r\n  FaArrowRight,\r\n  FaUserMd,\r\n  FaCheck,\r\n  FaClock,\r\n  FaHospital,\r\n  FaVideo,\r\n  FaBriefcaseMedical,\r\n  FaPills,\r\n  FaChartLine,\r\n} from \"react-icons/fa\";\r\nimport Card from \"../../components/ui/Card\";\r\nimport AnimationContainer from \"../../components/animations/AnimationContainer\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport api from \"../../services/apiService\";\r\n// Styled components\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst StatIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background-color: ${(props) => props.color || \"#4A90E2\"};\r\n  color: white;\r\n  font-size: 24px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst StatContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #333;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 30px 0 15px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin: 0;\r\n`;\r\n\r\nconst ViewAllLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: #4a90e2;\r\n  text-decoration: none;\r\n\r\n  svg {\r\n    margin-left: 5px;\r\n    transition: transform 0.2s ease;\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n\r\n    svg {\r\n      transform: translateX(3px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n\r\n  @media (max-width: 992px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst AppointmentsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AppointmentItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst AppointmentTime = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 110px;\r\n`;\r\n\r\nconst AppointmentDate = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst AppointmentHour = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst AppointmentInfo = styled.div`\r\n  flex: 1;\r\n  margin: 0 15px;\r\n`;\r\n\r\nconst AppointmentTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst AppointmentPatient = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst AppointmentStatus = styled.div`\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background-color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"confirmed\":\r\n        return \"#E3F2FD\";\r\n      case \"pending\":\r\n        return \"#FFF9C4\";\r\n      case \"cancelled\":\r\n        return \"#FFEBEE\";\r\n      case \"completed\":\r\n        return \"#E8F5E9\";\r\n      default:\r\n        return \"#F5F5F5\";\r\n    }\r\n  }};\r\n  color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"confirmed\":\r\n        return \"#1565C0\";\r\n      case \"pending\":\r\n        return \"#F57F17\";\r\n      case \"cancelled\":\r\n        return \"#C62828\";\r\n      case \"completed\":\r\n        return \"#2E7D32\";\r\n      default:\r\n        return \"#616161\";\r\n    }\r\n  }};\r\n`;\r\n\r\nconst PatientCard = styled(Card)`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst PatientAvatar = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background-color: #e1f5fe;\r\n  color: #03a9f4;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst PatientInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst PatientName = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst PatientDetails = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ActionButton = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px;\r\n  background-color: #f0f8ff;\r\n  color: #4a90e2;\r\n  border-radius: 50%;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #e1f5fe;\r\n  }\r\n`;\r\n\r\nconst QuickActionsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 15px;\r\n`;\r\n\r\nconst QuickActionCard = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  text-align: center;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst QuickActionIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => props.color || \"#4A90E2\"}20;\r\n  color: ${(props) => props.color || \"#4A90E2\"};\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst QuickActionTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst QuickActionDescription = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst DoctorDashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [doctorData, setDoctorData] = useState({\r\n    todayAppointments: [],\r\n    pendingAppointments: [],\r\n    recentPatients: [],\r\n    stats: {\r\n      totalPatients: 0,\r\n      todayAppointments: 0,\r\n      pendingAppointments: 0,\r\n      completedAppointments: 0,\r\n    },\r\n  });\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchDoctorData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Fetch doctor data\r\n        const doctorData = await api.getUserById(user._id);\r\n\r\n        // Fetch upcoming appointments\r\n        const appointments = await api.getAppointments({\r\n          doctor: user._id,\r\n          status: \"upcoming\",\r\n          limit: 5,\r\n        });\r\n\r\n        // Fetch recent patients\r\n        const recentPatients = await api.getRecentPatients(user._id);\r\n\r\n        setDoctorData(doctorData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctor data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user && user._id) {\r\n      fetchDoctorData();\r\n    }\r\n  }, [user]);\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\r\n    return new Date(dateString).toLocaleDateString(\"en-US\", options);\r\n  };\r\n\r\n  const formatTime = (timeString) => {\r\n    return timeString;\r\n  };\r\n\r\n  if (loading) {\r\n    return <AnimationContainer type=\"loading\" height=\"400px\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Doctor Dashboard</h1>\r\n\r\n      {/* Stats */}\r\n      <StatsGrid>\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#4A90E2\">\r\n            <FaUserInjured />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{doctorData.stats.totalPatients}</StatValue>\r\n            <StatLabel>Total Patients</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <StatIcon color=\"#50C878\">\r\n            <FaCalendarAlt />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{doctorData.stats.todayAppointments}</StatValue>\r\n            <StatLabel>Today's Appointments</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.2 }}\r\n        >\r\n          <StatIcon color=\"#F5A623\">\r\n            <FaClock />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{doctorData.stats.pendingAppointments}</StatValue>\r\n            <StatLabel>Pending Appointments</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#4CAF50\">\r\n            <FaCheck />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{doctorData.stats.completedAppointments}</StatValue>\r\n            <StatLabel>Completed Appointments</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <GridContainer>\r\n        <Card>\r\n          <SectionHeader>\r\n            <SectionTitle>Today's Appointments</SectionTitle>\r\n            <ViewAllLink to=\"/dashboard/appointments\">\r\n              View All <FaArrowRight />\r\n            </ViewAllLink>\r\n          </SectionHeader>\r\n\r\n          <AppointmentsList>\r\n            {doctorData.todayAppointments.length > 0 ? (\r\n              doctorData.todayAppointments.map((appointment) => (\r\n                <AppointmentItem key={appointment._id}>\r\n                  <AppointmentTime>\r\n                    <AppointmentDate>\r\n                      {formatDate(appointment.appointmentDate)}\r\n                    </AppointmentDate>\r\n                    <AppointmentHour>\r\n                      {formatTime(appointment.startTime)}\r\n                    </AppointmentHour>\r\n                  </AppointmentTime>\r\n\r\n                  <AppointmentInfo>\r\n                    <AppointmentTitle>\r\n                      {appointment.reason || \"Consultation\"}\r\n                    </AppointmentTitle>\r\n                    <AppointmentPatient>\r\n                      {appointment.patient?.name || \"Unknown Patient\"}\r\n                    </AppointmentPatient>\r\n                  </AppointmentInfo>\r\n\r\n                  <AppointmentStatus status={appointment.status}>\r\n                    {appointment.status.charAt(0).toUpperCase() +\r\n                      appointment.status.slice(1)}\r\n                  </AppointmentStatus>\r\n                </AppointmentItem>\r\n              ))\r\n            ) : (\r\n              <p>No appointments scheduled for today.</p>\r\n            )}\r\n          </AppointmentsList>\r\n        </Card>\r\n\r\n        <div>\r\n          <QuickActionsContainer>\r\n            <Link\r\n              to=\"/dashboard/appointments\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <QuickActionCard>\r\n                <QuickActionIcon color=\"#4A90E2\">\r\n                  <FaCalendarAlt />\r\n                </QuickActionIcon>\r\n                <QuickActionTitle>Appointments</QuickActionTitle>\r\n                <QuickActionDescription>\r\n                  Manage your appointments\r\n                </QuickActionDescription>\r\n              </QuickActionCard>\r\n            </Link>\r\n\r\n            <Link to=\"/dashboard/patients\" style={{ textDecoration: \"none\" }}>\r\n              <QuickActionCard>\r\n                <QuickActionIcon color=\"#50C878\">\r\n                  <FaUserInjured />\r\n                </QuickActionIcon>\r\n                <QuickActionTitle>Patients</QuickActionTitle>\r\n                <QuickActionDescription>\r\n                  View patient records\r\n                </QuickActionDescription>\r\n              </QuickActionCard>\r\n            </Link>\r\n\r\n            <Link\r\n              to=\"/dashboard/medical-records\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <QuickActionCard>\r\n                <QuickActionIcon color=\"#F5A623\">\r\n                  <FaFileMedical />\r\n                </QuickActionIcon>\r\n                <QuickActionTitle>Medical Records</QuickActionTitle>\r\n                <QuickActionDescription>\r\n                  Access medical files\r\n                </QuickActionDescription>\r\n              </QuickActionCard>\r\n            </Link>\r\n\r\n            <Link\r\n              to=\"/dashboard/doctor-telemedicine\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <QuickActionCard>\r\n                <QuickActionIcon color=\"#9C27B0\">\r\n                  <FaVideo />\r\n                </QuickActionIcon>\r\n                <QuickActionTitle>Telemedicine</QuickActionTitle>\r\n                <QuickActionDescription>\r\n                  Virtual consultations\r\n                </QuickActionDescription>\r\n              </QuickActionCard>\r\n            </Link>\r\n          </QuickActionsContainer>\r\n        </div>\r\n      </GridContainer>\r\n\r\n      <GridContainer>\r\n        <Card>\r\n          <SectionHeader>\r\n            <SectionTitle>Pending Appointments</SectionTitle>\r\n            <ViewAllLink to=\"/dashboard/appointments\">\r\n              View All <FaArrowRight />\r\n            </ViewAllLink>\r\n          </SectionHeader>\r\n\r\n          <AppointmentsList>\r\n            {doctorData.pendingAppointments.length > 0 ? (\r\n              doctorData.pendingAppointments.slice(0, 5).map((appointment) => (\r\n                <AppointmentItem key={appointment._id}>\r\n                  <AppointmentTime>\r\n                    <AppointmentDate>\r\n                      {formatDate(appointment.appointmentDate)}\r\n                    </AppointmentDate>\r\n                    <AppointmentHour>\r\n                      {formatTime(appointment.startTime)}\r\n                    </AppointmentHour>\r\n                  </AppointmentTime>\r\n\r\n                  <AppointmentInfo>\r\n                    <AppointmentTitle>\r\n                      {appointment.reason || \"Consultation\"}\r\n                    </AppointmentTitle>\r\n                    <AppointmentPatient>\r\n                      {appointment.patient?.name || \"Unknown Patient\"}\r\n                    </AppointmentPatient>\r\n                  </AppointmentInfo>\r\n\r\n                  <AppointmentStatus status={appointment.status}>\r\n                    {appointment.status.charAt(0).toUpperCase() +\r\n                      appointment.status.slice(1)}\r\n                  </AppointmentStatus>\r\n                </AppointmentItem>\r\n              ))\r\n            ) : (\r\n              <p>No pending appointments.</p>\r\n            )}\r\n          </AppointmentsList>\r\n        </Card>\r\n\r\n        <Card>\r\n          <SectionHeader>\r\n            <SectionTitle>Recent Patients</SectionTitle>\r\n            <ViewAllLink to=\"/dashboard/patients\">\r\n              View All <FaArrowRight />\r\n            </ViewAllLink>\r\n          </SectionHeader>\r\n\r\n          {doctorData.recentPatients.length > 0 ? (\r\n            doctorData.recentPatients.map((patient) => (\r\n              <PatientCard key={patient._id}>\r\n                <PatientAvatar>\r\n                  <FaUserInjured />\r\n                </PatientAvatar>\r\n\r\n                <PatientInfo>\r\n                  <PatientName>{patient.name}</PatientName>\r\n                  <PatientDetails>\r\n                    {patient.gender},{\" \"}\r\n                    {patient.dateOfBirth &&\r\n                      new Date().getFullYear() -\r\n                        new Date(patient.dateOfBirth).getFullYear()}{\" \"}\r\n                    years\r\n                  </PatientDetails>\r\n                </PatientInfo>\r\n\r\n                <ActionButton to={`/dashboard/patients/${patient._id}`}>\r\n                  <FaArrowRight />\r\n                </ActionButton>\r\n              </PatientCard>\r\n            ))\r\n          ) : (\r\n            <p>No recent patients.</p>\r\n          )}\r\n        </Card>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FaFlask,\r\n  FaVial,\r\n  FaClipboardCheck,\r\n  FaClipboardList,\r\n  FaFileMedical,\r\n  FaArrowRight,\r\n  FaEye,\r\n  FaClock,\r\n  FaCheckCircle,\r\n  FaBell,\r\n  FaExclamationTriangle,\r\n} from \"react-icons/fa\";\r\nimport Card from \"../../components/ui/Card\";\r\nimport AnimationContainer from \"../../components/animations/AnimationContainer\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport api from \"../../services/apiService\";\r\n// Styled components\r\nconst StatsGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatCard = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst StatIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  background-color: ${(props) => props.color || \"#4A90E2\"};\r\n  color: white;\r\n  font-size: 24px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst StatContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StatValue = styled.div`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  color: #333;\r\n`;\r\n\r\nconst StatLabel = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst SectionHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 30px 0 15px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin: 0;\r\n`;\r\n\r\nconst ViewAllLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  color: #4a90e2;\r\n  text-decoration: none;\r\n\r\n  svg {\r\n    margin-left: 5px;\r\n    transition: transform 0.2s ease;\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n\r\n    svg {\r\n      transform: translateX(3px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst OrdersList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst OrderItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst OrderTime = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 110px;\r\n`;\r\n\r\nconst OrderDate = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n`;\r\n\r\nconst OrderUrgency = styled.div`\r\n  font-size: 14px;\r\n  color: ${(props) => (props.urgent ? \"#E53E3E\" : \"#666\")};\r\n  margin-top: 5px;\r\n  font-weight: ${(props) => (props.urgent ? \"bold\" : \"normal\")};\r\n`;\r\n\r\nconst OrderInfo = styled.div`\r\n  flex: 1;\r\n  margin: 0 15px;\r\n`;\r\n\r\nconst OrderTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst OrderPatient = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst OrderStatus = styled.div`\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background-color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"completed\":\r\n        return \"#E8F5E9\";\r\n      case \"in_progress\":\r\n        return \"#FFF9C4\";\r\n      case \"pending\":\r\n        return \"#E3F2FD\";\r\n      default:\r\n        return \"#F5F5F5\";\r\n    }\r\n  }};\r\n  color: ${(props) => {\r\n    switch (props.status) {\r\n      case \"completed\":\r\n        return \"#2E7D32\";\r\n      case \"in_progress\":\r\n        return \"#F57F17\";\r\n      case \"pending\":\r\n        return \"#1565C0\";\r\n      default:\r\n        return \"#616161\";\r\n    }\r\n  }};\r\n`;\r\n\r\nconst AlertsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AlertItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst AlertIcon = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 8px;\r\n  background-color: ${(props) => props.color || \"#f0f8ff\"};\r\n  color: ${(props) => props.iconColor || \"#4a90e2\"};\r\n  font-size: 20px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst AlertInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst AlertTitle = styled.div`\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst AlertDetails = styled.div`\r\n  font-size: 14px;\r\n  color: #666;\r\n`;\r\n\r\nconst NoDataMessage = styled.div`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  color: #666;\r\n`;\r\n\r\nconst LabTechnicianDashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [labData, setLabData] = useState({\r\n    pendingOrders: [],\r\n    inProgressOrders: [],\r\n    completedReports: [],\r\n    alerts: [],\r\n  });\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Fetch data for lab technician\r\n    const fetchLabData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Fetch lab orders\r\n        const allOrders = await api.getLabOrders({\r\n          technician: user._id,\r\n        });\r\n\r\n        // Fetch lab reports\r\n        const reports = await api.getLabReports({\r\n          technician: user._id,\r\n        });\r\n\r\n        // Filter orders by status\r\n        const pendingOrders = allOrders.filter(\r\n          (order) => order.status === \"pending\"\r\n        );\r\n        const inProgressOrders = allOrders.filter(\r\n          (order) =>\r\n            order.status === \"in_progress\" &&\r\n            order.technician &&\r\n            order.technician._id === user._id\r\n        );\r\n\r\n        // Sort by urgency and date\r\n        const sortedPendingOrders = pendingOrders.sort((a, b) => {\r\n          if (a.urgency === \"Urgent\" && b.urgency !== \"Urgent\") return -1;\r\n          if (a.urgency !== \"Urgent\" && b.urgency === \"Urgent\") return 1;\r\n          return new Date(a.requestedDate) - new Date(b.requestedDate);\r\n        });\r\n\r\n        // Completed reports\r\n        const completedReports = reports.filter(\r\n          (report) => report.status === \"completed\"\r\n        );\r\n\r\n        // Generate alerts (urgent orders, overdue tests, etc.)\r\n        const alerts = [];\r\n\r\n        // Add urgent orders to alerts\r\n        sortedPendingOrders\r\n          .filter((order) => order.urgency === \"Urgent\")\r\n          .forEach((order) => {\r\n            alerts.push({\r\n              id: `urgent-${order._id}`,\r\n              type: \"urgent\",\r\n              title: `Urgent ${order.testType} needed`,\r\n              details: `Patient: ${\r\n                order.patient?.name || \"Unknown\"\r\n              } | Requested by: ${order.doctor?.name || \"Unknown\"}`,\r\n              date: order.requestedDate,\r\n            });\r\n          });\r\n\r\n        // Add overdue orders (more than 2 days old)\r\n        allOrders\r\n          .filter((order) => {\r\n            const requestDate = new Date(order.requestedDate);\r\n            const today = new Date();\r\n            const diffTime = Math.abs(today - requestDate);\r\n            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n            return diffDays > 2 && order.status !== \"completed\";\r\n          })\r\n          .forEach((order) => {\r\n            alerts.push({\r\n              id: `overdue-${order._id}`,\r\n              type: \"overdue\",\r\n              title: `Overdue: ${order.testType}`,\r\n              details: `Patient: ${\r\n                order.patient?.name || \"Unknown\"\r\n              } | Requested: ${formatDate(order.requestedDate)}`,\r\n              date: order.requestedDate,\r\n            });\r\n          });\r\n\r\n        // Sort alerts by date (newest first)\r\n        const sortedAlerts = alerts.sort(\r\n          (a, b) => new Date(b.date) - new Date(a.date)\r\n        );\r\n\r\n        setLabData({\r\n          pendingOrders: sortedPendingOrders,\r\n          inProgressOrders,\r\n          completedReports,\r\n          alerts: sortedAlerts,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching lab technician data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user && user._id) {\r\n      fetchLabData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return <AnimationContainer type=\"loading\" height=\"400px\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <StatsGrid>\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#4A90E2\">\r\n            <FaClipboardList />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{labData.pendingOrders.length || 0}</StatValue>\r\n            <StatLabel>Pending Lab Orders</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.1 }}\r\n        >\r\n          <StatIcon color=\"#F5A623\">\r\n            <FaVial />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{labData.inProgressOrders.length || 0}</StatValue>\r\n            <StatLabel>Tests In Progress</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.2 }}\r\n        >\r\n          <StatIcon color=\"#50C878\">\r\n            <FaClipboardCheck />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{labData.completedReports.length || 0}</StatValue>\r\n            <StatLabel>Completed Reports</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n\r\n        <StatCard\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.3, delay: 0.3 }}\r\n        >\r\n          <StatIcon color=\"#E74C3C\">\r\n            <FaBell />\r\n          </StatIcon>\r\n          <StatContent>\r\n            <StatValue>{labData.alerts.length || 0}</StatValue>\r\n            <StatLabel>Alerts</StatLabel>\r\n          </StatContent>\r\n        </StatCard>\r\n      </StatsGrid>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Pending Lab Orders</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/lab/view-lab-orders\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <OrdersList>\r\n          {labData.pendingOrders.slice(0, 5).map((order) => (\r\n            <OrderItem key={order._id}>\r\n              <OrderTime>\r\n                <OrderDate>{formatDate(order.requestedDate)}</OrderDate>\r\n                <OrderUrgency urgent={order.urgency === \"Urgent\"}>\r\n                  {order.urgency}\r\n                </OrderUrgency>\r\n              </OrderTime>\r\n              <OrderInfo>\r\n                <OrderTitle>{order.testType}</OrderTitle>\r\n                <OrderPatient>\r\n                  Patient: {order.patient?.name || \"Unknown\"} | Doctor:{\" \"}\r\n                  {order.doctor?.name || \"Unknown\"}\r\n                </OrderPatient>\r\n              </OrderInfo>\r\n              <OrderStatus status={order.status}>\r\n                {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\r\n              </OrderStatus>\r\n            </OrderItem>\r\n          ))}\r\n          {(!labData.pendingOrders || labData.pendingOrders.length === 0) && (\r\n            <NoDataMessage>No pending lab orders found.</NoDataMessage>\r\n          )}\r\n        </OrdersList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Tests In Progress</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/lab/view-lab-orders\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <OrdersList>\r\n          {labData.inProgressOrders.slice(0, 5).map((order) => (\r\n            <OrderItem key={order._id}>\r\n              <OrderTime>\r\n                <OrderDate>{formatDate(order.requestedDate)}</OrderDate>\r\n                <OrderUrgency urgent={order.urgency === \"Urgent\"}>\r\n                  {order.urgency}\r\n                </OrderUrgency>\r\n              </OrderTime>\r\n              <OrderInfo>\r\n                <OrderTitle>{order.testType}</OrderTitle>\r\n                <OrderPatient>\r\n                  Patient: {order.patient?.name || \"Unknown\"} | Doctor:{\" \"}\r\n                  {order.doctor?.name || \"Unknown\"}\r\n                </OrderPatient>\r\n              </OrderInfo>\r\n              <Link to={`/dashboard/lab/upload-results/${order._id}`}>\r\n                <FaEye style={{ color: \"#4A90E2\" }} />\r\n              </Link>\r\n            </OrderItem>\r\n          ))}\r\n          {(!labData.inProgressOrders ||\r\n            labData.inProgressOrders.length === 0) && (\r\n            <NoDataMessage>No tests currently in progress.</NoDataMessage>\r\n          )}\r\n        </OrdersList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Alerts</SectionTitle>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <AlertsList>\r\n          {labData.alerts.slice(0, 5).map((alert) => (\r\n            <AlertItem key={alert.id}>\r\n              <AlertIcon\r\n                color={alert.type === \"urgent\" ? \"#FFF5F5\" : \"#FFF9C4\"}\r\n                iconColor={alert.type === \"urgent\" ? \"#E53E3E\" : \"#F57F17\"}\r\n              >\r\n                {alert.type === \"urgent\" ? (\r\n                  <FaExclamationTriangle />\r\n                ) : (\r\n                  <FaClock />\r\n                )}\r\n              </AlertIcon>\r\n              <AlertInfo>\r\n                <AlertTitle>{alert.title}</AlertTitle>\r\n                <AlertDetails>{alert.details}</AlertDetails>\r\n              </AlertInfo>\r\n            </AlertItem>\r\n          ))}\r\n          {(!labData.alerts || labData.alerts.length === 0) && (\r\n            <NoDataMessage>No alerts at this time.</NoDataMessage>\r\n          )}\r\n        </AlertsList>\r\n      </Card>\r\n\r\n      <SectionHeader>\r\n        <SectionTitle>Recently Completed Reports</SectionTitle>\r\n        <ViewAllLink to=\"/dashboard/lab/lab-reports\">\r\n          View All <FaArrowRight size={12} />\r\n        </ViewAllLink>\r\n      </SectionHeader>\r\n\r\n      <Card>\r\n        <OrdersList>\r\n          {labData.completedReports.slice(0, 5).map((report) => (\r\n            <OrderItem key={report._id}>\r\n              <OrderTime>\r\n                <OrderDate>{formatDate(report.date)}</OrderDate>\r\n                <OrderUrgency>\r\n                  <FaCheckCircle style={{ color: \"#50C878\" }} />\r\n                </OrderUrgency>\r\n              </OrderTime>\r\n              <OrderInfo>\r\n                <OrderTitle>{report.reportType}</OrderTitle>\r\n                <OrderPatient>\r\n                  Patient: {report.patient?.name || \"Unknown\"}\r\n                </OrderPatient>\r\n              </OrderInfo>\r\n              <Link to={`/dashboard/lab/lab-reports/${report._id}`}>\r\n                <FaEye style={{ color: \"#4A90E2\" }} />\r\n              </Link>\r\n            </OrderItem>\r\n          ))}\r\n          {(!labData.completedReports ||\r\n            labData.completedReports.length === 0) && (\r\n            <NoDataMessage>No completed reports found.</NoDataMessage>\r\n          )}\r\n        </OrdersList>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabTechnicianDashboard;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FaUserInjured,\n  FaCalendarAlt,\n  FaFileMedical,\n  FaFileInvoiceDollar,\n  FaArrowRight,\n  FaEye,\n  FaCalendarPlus,\n  FaFlask,\n  FaCheck,\n  FaClock,\n  FaPrescriptionBottleAlt,\n  FaHospital,\n  FaUserMd,\n  FaRegClock,\n} from \"react-icons/fa\";\nimport Card from \"../components/ui/Card\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n} from \"chart.js\";\nimport AnimationContainer from \"../components/animations/AnimationContainer\";\nimport { useAuth } from \"../context/AuthContext\";\nimport PatientDashboard from \"./patient/PatientDashboard\";\nimport AdminDashboard from \"./admin/Dashboard\";\nimport DoctorDashboard from \"./doctor/DoctorDashboard\";\nimport LabTechnicianDashboard from \"./lab/LabTechnicianDashboard\";\n\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\nconst DashboardContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: ${(props) => props.theme.spacing(3)};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  gap: ${(props) => props.theme.spacing(3)};\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst StatCard = styled(motion.div)`\n  background-color: ${(props) => props.theme.colors.background.paper};\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  padding: ${(props) => props.theme.spacing(3)};\n  box-shadow: ${(props) => props.theme.shadows.small};\n  display: flex;\n  align-items: center;\n`;\n\nconst StatIcon = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  background-color: ${(props) =>\n    props.color || props.theme.colors.primary.main};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${(props) => props.theme.spacing(2)};\n\n  svg {\n    color: white;\n    font-size: 1.5rem;\n  }\n`;\n\nconst StatContent = styled.div`\n  flex: 1;\n`;\n\nconst StatValue = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.875rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spacing(4)};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.25rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin: 0;\n`;\n\nconst ViewAllLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary.main};\n  text-decoration: none;\n  font-size: 0.875rem;\n  gap: ${(props) => props.theme.spacing(0.5)};\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${(props) => props.theme.colors.primary.dark};\n  }\n`;\n\nconst PatientsList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PatientItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst PatientAvatar = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${(props) => props.theme.colors.background.default};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${(props) => props.theme.spacing(2)};\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst PatientInfo = styled.div`\n  flex: 1;\n`;\n\nconst PatientName = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst PatientDetails = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst PatientActions = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(1)};\n`;\n\nconst ActionButton = styled(Link)`\n  padding: ${(props) => props.theme.spacing(0.5)}\n    ${(props) => props.theme.spacing(1)};\n  background: none;\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  color: ${(props) => props.theme.colors.primary.main};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: 0.875rem;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.background.default};\n  }\n`;\n\nconst AppointmentsList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AppointmentItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst AppointmentTime = styled.div`\n  min-width: 100px;\n  margin-right: ${(props) => props.theme.spacing(2)};\n`;\n\nconst AppointmentDate = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n  font-size: 0.875rem;\n`;\n\nconst AppointmentHour = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst AppointmentInfo = styled.div`\n  flex: 1;\n`;\n\nconst AppointmentTitle = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst AppointmentPatient = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst AppointmentStatus = styled.div`\n  padding: ${(props) => props.theme.spacing(0.5)}\n    ${(props) => props.theme.spacing(1)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  font-size: 0.75rem;\n  background-color: ${(props) => {\n    switch (props.status) {\n      case \"confirmed\":\n        return props.theme.colors.status.successLight;\n      case \"pending\":\n        return props.theme.colors.status.warningLight;\n      case \"cancelled\":\n        return props.theme.colors.status.errorLight;\n      default:\n        return props.theme.colors.background.default;\n    }\n  }};\n  color: ${(props) => {\n    switch (props.status) {\n      case \"confirmed\":\n        return props.theme.colors.status.success;\n      case \"pending\":\n        return props.theme.colors.status.warning;\n      case \"cancelled\":\n        return props.theme.colors.status.error;\n      default:\n        return props.theme.colors.text.secondary;\n    }\n  }};\n`;\n\n// Patient-specific styled components\nconst MedicationList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MedicationItem = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${(props) => props.theme.spacing(2)};\n  border-bottom: 1px solid ${(props) => props.theme.colors.border.main};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst MedicationIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #f0f7ff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${(props) => props.theme.spacing(2)};\n  color: #3182ce;\n`;\n\nconst MedicationInfo = styled.div`\n  flex: 1;\n`;\n\nconst MedicationName = styled.div`\n  font-weight: 500;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst MedicationDetails = styled.div`\n  font-size: 0.75rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst Badge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  padding: 0.2rem 0.5rem;\n  border-radius: 1rem;\n  font-size: 0.7rem;\n  font-weight: 500;\n  background-color: ${(props) =>\n    props.color || props.theme.colors.primary.main + \"20\"};\n  color: ${(props) => props.textColor || props.theme.colors.primary.main};\n  margin-left: 0.5rem;\n`;\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const { user, isPatient, isDoctor, isAdmin, isLabTechnician } = useAuth();\n\n  // Mock data - in a real app, this would come from API calls\n  const stats = [\n    {\n      icon: <FaUserInjured />,\n      value: 1248,\n      label: \"Total Patients\",\n      color: \"#4A90E2\",\n    },\n    {\n      icon: <FaCalendarAlt />,\n      value: 42,\n      label: \"Today's Appointments\",\n      color: \"#50C878\",\n    },\n    {\n      icon: <FaFileMedical />,\n      value: 156,\n      label: \"New Records (This Week)\",\n      color: \"#F5A623\",\n    },\n    {\n      icon: <FaFileInvoiceDollar />,\n      value: \"$24,568\",\n      label: \"Revenue (This Month)\",\n      color: \"#E74C3C\",\n    },\n  ];\n\n  // Mock recent patients data\n  const recentPatients = [\n    {\n      id: \"1\",\n      name: \"John Doe\",\n      age: 45,\n      gender: \"Male\",\n      lastVisit: \"2024-03-15\",\n      condition: \"Hypertension\",\n    },\n    {\n      id: \"2\",\n      name: \"Jane Smith\",\n      age: 32,\n      gender: \"Female\",\n      lastVisit: \"2024-03-28\",\n      condition: \"Pregnancy Check-up\",\n    },\n    {\n      id: \"3\",\n      name: \"Robert Johnson\",\n      age: 58,\n      gender: \"Male\",\n      lastVisit: \"2024-03-20\",\n      condition: \"Diabetes Follow-up\",\n    },\n    {\n      id: \"4\",\n      name: \"Maria Garcia\",\n      age: 27,\n      gender: \"Female\",\n      lastVisit: \"2024-03-25\",\n      condition: \"Annual Check-up\",\n    },\n  ];\n\n  // Mock upcoming appointments data\n  const upcomingAppointments = [\n    {\n      id: \"1\",\n      patientName: \"John Doe\",\n      date: \"2024-04-02\",\n      time: \"09:30 AM\",\n      purpose: \"Follow-up Consultation\",\n      status: \"confirmed\",\n    },\n    {\n      id: \"2\",\n      patientName: \"Emily Chen\",\n      date: \"2024-04-02\",\n      time: \"11:00 AM\",\n      purpose: \"New Patient Consultation\",\n      status: \"confirmed\",\n    },\n    {\n      id: \"3\",\n      patientName: \"Michael Rodriguez\",\n      date: \"2024-04-03\",\n      time: \"10:15 AM\",\n      purpose: \"Prescription Renewal\",\n      status: \"pending\",\n    },\n    {\n      id: \"4\",\n      patientName: \"Sarah Johnson\",\n      date: \"2024-04-03\",\n      time: \"03:45 PM\",\n      purpose: \"Lab Results Review\",\n      status: \"confirmed\",\n    },\n  ];\n\n  useEffect(() => {\n    // Simulate API loading\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    });\n  };\n\n  if (loading) {\n    return <AnimationContainer type=\"loading\" height=\"400px\" />;\n  }\n\n  // Render appropriate dashboard based on user role\n  if (isPatient()) {\n    return <PatientDashboard />;\n  }\n\n  if (isAdmin()) {\n    return <AdminDashboard />;\n  }\n\n  if (isDoctor()) {\n    return <DoctorDashboard />;\n  }\n\n  if (isLabTechnician()) {\n    try {\n      return <LabTechnicianDashboard />;\n    } catch (error) {\n      console.error(\"Error loading Lab Technician Dashboard:\", error);\n      return <div>Lab Technician Dashboard is under development</div>;\n    }\n  }\n\n  // Default - fallback dashboard\n  return <div>Please select a role to continue</div>;\n};\n\nexport default Dashboard;\n"],"names":["StatsGrid","styled","StatCard","motion","StatIcon","props","StatContent","StatValue","StatLabel","SectionHeader","SectionTitle","ViewAllLink","Link","AppointmentsList","AppointmentItem","AppointmentTime","AppointmentDate","AppointmentHour","AppointmentInfo","AppointmentTitle","AppointmentPatient","AppointmentStatus","MedicationList","MedicationItem","MedicationIcon","MedicationInfo","MedicationName","MedicationDetails","Badge","RecordsList","RecordItem","RecordIcon","RecordInfo","RecordTitle","RecordDetails","PatientDashboard","loading","setLoading","useState","patientData","setPatientData","errorMessages","setErrorMessages","user","useAuth","useEffect","fetchPatientData","appointments","api","formattedAppointments","a","b","appointment","_a","labReports","labReportError","labReportsResponse","labError","prev","error","formatDate","dateString","jsx","AnimationContainer","jsxs","FaCalendarAlt","FaFileMedical","_b","FaFlask","_c","r","FaPrescriptionBottleAlt","_d","FaArrowRight","Card","_e","_f","medication","FaRegClock","_g","report","FaCheck","FaClock","_h","record","FaEye","GridContainer","PatientCard","PatientAvatar","PatientInfo","PatientName","PatientDetails","ActionButton","QuickActionsContainer","QuickActionCard","QuickActionIcon","QuickActionTitle","QuickActionDescription","DoctorDashboard","doctorData","setDoctorData","fetchDoctorData","recentPatients","options","formatTime","timeString","FaUserInjured","FaVideo","patient","OrdersList","OrderItem","OrderTime","OrderDate","OrderUrgency","OrderInfo","OrderTitle","OrderPatient","OrderStatus","AlertsList","AlertItem","AlertIcon","AlertInfo","AlertTitle","AlertDetails","NoDataMessage","LabTechnicianDashboard","labData","setLabData","fetchLabData","allOrders","reports","pendingOrders","order","inProgressOrders","sortedPendingOrders","completedReports","alerts","requestDate","diffTime","sortedAlerts","FaClipboardList","FaVial","FaClipboardCheck","FaBell","alert","FaExclamationTriangle","FaCheckCircle","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Dashboard","isPatient","isDoctor","isAdmin","isLabTechnician","timer","AdminDashboard"],"mappings":"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"}