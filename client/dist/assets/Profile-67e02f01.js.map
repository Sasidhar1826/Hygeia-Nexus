{"version":3,"file":"Profile-67e02f01.js","sources":["../../src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n  FaUser,\n  FaEnvelope,\n  FaPhone,\n  FaEdit,\n  FaSave,\n  FaTimes,\n} from \"react-icons/fa\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Card from \"../components/ui/Card\";\nimport api from \"../services/apiService\";\n\nconst ProfileContainer = styled.div`\n  padding: ${(props) => props.theme.spacing(3)};\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst ProfileHeader = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n`;\n\nconst Title = styled.h1`\n  font-size: 1.8rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n`;\n\nconst Subtitle = styled.p`\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst ProfileCard = styled(Card)`\n  padding: ${(props) => props.theme.spacing(4)};\n`;\n\nconst ProfileSection = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(4)};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  font-size: 1.2rem;\n  color: ${(props) => props.theme.colors.text.primary};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: ${(props) => props.theme.spacing(1)};\n    color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst ProfileInfo = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${(props) => props.theme.spacing(3)};\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InfoItem = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst InfoLabel = styled.p`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n`;\n\nconst InfoValue = styled.p`\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst EditButton = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spacing(1.5)}\n    ${(props) => props.theme.spacing(3)};\n  background-color: ${(props) => props.theme.colors.primary.main};\n  color: white;\n  border: none;\n  border-radius: ${(props) => props.theme.borderRadius.medium};\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: ${(props) => props.theme.spacing(2)};\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.primary.dark};\n  }\n\n  svg {\n    margin-right: ${(props) => props.theme.spacing(1)};\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spacing(2)};\n  margin-top: ${(props) => props.theme.spacing(3)};\n`;\n\nconst CancelButton = styled(EditButton)`\n  background-color: ${(props) => props.theme.colors.text.disabled};\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.text.secondary};\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n  margin-bottom: ${(props) => props.theme.spacing(0.5)};\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${(props) => props.theme.spacing(1.5)};\n  border: 1px solid ${(props) => props.theme.colors.border};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  font-size: 1rem;\n  transition: border-color 0.3s;\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.theme.colors.primary.main};\n  }\n`;\n\nconst AppointmentsList = styled.div`\n  margin-top: ${(props) => props.theme.spacing(2)};\n`;\n\nconst AppointmentItem = styled.div`\n  padding: ${(props) => props.theme.spacing(2)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) => props.theme.colors.background.paper};\n  margin-bottom: ${(props) => props.theme.spacing(2)};\n  box-shadow: ${(props) => props.theme.shadows.small};\n`;\n\nconst AppointmentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${(props) => props.theme.spacing(1)};\n`;\n\nconst AppointmentTitle = styled.h3`\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.text.primary};\n`;\n\nconst AppointmentStatus = styled.span`\n  font-size: 0.8rem;\n  padding: ${(props) => props.theme.spacing(0.5)}\n    ${(props) => props.theme.spacing(1)};\n  border-radius: ${(props) => props.theme.borderRadius.small};\n  background-color: ${(props) => {\n    switch (props.status) {\n      case \"scheduled\":\n        return props.theme.colors.status.info + \"20\";\n      case \"completed\":\n        return props.theme.colors.status.success + \"20\";\n      case \"cancelled\":\n        return props.theme.colors.status.error + \"20\";\n      default:\n        return props.theme.colors.text.disabled + \"20\";\n    }\n  }};\n  color: ${(props) => {\n    switch (props.status) {\n      case \"scheduled\":\n        return props.theme.colors.status.info;\n      case \"completed\":\n        return props.theme.colors.status.success;\n      case \"cancelled\":\n        return props.theme.colors.status.error;\n      default:\n        return props.theme.colors.text.disabled;\n    }\n  }};\n`;\n\nconst AppointmentDetails = styled.div`\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.text.secondary};\n`;\n\nconst NoAppointments = styled.p`\n  color: ${(props) => props.theme.colors.text.secondary};\n  font-style: italic;\n`;\n\nconst Profile = () => {\n  const { user, updateUserProfile } = useAuth();\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    contactNumber: \"\",\n  });\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        name: user.name || \"\",\n        email: user.email || \"\",\n        contactNumber: user.contactNumber || \"\",\n      });\n\n      // Fetch user's appointments using mockApi\n      const fetchAppointments = async () => {\n        try {\n          console.log(\"Fetching appointments for user:\", user._id);\n\n          // For development environment, instead of filtering by user ID that doesn't match mock data,\n          // return a few sample appointments\n          const mockAppointments = [\n            {\n              _id: \"1\",\n              appointmentDate: new Date(\n                new Date().setDate(new Date().getDate() + 3)\n              )\n                .toISOString()\n                .split(\"T\")[0],\n              startTime: \"10:00 AM\",\n              endTime: \"10:30 AM\",\n              reason: \"Annual Checkup\",\n              status: \"confirmed\",\n              doctor: {\n                _id: \"2\",\n                name: \"Dr. Sarah Johnson\",\n                specialization: \"Cardiology\",\n              },\n            },\n            {\n              _id: \"2\",\n              appointmentDate: new Date(\n                new Date().setDate(new Date().getDate() - 5)\n              )\n                .toISOString()\n                .split(\"T\")[0],\n              startTime: \"02:00 PM\",\n              endTime: \"02:30 PM\",\n              reason: \"Follow-up Consultation\",\n              status: \"completed\",\n              doctor: {\n                _id: \"2\",\n                name: \"Dr. Sarah Johnson\",\n                specialization: \"Cardiology\",\n              },\n            },\n          ];\n\n          console.log(\"Returning mock appointments:\", mockAppointments);\n          setAppointments(mockAppointments);\n          setLoading(false);\n        } catch (error) {\n          console.error(\"Error fetching appointments:\", error);\n          setLoading(false);\n        }\n      };\n\n      fetchAppointments();\n    }\n  }, [user]);\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      console.log(\"Submitting profile update:\", formData);\n      // Using updateUserProfile from AuthContext which handles the localStorage update\n      const updatedUser = await updateUserProfile(formData);\n      console.log(\"Profile updated successfully:\", updatedUser);\n      setIsEditing(false);\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      // Display an error message to the user (in a real app, you'd show this in the UI)\n      alert(`Failed to update profile: ${error.message || \"Unknown error\"}`);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  const formatTime = (timeString) => {\n    return timeString;\n  };\n\n  if (!user) {\n    return (\n      <ProfileContainer>\n        <ProfileHeader>\n          <Title>Profile</Title>\n          <Subtitle>Loading user information...</Subtitle>\n        </ProfileHeader>\n      </ProfileContainer>\n    );\n  }\n\n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <Title>My Profile</Title>\n        <Subtitle>View and manage your personal information</Subtitle>\n      </ProfileHeader>\n\n      <ProfileCard>\n        <ProfileSection>\n          <SectionTitle>\n            <FaUser />\n            Personal Information\n          </SectionTitle>\n\n          {isEditing ? (\n            <form onSubmit={handleSubmit}>\n              <FormGroup>\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"email\">Email Address</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  required\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label htmlFor=\"contactNumber\">Contact Number</Label>\n                <Input\n                  type=\"tel\"\n                  id=\"contactNumber\"\n                  name=\"contactNumber\"\n                  value={formData.contactNumber}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n\n              <ButtonGroup>\n                <EditButton type=\"submit\" whileTap={{ scale: 0.95 }}>\n                  <FaSave />\n                  Save Changes\n                </EditButton>\n                <CancelButton\n                  type=\"button\"\n                  onClick={() => setIsEditing(false)}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <FaTimes />\n                  Cancel\n                </CancelButton>\n              </ButtonGroup>\n            </form>\n          ) : (\n            <>\n              <ProfileInfo>\n                <InfoItem>\n                  <InfoLabel>Full Name</InfoLabel>\n                  <InfoValue>{user.name}</InfoValue>\n                </InfoItem>\n\n                <InfoItem>\n                  <InfoLabel>Email Address</InfoLabel>\n                  <InfoValue>{user.email}</InfoValue>\n                </InfoItem>\n\n                <InfoItem>\n                  <InfoLabel>Contact Number</InfoLabel>\n                  <InfoValue>{user.contactNumber || \"Not provided\"}</InfoValue>\n                </InfoItem>\n\n                <InfoItem>\n                  <InfoLabel>Account Type</InfoLabel>\n                  <InfoValue>\n                    {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                  </InfoValue>\n                </InfoItem>\n              </ProfileInfo>\n\n              <EditButton\n                onClick={() => setIsEditing(true)}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <FaEdit />\n                Edit Profile\n              </EditButton>\n            </>\n          )}\n        </ProfileSection>\n\n        <ProfileSection>\n          <SectionTitle>\n            <FaEnvelope />\n            My Appointments\n          </SectionTitle>\n\n          {loading ? (\n            <p>Loading appointments...</p>\n          ) : appointments.length > 0 ? (\n            <AppointmentsList>\n              {appointments.map((appointment) => (\n                <AppointmentItem key={appointment._id}>\n                  <AppointmentHeader>\n                    <AppointmentTitle>\n                      {appointment.doctor?.name || \"Doctor\"} -\n                      {appointment.reason || \"Consultation\"}\n                    </AppointmentTitle>\n                    <AppointmentStatus status={appointment.status}>\n                      {appointment.status.charAt(0).toUpperCase() +\n                        appointment.status.slice(1)}\n                    </AppointmentStatus>\n                  </AppointmentHeader>\n                  <AppointmentDetails>\n                    <p>Date: {formatDate(appointment.appointmentDate)}</p>\n                    <p>\n                      Time: {formatTime(appointment.startTime)} -\n                      {formatTime(appointment.endTime)}\n                    </p>\n                    <p>Type: {appointment.type || \"In-person\"}</p>\n                    <p>Reason: {appointment.reason}</p>\n                  </AppointmentDetails>\n                </AppointmentItem>\n              ))}\n            </AppointmentsList>\n          ) : (\n            <NoAppointments>\n              You don't have any appointments yet.\n            </NoAppointments>\n          )}\n        </ProfileSection>\n      </ProfileCard>\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n"],"names":["ProfileContainer","styled","props","ProfileHeader","Title","Subtitle","ProfileCard","Card","ProfileSection","SectionTitle","ProfileInfo","InfoItem","InfoLabel","InfoValue","EditButton","motion","ButtonGroup","CancelButton","FormGroup","Label","Input","AppointmentsList","AppointmentItem","AppointmentHeader","AppointmentTitle","AppointmentStatus","AppointmentDetails","NoAppointments","Profile","user","updateUserProfile","useAuth","isEditing","setIsEditing","useState","formData","setFormData","appointments","setAppointments","loading","setLoading","useEffect","mockAppointments","error","handleChange","e","handleSubmit","updatedUser","formatDate","dateString","options","formatTime","timeString","jsxs","jsx","FaUser","FaSave","FaTimes","Fragment","FaEdit","FaEnvelope","appointment","_a"],"mappings":"4PAeA,MAAMA,EAAmBC,EAAO;AAAA,aAClBC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,EAKxCC,EAAgBF,EAAO;AAAA,mBACTC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CE,EAAQH,EAAO;AAAA;AAAA,WAETC,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA,mBACjCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CG,EAAWJ,EAAO;AAAA;AAAA,WAEZC,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA,EAGjDI,EAAcL,EAAOM,CAAI;AAAA,aACjBL,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAGxCM,EAAiBP,EAAO;AAAA,mBACVC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9CO,EAAeR,EAAO;AAAA;AAAA,WAEhBC,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA,mBACjCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAK/BA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,aACvCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA,EAIjDQ,EAAcT,EAAO;AAAA;AAAA;AAAA,SAGjBC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpCS,EAAWV,EAAO;AAAA,mBACJC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CU,EAAYX,EAAO;AAAA;AAAA,WAEbC,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA,mBACnCA,GAAUA,EAAM,MAAM,QAAQ,EAAG,CAAC;AAAA,EAGhDW,EAAYZ,EAAO;AAAA;AAAA,WAEbC,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA,EAG/CY,EAAab,EAAOc,EAAO,MAAM;AAAA;AAAA;AAAA;AAAA,aAIzBb,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,MACzCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,sBAChBA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA,mBAG5CA,GAAUA,EAAM,MAAM,aAAa,MAAM;AAAA;AAAA;AAAA;AAAA,gBAI5CA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA,wBAGxBA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA,oBAI7CA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA;AAAA,EAI/Cc,EAAcf,EAAO;AAAA;AAAA,SAEjBC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,gBACzBA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG3Ce,EAAehB,EAAOa,CAAU;AAAA,sBACfZ,GAAUA,EAAM,MAAM,OAAO,KAAK,QAAQ;AAAA;AAAA;AAAA,wBAGxCA,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA;AAAA,EAI9DgB,EAAYjB,EAAO;AAAA,mBACLC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CiB,EAAQlB,EAAO;AAAA;AAAA;AAAA,WAGTC,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA,mBACnCA,GAAUA,EAAM,MAAM,QAAQ,EAAG,CAAC;AAAA,EAGhDkB,EAAQnB,EAAO;AAAA;AAAA,aAEPC,GAAUA,EAAM,MAAM,QAAQ,GAAG,CAAC;AAAA,sBACzBA,GAAUA,EAAM,MAAM,OAAO,MAAM;AAAA,mBACtCA,GAAUA,EAAM,MAAM,aAAa,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMvCA,GAAUA,EAAM,MAAM,OAAO,QAAQ,IAAI;AAAA;AAAA,EAIxDmB,EAAmBpB,EAAO;AAAA,gBACfC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG3CoB,EAAkBrB,EAAO;AAAA,aACjBC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,mBAC1BA,GAAUA,EAAM,MAAM,aAAa,KAAK;AAAA,sBACrCA,GAAUA,EAAM,MAAM,OAAO,WAAW,KAAK;AAAA,mBAChDA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,gBACnCA,GAAUA,EAAM,MAAM,QAAQ,KAAK;AAAA,EAG9CqB,EAAoBtB,EAAO;AAAA;AAAA;AAAA,mBAGbC,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAG9CsB,EAAmBvB,EAAO;AAAA;AAAA,WAEpBC,GAAUA,EAAM,MAAM,OAAO,KAAK,OAAO;AAAA,EAG/CuB,EAAoBxB,EAAO;AAAA;AAAA,aAEnBC,GAAUA,EAAM,MAAM,QAAQ,EAAG,CAAC;AAAA,MACzCA,GAAUA,EAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,mBACnBA,GAAUA,EAAM,MAAM,aAAa,KAAK;AAAA,sBACrCA,GAAU,CAC7B,OAAQA,EAAM,OAAQ,CACpB,IAAK,YACH,OAAOA,EAAM,MAAM,OAAO,OAAO,KAAO,KAC1C,IAAK,YACH,OAAOA,EAAM,MAAM,OAAO,OAAO,QAAU,KAC7C,IAAK,YACH,OAAOA,EAAM,MAAM,OAAO,OAAO,MAAQ,KAC3C,QACE,OAAOA,EAAM,MAAM,OAAO,KAAK,SAAW,IAC9C,CACF,CAAC;AAAA,WACSA,GAAU,CAClB,OAAQA,EAAM,OAAQ,CACpB,IAAK,YACI,OAAAA,EAAM,MAAM,OAAO,OAAO,KACnC,IAAK,YACI,OAAAA,EAAM,MAAM,OAAO,OAAO,QACnC,IAAK,YACI,OAAAA,EAAM,MAAM,OAAO,OAAO,MACnC,QACS,OAAAA,EAAM,MAAM,OAAO,KAAK,QACnC,CACF,CAAC;AAAA,EAGGwB,EAAqBzB,EAAO;AAAA;AAAA,WAEtBC,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA,EAGjDyB,EAAiB1B,EAAO;AAAA,WAClBC,GAAUA,EAAM,MAAM,OAAO,KAAK,SAAS;AAAA;AAAA,EAIjD0B,GAAU,IAAM,CACpB,KAAM,CAAE,KAAAC,EAAM,kBAAAC,CAAkB,EAAIC,EAAQ,EACtC,CAACC,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAUC,CAAW,EAAIF,WAAS,CACvC,KAAM,GACN,MAAO,GACP,cAAe,EAAA,CAChB,EACK,CAACG,EAAcC,CAAe,EAAIJ,EAAA,SAAS,CAAE,CAAA,EAC7C,CAACK,EAASC,CAAU,EAAIN,WAAS,EAAI,EAE3CO,EAAAA,UAAU,IAAM,CACVZ,IACUO,EAAA,CACV,KAAMP,EAAK,MAAQ,GACnB,MAAOA,EAAK,OAAS,GACrB,cAAeA,EAAK,eAAiB,EAAA,CACtC,GAGyB,SAAY,CAChC,GAAA,CACM,QAAA,IAAI,kCAAmCA,EAAK,GAAG,EAIvD,MAAMa,EAAmB,CACvB,CACE,IAAK,IACL,gBAAiB,IAAI,KACnB,IAAI,KAAO,EAAA,YAAY,OAAO,QAAQ,EAAI,CAAC,GAE1C,YAAY,EACZ,MAAM,GAAG,EAAE,CAAC,EACf,UAAW,WACX,QAAS,WACT,OAAQ,iBACR,OAAQ,YACR,OAAQ,CACN,IAAK,IACL,KAAM,oBACN,eAAgB,YAClB,CACF,EACA,CACE,IAAK,IACL,gBAAiB,IAAI,KACnB,IAAI,KAAO,EAAA,YAAY,OAAO,QAAQ,EAAI,CAAC,GAE1C,YAAY,EACZ,MAAM,GAAG,EAAE,CAAC,EACf,UAAW,WACX,QAAS,WACT,OAAQ,yBACR,OAAQ,YACR,OAAQ,CACN,IAAK,IACL,KAAM,oBACN,eAAgB,YAClB,CACF,CAAA,EAGM,QAAA,IAAI,+BAAgCA,CAAgB,EAC5DJ,EAAgBI,CAAgB,EAChCF,EAAW,EAAK,QACTG,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDH,EAAW,EAAK,CAClB,CAAA,KAIJ,EACC,CAACX,CAAI,CAAC,EAEH,MAAAe,EAAgBC,GAAM,CACdT,EAAA,CACV,GAAGD,EACH,CAACU,EAAE,OAAO,IAAI,EAAGA,EAAE,OAAO,KAAA,CAC3B,CAAA,EAGGC,EAAe,MAAOD,GAAM,CAChCA,EAAE,eAAe,EACb,GAAA,CACM,QAAA,IAAI,6BAA8BV,CAAQ,EAE5C,MAAAY,EAAc,MAAMjB,EAAkBK,CAAQ,EAC5C,QAAA,IAAI,gCAAiCY,CAAW,EACxDd,EAAa,EAAK,QACXU,EAAO,CACN,QAAA,MAAM,0BAA2BA,CAAK,EAE9C,MAAM,6BAA6BA,EAAM,SAAW,eAAe,EAAE,CACvE,CAAA,EAGIK,EAAcC,GAAe,CACjC,MAAMC,EAAU,CAAE,KAAM,UAAW,MAAO,OAAQ,IAAK,WACvD,OAAO,IAAI,KAAKD,CAAU,EAAE,mBAAmB,OAAWC,CAAO,CAAA,EAG7DC,EAAcC,GACXA,EAGT,OAAKvB,IAYF7B,EACC,CAAA,SAAA,CAAAqD,EAAClD,EACC,CAAA,SAAA,CAAAmD,EAAClD,GAAM,SAAU,YAAA,CAAA,EACjBkD,EAACjD,GAAS,SAAyC,2CAAA,CAAA,CAAA,EACrD,IAECC,EACC,CAAA,SAAA,CAAA+C,EAAC7C,EACC,CAAA,SAAA,CAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA6C,EAACC,EAAO,EAAA,EAAE,sBAAA,EAEZ,EAECvB,EACCqB,EAAC,OAAK,CAAA,SAAUP,EACd,SAAA,CAAAO,EAACnC,EACC,CAAA,SAAA,CAACoC,EAAAnC,EAAA,CAAM,QAAQ,OAAO,SAAS,YAAA,EAC/BmC,EAAClC,EAAA,CACC,KAAK,OACL,GAAG,OACH,KAAK,OACL,MAAOe,EAAS,KAChB,SAAUS,EACV,SAAQ,EAAA,CACV,CAAA,EACF,IAEC1B,EACC,CAAA,SAAA,CAACoC,EAAAnC,EAAA,CAAM,QAAQ,QAAQ,SAAa,gBAAA,EACpCmC,EAAClC,EAAA,CACC,KAAK,QACL,GAAG,QACH,KAAK,QACL,MAAOe,EAAS,MAChB,SAAUS,EACV,SAAQ,EAAA,CACV,CAAA,EACF,IAEC1B,EACC,CAAA,SAAA,CAACoC,EAAAnC,EAAA,CAAM,QAAQ,gBAAgB,SAAc,iBAAA,EAC7CmC,EAAClC,EAAA,CACC,KAAK,MACL,GAAG,gBACH,KAAK,gBACL,MAAOe,EAAS,cAChB,SAAUS,CAAA,CACZ,CAAA,EACF,IAEC5B,EACC,CAAA,SAAA,CAAAqC,EAACvC,GAAW,KAAK,SAAS,SAAU,CAAE,MAAO,GAC3C,EAAA,SAAA,CAAAwC,EAACE,EAAO,EAAA,EAAE,cAAA,EAEZ,EACAH,EAACpC,EAAA,CACC,KAAK,SACL,QAAS,IAAMgB,EAAa,EAAK,EACjC,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAAqB,EAACG,EAAQ,EAAA,EAAE,QAAA,CAAA,CAEb,CAAA,EACF,CAAA,CAAA,CACF,EAGEJ,EAAAK,EAAA,CAAA,SAAA,CAAAL,EAAC3C,EACC,CAAA,SAAA,CAAA2C,EAAC1C,EACC,CAAA,SAAA,CAAA2C,EAAC1C,GAAU,SAAS,WAAA,CAAA,EACpB0C,EAACzC,EAAW,CAAA,SAAAgB,EAAK,IAAK,CAAA,CAAA,EACxB,IAEClB,EACC,CAAA,SAAA,CAAA2C,EAAC1C,GAAU,SAAa,eAAA,CAAA,EACxB0C,EAACzC,EAAW,CAAA,SAAAgB,EAAK,KAAM,CAAA,CAAA,EACzB,IAEClB,EACC,CAAA,SAAA,CAAA2C,EAAC1C,GAAU,SAAc,gBAAA,CAAA,EACxB0C,EAAAzC,EAAA,CAAW,SAAKgB,EAAA,eAAiB,eAAe,CAAA,EACnD,IAEClB,EACC,CAAA,SAAA,CAAA2C,EAAC1C,GAAU,SAAY,cAAA,CAAA,EACtB0C,EAAAzC,EAAA,CACE,SAAKgB,EAAA,KAAK,OAAO,CAAC,EAAE,YAAA,EAAgBA,EAAK,KAAK,MAAM,CAAC,CACxD,CAAA,CAAA,EACF,CAAA,EACF,EAEAwB,EAACvC,EAAA,CACC,QAAS,IAAMmB,EAAa,EAAI,EAChC,WAAY,CAAE,MAAO,IAAK,EAC1B,SAAU,CAAE,MAAO,GAAK,EAExB,SAAA,CAAAqB,EAACK,EAAO,EAAA,EAAE,cAAA,CAAA,CAEZ,CAAA,EACF,CAAA,EAEJ,IAECnD,EACC,CAAA,SAAA,CAAA6C,EAAC5C,EACC,CAAA,SAAA,CAAA6C,EAACM,EAAW,EAAA,EAAE,iBAAA,EAEhB,EAECrB,EACCe,EAAC,IAAE,CAAA,SAAA,0BAAuB,EACxBjB,EAAa,OAAS,EACxBiB,EAACjC,GACE,SAAagB,EAAA,IAAKwB,mBAChBvC,EACC,CAAA,SAAA,CAAA+B,EAAC9B,EACC,CAAA,SAAA,CAAA8B,EAAC7B,EACE,CAAA,SAAA,GAAAsC,EAAAD,EAAY,SAAZ,YAAAC,EAAoB,OAAQ,SAAS,KACrCD,EAAY,QAAU,cAAA,EACzB,IACCpC,EAAkB,CAAA,OAAQoC,EAAY,OACpC,WAAY,OAAO,OAAO,CAAC,EAAE,cAC5BA,EAAY,OAAO,MAAM,CAAC,EAC9B,CAAA,EACF,IACCnC,EACC,CAAA,SAAA,CAAA2B,EAAC,IAAE,CAAA,SAAA,CAAA,SAAOL,EAAWa,EAAY,eAAe,CAAA,EAAE,IACjD,IAAE,CAAA,SAAA,CAAA,SACMV,EAAWU,EAAY,SAAS,EAAE,KACxCV,EAAWU,EAAY,OAAO,CAAA,EACjC,IACC,IAAE,CAAA,SAAA,CAAA,SAAOA,EAAY,MAAQ,WAAA,EAAY,IACzC,IAAE,CAAA,SAAA,CAAA,WAASA,EAAY,MAAA,EAAO,CAAA,EACjC,CAAA,GAnBoBA,EAAY,GAoBlC,EACD,CACH,CAAA,EAEAP,EAAC3B,GAAe,SAEhB,uCAAA,CAAA,EAEJ,CAAA,EACF,CACF,CAAA,CAAA,EA1JE2B,EAACtD,EACC,CAAA,SAAAqD,EAAClD,EACC,CAAA,SAAA,CAAAmD,EAAClD,GAAM,SAAO,SAAA,CAAA,EACdkD,EAACjD,GAAS,SAA2B,6BAAA,CAAA,CAAA,CACvC,CAAA,CACF,CAAA,CAuJN"}